// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import { ChatMessage } from '../game-protocol/chat-message.js';
import { DeltaStateMessage } from '../game-protocol/delta-state-message.js';
import { InitialStateMessage } from '../game-protocol/initial-state-message.js';
import { MatchInfo } from '../game-protocol/match-info.js';
import { PlayerInput } from '../game-protocol/player-input.js';
import { WelcomeMessage } from '../game-protocol/welcome-message.js';
export var MessagePayload;
(function (MessagePayload) {
    MessagePayload[MessagePayload["NONE"] = 0] = "NONE";
    MessagePayload[MessagePayload["WelcomeMessage"] = 1] = "WelcomeMessage";
    MessagePayload[MessagePayload["InitialStateMessage"] = 2] = "InitialStateMessage";
    MessagePayload[MessagePayload["DeltaStateMessage"] = 3] = "DeltaStateMessage";
    MessagePayload[MessagePayload["PlayerInput"] = 4] = "PlayerInput";
    MessagePayload[MessagePayload["ChatMessage"] = 5] = "ChatMessage";
    MessagePayload[MessagePayload["MatchInfo"] = 6] = "MatchInfo";
})(MessagePayload || (MessagePayload = {}));
export function unionToMessagePayload(type, accessor) {
    switch (MessagePayload[type]) {
        case 'NONE': return null;
        case 'WelcomeMessage': return accessor(new WelcomeMessage());
        case 'InitialStateMessage': return accessor(new InitialStateMessage());
        case 'DeltaStateMessage': return accessor(new DeltaStateMessage());
        case 'PlayerInput': return accessor(new PlayerInput());
        case 'ChatMessage': return accessor(new ChatMessage());
        case 'MatchInfo': return accessor(new MatchInfo());
        default: return null;
    }
}
export function unionListToMessagePayload(type, accessor, index) {
    switch (MessagePayload[type]) {
        case 'NONE': return null;
        case 'WelcomeMessage': return accessor(index, new WelcomeMessage());
        case 'InitialStateMessage': return accessor(index, new InitialStateMessage());
        case 'DeltaStateMessage': return accessor(index, new DeltaStateMessage());
        case 'PlayerInput': return accessor(index, new PlayerInput());
        case 'ChatMessage': return accessor(index, new ChatMessage());
        case 'MatchInfo': return accessor(index, new MatchInfo());
        default: return null;
    }
}
//# sourceMappingURL=message-payload.js.map