// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class ChatMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ChatMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsChatMessage(bb:flatbuffers.ByteBuffer, obj?:ChatMessage):ChatMessage {
  return (obj || new ChatMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsChatMessage(bb:flatbuffers.ByteBuffer, obj?:ChatMessage):ChatMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ChatMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

seq():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

playerId():string|null
playerId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
playerId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

username():string|null
username(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
username(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

timestamp():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startChatMessage(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addSeq(builder:flatbuffers.Builder, seq:bigint) {
  builder.addFieldInt64(0, seq, BigInt('0'));
}

static addPlayerId(builder:flatbuffers.Builder, playerIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, playerIdOffset, 0);
}

static addUsername(builder:flatbuffers.Builder, usernameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, usernameOffset, 0);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, messageOffset, 0);
}

static addTimestamp(builder:flatbuffers.Builder, timestamp:bigint) {
  builder.addFieldInt64(4, timestamp, BigInt('0'));
}

static endChatMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createChatMessage(builder:flatbuffers.Builder, seq:bigint, playerIdOffset:flatbuffers.Offset, usernameOffset:flatbuffers.Offset, messageOffset:flatbuffers.Offset, timestamp:bigint):flatbuffers.Offset {
  ChatMessage.startChatMessage(builder);
  ChatMessage.addSeq(builder, seq);
  ChatMessage.addPlayerId(builder, playerIdOffset);
  ChatMessage.addUsername(builder, usernameOffset);
  ChatMessage.addMessage(builder, messageOffset);
  ChatMessage.addTimestamp(builder, timestamp);
  return ChatMessage.endChatMessage(builder);
}
}
