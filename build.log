   Compiling proc-macro2 v1.0.95
   Compiling unicode-ident v1.0.18
   Compiling libc v0.2.172
   Compiling cfg-if v1.0.0
   Compiling autocfg v1.4.0
   Compiling version_check v0.9.5
   Compiling shlex v1.3.0
   Compiling typenum v1.18.0
   Compiling subtle v2.6.1
   Compiling smallvec v1.15.0
   Compiling pin-project-lite v0.2.16
   Compiling bytes v1.10.1
   Compiling log v0.4.27
   Compiling thiserror v1.0.69
   Compiling memchr v2.7.4
   Compiling zerocopy v0.8.25
   Compiling parking_lot_core v0.9.11
   Compiling const-oid v0.9.6
   Compiling scopeguard v1.2.0
   Compiling once_cell v1.21.3
   Compiling itoa v1.0.15
   Compiling pkg-config v0.3.32
   Compiling pin-utils v0.1.0
   Compiling icu_properties_data v2.0.1
   Compiling icu_normalizer_data v2.0.0
   Compiling stable_deref_trait v1.2.0
   Compiling vcpkg v0.2.15
   Compiling serde v1.0.219
   Compiling lazy_static v1.5.0
   Compiling cpufeatures v0.2.17
   Compiling portable-atomic v1.11.0
   Compiling semver v1.0.26
   Compiling litemap v0.8.0
   Compiling untrusted v0.9.0
   Compiling futures-sink v0.3.31
   Compiling ipnet v2.11.0
   Compiling writeable v0.6.1
   Compiling bitflags v1.3.2
   Compiling futures-core v0.3.31
   Compiling fnv v1.0.7
   Compiling futures-task v0.3.31
   Compiling futures-io v0.3.31
   Compiling base64ct v1.7.3
   Compiling crossbeam-utils v0.8.21
   Compiling base64 v0.21.7
   Compiling minimal-lexical v0.2.1
   Compiling getrandom v0.3.3
   Compiling percent-encoding v2.3.1
   Compiling num-conv v0.1.0
   Compiling time-core v0.1.4
   Compiling powerfmt v0.2.0
   Compiling utf8_iter v1.0.4
   Compiling syn v1.0.109
   Compiling httparse v1.10.1
   Compiling bitflags v2.9.1
   Compiling base16ct v0.2.0
   Compiling byteorder v1.5.0
   Compiling data-encoding v2.9.0
   Compiling opaque-debug v0.3.1
   Compiling openssl-probe v0.1.6
   Compiling hashbrown v0.15.3
   Compiling crc-catalog v2.4.0
   Compiling ryu v1.0.20
   Compiling equivalent v1.0.2
   Compiling serde_json v1.0.140
   Compiling foreign-types-shared v0.1.1
   Compiling unicode-xid v0.2.6
   Compiling openssl v0.10.73
   Compiling oid-registry v0.7.1
   Compiling regex-syntax v0.8.5
   Compiling ident_case v1.0.1
   Compiling native-tls v0.2.14
   Compiling httpdate v1.0.3
   Compiling try-lock v0.2.5
   Compiling strsim v0.11.1
   Compiling atomic-waker v1.1.2
   Compiling arc-swap v1.7.1
   Compiling mime v0.3.17
   Compiling base64 v0.22.1
   Compiling unicase v2.8.1
   Compiling rustls v0.21.12
   Compiling tower-service v0.3.3
   Compiling rustls v0.23.27
   Compiling spin v0.5.2
   Compiling tinyvec_macros v0.1.1
   Compiling regex-syntax v0.6.29
   Compiling untrusted v0.7.1
   Compiling rayon-core v1.12.1
   Compiling utf8parse v0.2.2
   Compiling protobuf v2.28.0
   Compiling zstd-safe v7.2.4
   Compiling utf-8 v0.7.6
   Compiling is_terminal_polyfill v1.70.1
   Compiling anstyle-query v1.1.2
   Compiling colorchoice v1.0.3
   Compiling overload v0.1.1
   Compiling prometheus v0.13.4
   Compiling sketches-ddsketch v0.2.2
   Compiling anyhow v1.0.98
   Compiling spin v0.9.8
   Compiling rustc-hash v1.1.0
   Compiling anstyle v1.0.10
   Compiling unsafe-libyaml v0.2.11
   Compiling either v1.15.0
   Compiling hex v0.4.3
   Compiling scoped-tls v1.0.1
   Compiling jiff v0.2.14
   Compiling seahash v4.1.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A substitute implementation of the compiler'\''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=proc-macro2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/proc-macro2' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.95 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=95 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="proc-macro"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' -C metadata=88bfa370a78d2953 -C extra-filename=-d156fb4e103a2963 --out-dir /home/ivo/massive_game_server/target/release/build/proc-macro2-d156fb4e103a2963 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unicode_ident CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='(MIT OR Apache-2.0) AND Unicode-3.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unicode-ident CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/unicode-ident' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.18 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=18 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name unicode_ident --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-ident-1.0.18/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=98d25e9645388d2e -C extra-filename=-fa0428afe5ab3280 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="extra_traits"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' -C metadata=306aa2628eb49e94 -C extra-filename=-69abcec6bca6a05d --out-dir /home/ivo/massive_game_server/target/release/build/libc-69abcec6bca6a05d -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=version_check CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/Cargo.toml CARGO_PKG_AUTHORS='Sergio Benitez <sb@sergio.bz>' CARGO_PKG_DESCRIPTION='Tiny crate to check the version of the installed/running rustc.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=version_check CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/SergioBenitez/version_check' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.9.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name version_check --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/version_check-0.9.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=b50ca773f2e6b408 -C extra-filename=-f7983a463131ed56 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=autocfg CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/Cargo.toml CARGO_PKG_AUTHORS='Josh Stone <cuviper@gmail.com>' CARGO_PKG_DESCRIPTION='Automatic cfg for Rust compiler features' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=autocfg CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/cuviper/autocfg' CARGO_PKG_RUST_VERSION=1.0 CARGO_PKG_VERSION=1.4.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name autocfg --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/autocfg-1.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=85cff782703c4708 -C extra-filename=-58cd4444f15aa9a0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cfg_if CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A macro to ergonomically define an item depending on a large number of #[cfg]
parameters. Structured like an if-else chain, the first matching branch is the
item that gets emitted.
' CARGO_PKG_HOMEPAGE='https://github.com/alexcrichton/cfg-if' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cfg-if CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/alexcrichton/cfg-if' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name cfg_if --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cfg-if-1.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiler_builtins", "core", "rustc-dep-of-std"))' -C metadata=879fa361b653a77c -C extra-filename=-81c58ebe951dc355 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' -C metadata=e0cec1609d731b6c -C extra-filename=-0d429fbf4bf1622c --out-dir /home/ivo/massive_game_server/target/release/build/libc-0d429fbf4bf1622c -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=shlex CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/Cargo.toml CARGO_PKG_AUTHORS='comex <comexk@gmail.com>:Fenhl <fenhl@fenhl.net>:Adrian Taylor <adetaylor@chromium.org>:Alex Touchet <alextouchet@outlook.com>:Daniel Parks <dp+git@oxidized.org>:Garrett Berg <googberg@gmail.com>' CARGO_PKG_DESCRIPTION='Split a string into shell words, like Python'\''s shlex.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=shlex CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/comex/rust-shlex' CARGO_PKG_RUST_VERSION=1.46.0 CARGO_PKG_VERSION=1.3.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name shlex --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=a3ccdf0432cb68aa -C extra-filename=-196e0b57a5226954 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/Cargo.toml CARGO_PKG_AUTHORS='Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>' CARGO_PKG_DESCRIPTION='Typenum is a Rust library for type-level numbers evaluated at
    compile time. It currently supports bits, unsigned integers, and signed
    integers. It also provides a type-level array of type-level numbers, but its
    implementation is incomplete.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=typenum CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/paholg/typenum' CARGO_PKG_RUST_VERSION=1.37.0 CARGO_PKG_VERSION=1.18.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("const-generics", "force_unix_path_separator", "i128", "no_std", "scale-info", "scale_info", "strict"))' -C metadata=ec3d04ecb5562913 -C extra-filename=-6dd32bb86a920067 --out-dir /home/ivo/massive_game_server/target/release/build/typenum-6dd32bb86a920067 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=subtle CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/Cargo.toml CARGO_PKG_AUTHORS='Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>' CARGO_PKG_DESCRIPTION='Pure-Rust traits and utilities for constant-time cryptographic implementations.' CARGO_PKG_HOMEPAGE='https://dalek.rs/' CARGO_PKG_LICENSE=BSD-3-Clause CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=subtle CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/subtle' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.6.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name subtle --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/subtle-2.6.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="i128"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("const-generics", "core_hint_black_box", "default", "i128", "nightly", "std"))' -C metadata=f439e5bdf116d0b6 -C extra-filename=-341d8fc9c8a90858 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=smallvec CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0/Cargo.toml CARGO_PKG_AUTHORS='The Servo Project Developers' CARGO_PKG_DESCRIPTION=''\''Small vector'\'' optimization: store up to a small number of items on the stack' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=smallvec CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-smallvec' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.15.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=15 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name smallvec --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="const_generics"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "bincode", "const_generics", "const_new", "debugger_visualizer", "drain_filter", "drain_keep_rest", "impl_bincode", "malloc_size_of", "may_dangle", "serde", "specialization", "union", "unty", "write"))' -C metadata=77650db5e130fe92 -C extra-filename=-c9c64d992937ac3a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pin_project_lite CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.16 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.16/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A lightweight version of pin-project written with declarative macros.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pin-project-lite CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/taiki-e/pin-project-lite' CARGO_PKG_RUST_VERSION=1.37 CARGO_PKG_VERSION=0.2.16 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=16 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pin_project_lite --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-lite-0.2.16/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs '--warn=clippy::undocumented_unsafe_blocks' '--warn=clippy::transmute_undefined_repr' '--warn=clippy::trailing_empty_array' --warn=single_use_lifetimes --warn=rust_2018_idioms '--warn=clippy::pedantic' --warn=non_ascii_idents '--warn=clippy::inline_asm_x86_att_syntax' --warn=improper_ctypes_definitions --warn=improper_ctypes --warn=deprecated_safe '--warn=clippy::default_union_representation' '--warn=clippy::as_underscore' '--warn=clippy::as_ptr_cast_mut' '--warn=clippy::all' '--allow=clippy::unreadable_literal' '--allow=clippy::type_complexity' '--allow=clippy::too_many_lines' '--allow=clippy::too_many_arguments' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::single_match_else' '--allow=clippy::single_match' '--allow=clippy::similar_names' '--allow=clippy::range_plus_one' '--allow=clippy::nonminimal_bool' '--allow=clippy::naive_bytecount' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_errors_doc' '--allow=clippy::manual_range_contains' '--allow=clippy::manual_assert' '--allow=clippy::lint_groups_priority' '--allow=clippy::incompatible_msrv' '--allow=clippy::float_cmp' '--allow=clippy::doc_markdown' '--allow=clippy::declare_interior_mutable_const' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=cb33fa85ca898f02 -C extra-filename=-7bc3285f3466e61b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=bytes CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.10.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.10.1/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Types and traits for working with bytes' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=bytes CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/bytes' CARGO_PKG_RUST_VERSION=1.39 CARGO_PKG_VERSION=1.10.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name bytes --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bytes-1.10.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(loom)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "extra-platforms", "serde", "std"))' -C metadata=1fef070614c09444 -C extra-filename=-1cd20c31651a0edf --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=log CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A lightweight logging facade for Rust
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=log CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/log' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.4.27 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=27 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name log --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("kv", "kv_serde", "kv_std", "kv_sval", "kv_unstable", "kv_unstable_serde", "kv_unstable_std", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval", "sval_ref", "value-bag"))' -C metadata=e76b2b852080e913 -C extra-filename=-6f5836c74bd72fc5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='derive(Error)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=thiserror CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/thiserror' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=1.0.69 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=69 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c5ce92584cec4715 -C extra-filename=-175c27efcc783a86 --out-dir /home/ivo/massive_game_server/target/release/build/thiserror-175c27efcc783a86 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=memchr CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.4/Cargo.toml CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>:bluss' CARGO_PKG_DESCRIPTION='Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for
1, 2 or 3 byte search and single substring search.
' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/memchr' CARGO_PKG_LICENSE='Unlicense OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memchr CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/memchr' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=2.7.4 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name memchr --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memchr-2.7.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compiler_builtins", "core", "default", "libc", "logging", "rustc-dep-of-std", "std", "use_std"))' -C metadata=954fed668e394ae4 -C extra-filename=-55c36a11c0159580 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/Cargo.toml CARGO_PKG_AUTHORS='Joshua Liebow-Feeser <joshlf@google.com>:Jack Wrenn <jswrenn@amazon.com>' CARGO_PKG_DESCRIPTION='Zerocopy makes zero-cost memory manipulation effortless. We write "unsafe" so you don'\''t have to.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='BSD-2-Clause OR Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerocopy CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/zerocopy' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=0.8.25 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=25 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="simd"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__internal_use_only_features_that_work_on_stable", "alloc", "derive", "float-nightly", "simd", "simd-nightly", "std", "zerocopy-derive"))' -C metadata=c41258061db5d2d0 -C extra-filename=-83ee173b1500392a --out-dir /home/ivo/massive_game_server/target/release/build/zerocopy-83ee173b1500392a -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='An advanced API for creating custom synchronization primitives.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=parking_lot_core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.9.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("backtrace", "deadlock_detection", "nightly", "petgraph", "thread-id"))' -C metadata=24af7924624b004a -C extra-filename=-928f4259f81e90e0 --out-dir /home/ivo/massive_game_server/target/release/build/parking_lot_core-928f4259f81e90e0 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
  |
  = note: this feature is not stably supported; its behavior can change in the future

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=const_oid CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-oid-0.9.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-oid-0.9.6/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard
as defined in ITU X.660, with support for BER/DER encoding/decoding as well as
heapless no_std (i.e. embedded) support
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=const-oid CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/const-oid' CARGO_PKG_RUST_VERSION=1.57 CARGO_PKG_VERSION=0.9.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name const_oid --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-oid-0.9.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "db", "std"))' -C metadata=b263057a6c7ba257 -C extra-filename=-a09718e5d2d70093 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
  |
  = note: this feature is not stably supported; its behavior can change in the future

warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
  |
  = note: this feature is not stably supported; its behavior can change in the future

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=scopeguard CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/Cargo.toml CARGO_PKG_AUTHORS=bluss CARGO_PKG_DESCRIPTION='A RAII scope guard that will run a given closure when it goes out of scope,
even if the code between panics (assuming unwinding panic).

Defines the macros `defer'\!'`, `defer_on_unwind'\!'`, `defer_on_success'\!'` as
shorthands for guards with one of the implemented strategies.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=scopeguard CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/bluss/scopeguard' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.2.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name scopeguard --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scopeguard-1.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "use_std"))' -C metadata=b63a23b3ad820e42 -C extra-filename=-85bc9e96188a4f2d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
  |
  = note: this feature is not stably supported; its behavior can change in the future

warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
  |
  = note: this feature is not stably supported; its behavior can change in the future

warning: unexpected `cfg` condition name: `manual_codegen_check`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/shlex-1.3.0/src/bytes.rs:353:12
    |
353 | #[cfg_attr(manual_codegen_check, inline(never))]
    |            ^^^^^^^^^^^^^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(manual_codegen_check)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(manual_codegen_check)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=once_cell CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/Cargo.toml CARGO_PKG_AUTHORS='Aleksey Kladov <aleksey.kladov@gmail.com>' CARGO_PKG_DESCRIPTION='Single assignment cells and lazy values.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=once_cell CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/matklad/once_cell' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=1.21.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name once_cell --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/once_cell-1.21.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="race"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "atomic-polyfill", "critical-section", "default", "parking_lot", "portable-atomic", "race", "std", "unstable"))' -C metadata=8d9830a21c6ecaf5 -C extra-filename=-9ba434f6998147a5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=itoa CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Fast integer primitive to string conversion' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=itoa CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/itoa' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=1.0.15 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name itoa --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/itoa-1.0.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("no-panic"))' -C metadata=622dfa7da800a455 -C extra-filename=-4f6fbb8eef03411c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pkg_config CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.32 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.32/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A library to run the pkg-config system tool at build time in order to be used in
Cargo build scripts.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pkg-config CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/pkg-config-rs' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=0.3.32 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=32 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pkg_config --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkg-config-0.3.32/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c7250741302d44dc -C extra-filename=-84c8eb8b5e55f551 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pin_utils CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/Cargo.toml CARGO_PKG_AUTHORS='Josef Brandl <mail@josefbrandl.de>' CARGO_PKG_DESCRIPTION='Utilities for pinning
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pin-utils CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang-nursery/pin-utils' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pin_utils --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-utils-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=79d717a6ed1da4d5 -C extra-filename=-b3851b467213096d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `cfg-if` (lib) generated 5 warnings
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_properties crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=dbab44b1f55b1a77 -C extra-filename=-bd287bc43a49f2e1 --out-dir /home/ivo/massive_game_server/target/release/build/icu_properties_data-bd287bc43a49f2e1 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_normalizer crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=0d0866267a622801 -C extra-filename=-65f53dd2544a5111 --out-dir /home/ivo/massive_game_server/target/release/build/icu_normalizer_data-65f53dd2544a5111 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=stable_deref_trait CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/Cargo.toml CARGO_PKG_AUTHORS='Robert Grosse <n210241048576@gmail.com>' CARGO_PKG_DESCRIPTION='An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=stable_deref_trait CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/storyyeller/stable_deref_trait' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.2.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name stable_deref_trait --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=32d5a839bffe60cd -C extra-filename=-91844861366bfe7b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=vcpkg CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/Cargo.toml CARGO_PKG_AUTHORS='Jim McGrath <jimmc2@gmail.com>' CARGO_PKG_DESCRIPTION='A library to find native dependencies in a vcpkg tree at build
time in order to be used in Cargo build scripts.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=vcpkg CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mcgoo/vcpkg-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.15 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name vcpkg --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/vcpkg-0.2.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=ec223ee11da0e84a -C extra-filename=-5db52f9f832f1b0d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A generic serialization/deserialization framework' CARGO_PKG_HOMEPAGE='https://serde.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde CARGO_PKG_README=crates-io.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/serde' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.219 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=219 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="derive"' --cfg 'feature="rc"' --cfg 'feature="serde_derive"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive", "rc", "serde_derive", "std", "unstable"))' -C metadata=1b09fbfe0d3a054c -C extra-filename=-3054f8c279077b79 --out-dir /home/ivo/massive_game_server/target/release/build/serde-3054f8c279077b79 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-oid-0.9.6/src/arcs.rs:25:30
   |
25 | const ARC_MAX_BYTES: usize = mem::size_of::<Arc>();
   |                              ^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/const-oid-0.9.6/src/lib.rs:17:5
   |
17 |     unused_qualifications
   |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
   |
25 - const ARC_MAX_BYTES: usize = mem::size_of::<Arc>();
25 + const ARC_MAX_BYTES: usize = size_of::<Arc>();
   |

warning: `pin-project-lite` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=lazy_static CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/Cargo.toml CARGO_PKG_AUTHORS='Marvin Löbel <loebel.marvin@gmail.com>' CARGO_PKG_DESCRIPTION='A macro for declaring lazily evaluated statics in Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=lazy_static CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang-nursery/lazy-static.rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.5.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name lazy_static --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("spin", "spin_no_std"))' -C metadata=e756cc9c573dd25b -C extra-filename=-da0dd1f668339419 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `unicode-ident` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cpufeatures CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets, 
with no_std support and support for mobile targets including Android and iOS
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cpufeatures CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.17 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=17 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name cpufeatures --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cpufeatures-0.2.17/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=732a0511a8307c7c -C extra-filename=-f8f5bc6ced230a73 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=stable_deref_trait CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/Cargo.toml CARGO_PKG_AUTHORS='Robert Grosse <n210241048576@gmail.com>' CARGO_PKG_DESCRIPTION='An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=stable_deref_trait CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/storyyeller/stable_deref_trait' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.2.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name stable_deref_trait --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stable_deref_trait-1.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=7ec5947ddc8f0625 -C extra-filename=-f61a000fef546cfd --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Portable atomic types including support for 128-bit atomics, atomic float, etc.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=portable-atomic CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/taiki-e/portable-atomic' CARGO_PKG_RUST_VERSION=1.34 CARGO_PKG_VERSION=1.11.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 '--warn=clippy::unused_trait_names' --warn=unreachable_pub --warn=unnameable_types --warn=unexpected_cfgs '--warn=clippy::undocumented_unsafe_blocks' '--warn=clippy::transmute_undefined_repr' '--warn=clippy::trailing_empty_array' --warn=single_use_lifetimes --warn=rust_2018_idioms '--warn=clippy::pedantic' --warn=non_ascii_idents '--warn=clippy::inline_asm_x86_att_syntax' --warn=improper_ctypes_definitions --warn=improper_ctypes --warn=deprecated_safe '--warn=clippy::default_union_representation' '--warn=clippy::as_underscore' '--warn=clippy::as_ptr_cast_mut' '--warn=clippy::all' '--allow=clippy::unreadable_literal' '--allow=clippy::type_complexity' '--allow=clippy::too_many_lines' '--allow=clippy::too_many_arguments' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::single_match_else' '--allow=clippy::single_match' '--allow=clippy::similar_names' '--allow=clippy::range_plus_one' '--allow=clippy::nonminimal_bool' '--allow=clippy::naive_bytecount' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_errors_doc' '--allow=clippy::manual_range_contains' '--allow=clippy::manual_assert' '--allow=clippy::lint_groups_priority' '--allow=clippy::incompatible_msrv' '--allow=clippy::float_cmp' '--allow=clippy::doc_markdown' '--allow=clippy::declare_interior_mutable_const' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(target_arch,values("xtensa"))' --check-cfg 'cfg(target_arch,values("amdgpu"))' --check-cfg 'cfg(target_os,values("psx"))' --check-cfg 'cfg(target_env,values("psx"))' --check-cfg 'cfg(target_feature,values("lse2","lse128","rcpc3"))' --check-cfg 'cfg(target_feature,values("quadword-atomics"))' --check-cfg 'cfg(target_feature,values("zaamo","zabha"))' --check-cfg 'cfg(target_pointer_width,values("128"))' --check-cfg 'cfg(portable_atomic_test_outline_atomics_detect_false,qemu,valgrind)' --check-cfg 'cfg(portable_atomic_no_outline_atomics,portable_atomic_outline_atomics,portable_atomic_unstable_f16,portable_atomic_unstable_f128)' --check-cfg 'cfg(portable_atomic_unstable_coerce_unsized)' --cfg 'feature="default"' --cfg 'feature="fallback"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("critical-section", "default", "disable-fiq", "fallback", "float", "force-amo", "require-cas", "s-mode", "serde", "std", "unsafe-assume-single-core"))' -C metadata=0ab239292bcb0e9d -C extra-filename=-286fd327b687fd0f --out-dir /home/ivo/massive_game_server/target/release/build/portable-atomic-286fd327b687fd0f -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser and evaluator for Cargo'\''s flavor of Semantic Versioning' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=semver CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/semver' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.26 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=26 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std"))' -C metadata=11de14ffeb28b1af -C extra-filename=-0baae7f6c5fe40d8 --out-dir /home/ivo/massive_game_server/target/release/build/semver-0baae7f6c5fe40d8 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=litemap CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A key-value Map implementation based on a flat, sorted Vec.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=litemap CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name litemap --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "serde", "testing", "yoke"))' -C metadata=6175813a8f602f88 -C extra-filename=-099b00c0c487b1a7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=untrusted CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.9.0/Cargo.toml CARGO_PKG_AUTHORS='Brian Smith <brian@briansmith.org>' CARGO_PKG_DESCRIPTION='Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=ISC CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=untrusted CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/untrusted' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name untrusted --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f6282a848b4a93b0 -C extra-filename=-9c8402ccffd23cf8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_sink CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The asynchronous `Sink` trait for the futures-rs library.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-sink CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_sink --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-sink-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=844a2cd6ba64ce1f -C extra-filename=-f80d8fdd34ee7a48 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `scopeguard` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ipnet CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.11.0/Cargo.toml CARGO_PKG_AUTHORS='Kris Price <kris@krisprice.nz>' CARGO_PKG_DESCRIPTION='Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly called IP prefixes. The new `IpNet`, `Ipv4Net`, and `Ipv6Net` types build on the existing `IpAddr`, `Ipv4Addr`, and `Ipv6Addr` types already provided in Rust'\''s standard library and align to their design to stay consistent. The module also provides useful traits that extend `Ipv4Addr` and `Ipv6Addr` with methods for `Add`, `Sub`, `BitAnd`, and `BitOr` operations. The module only uses stable feature so it is guaranteed to compile using the stable toolchain.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ipnet CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/krisprice/ipnet' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.11.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ipnet --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ipnet-2.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "heapless", "json", "schemars", "ser_as_str", "serde", "std"))' -C metadata=065963f33192957c -C extra-filename=-adee52ea694b89e3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `pin-utils` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=writeable CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A more efficient alternative to fmt::Display' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=writeable CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.6.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name writeable --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("either"))' -C metadata=cb0c78f610972b3d -C extra-filename=-f9d7826b6e876464 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=bitflags CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-1.3.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-1.3.2/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A macro to generate structures which behave like bitflags.
' CARGO_PKG_HOMEPAGE='https://github.com/bitflags/bitflags' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=bitflags CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/bitflags/bitflags' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.3.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name bitflags --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-1.3.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiler_builtins", "core", "default", "example_generated", "rustc-dep-of-std"))' -C metadata=582db21990f47cde -C extra-filename=-46a4504de37150bd --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The core traits and types in for the `futures` library.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_core --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-core-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "portable-atomic", "std", "unstable"))' -C metadata=03cbfc2f6a310fd8 -C extra-filename=-fd24579616c7819b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=fnv CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Fowler–Noll–Vo hash function' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 / MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=fnv CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-fnv' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.7 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name fnv --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=51301e3d532fe478 -C extra-filename=-c408408c4d03e488 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_task CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Tools for working with tasks.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-task CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_task --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-task-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "std", "unstable"))' -C metadata=0a458e986be639a0 -C extra-filename=-81c5a2831674e59e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_io CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-io CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_io --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-io-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std", "unstable"))' -C metadata=34d4ac4fd557ea65 -C extra-filename=-63be57cdc0e7ba7b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=base64ct CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64ct-1.7.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64ct-1.7.3/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of
data-dependent branches/LUTs and thereby provides portable "best effort"
constant-time operation and embedded-friendly no_std support
' CARGO_PKG_HOMEPAGE='https://github.com/RustCrypto/formats/tree/master/base64ct' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=base64ct CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=1.7.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name base64ct --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64ct-1.7.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "std"))' -C metadata=797ce238614ec7cd -C extra-filename=-08cdec4d81f5df38 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Utilities for concurrent programming' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-utils CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.8.21 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=21 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs '--allow=clippy::lint_groups_priority' '--allow=clippy::declare_interior_mutable_const' --check-cfg 'cfg(crossbeam_loom)' --check-cfg 'cfg(crossbeam_sanitize)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "loom", "nightly", "std"))' -C metadata=d53b29f49877efb2 -C extra-filename=-8ef92cd58c4570d5 --out-dir /home/ivo/massive_game_server/target/release/build/crossbeam-utils-8ef92cd58c4570d5 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=writeable CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A more efficient alternative to fmt::Display' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=writeable CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.6.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name writeable --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/writeable-0.6.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("either"))' -C metadata=dc7f38cf548811af -C extra-filename=-62635abe4920d665 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=base64 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/Cargo.toml CARGO_PKG_AUTHORS='Alice Maz <alice@alicemaz.com>:Marshall Pierce <marshall@mpierce.org>' CARGO_PKG_DESCRIPTION='encodes and decodes base64 as bytes or utf8' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=base64 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/marshallpierce/rust-base64' CARGO_PKG_RUST_VERSION=1.48.0 CARGO_PKG_VERSION=0.21.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name base64 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=b65098e4e25f685c -C extra-filename=-f0e2d0711532d445 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=minimal_lexical CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/minimal-lexical-0.2.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/minimal-lexical-0.2.1/Cargo.toml CARGO_PKG_AUTHORS='Alex Huszagh <ahuszagh@gmail.com>' CARGO_PKG_DESCRIPTION='Fast float parsing conversion routines.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=minimal-lexical CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Alexhuszagh/minimal-lexical' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name minimal_lexical --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/minimal-lexical-0.2.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compact", "default", "lint", "nightly", "std"))' -C metadata=cfa63256ebb7cca9 -C extra-filename=-e781b75510f3dd9f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.3.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(getrandom_backend, values("custom", "efi_rng", "rdrand", "rndr", "linux_getrandom", "linux_raw", "wasm_js"))' --check-cfg 'cfg(getrandom_msan)' --check-cfg 'cfg(getrandom_windows_legacy)' --check-cfg 'cfg(getrandom_test_linux_fallback)' --check-cfg 'cfg(getrandom_test_linux_without_fallback)' --check-cfg 'cfg(getrandom_test_netbsd_fallback)' --check-cfg 'cfg(target_os, values("cygwin"))' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("rustc-dep-of-std", "std", "wasm_js"))' -C metadata=733544c4ab441add -C extra-filename=-96bbb3e9b32c4613 --out-dir /home/ivo/massive_game_server/target/release/build/getrandom-96bbb3e9b32c4613 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=percent_encoding CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Percent encoding and decoding' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=percent-encoding CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url/' CARGO_PKG_RUST_VERSION=1.51 CARGO_PKG_VERSION=2.3.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name percent_encoding --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=d46ce8b6baf6c79d -C extra-filename=-cf34d17ff91aac01 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=litemap CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A key-value Map implementation based on a flat, sorted Vec.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=litemap CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name litemap --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/litemap-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "serde", "testing", "yoke"))' -C metadata=7f85211ad4535096 -C extra-filename=-da5b9d21cc3a9d09 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_conv CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <jacob@jhpratt.dev>' CARGO_PKG_DESCRIPTION='`num_conv` is a crate to convert between integer types without using `as` casts. This provides
better certainty when refactoring, makes the exact behavior of code more explicit, and allows using
turbofish syntax.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-conv CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jhpratt/num-conv' CARGO_PKG_RUST_VERSION=1.57.0 CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_conv --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unused --warn=unreachable-pub '--deny=clippy::std-instead-of-core' --warn=missing-docs '--deny=clippy::alloc-instead-of-core' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=199e51f9b2b4ff01 -C extra-filename=-061312d144ea953f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=time_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <open-source@jhpratt.dev>:Time contributors' CARGO_PKG_DESCRIPTION='This crate is an implementation detail and should not be relied upon directly.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=time-core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/time-rs/time' CARGO_PKG_RUST_VERSION=1.67.1 CARGO_PKG_VERSION=0.1.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name time_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unused '--warn=clippy::nursery' '--warn=clippy::all' --warn=variant-size-differences '--warn=clippy::use-debug' '--warn=clippy::unwrap-used' '--warn=clippy::unwrap-in-result' --warn=unused-qualifications --warn=unused-lifetimes --warn=unused-import-braces --deny=unstable-syntax-pre-expansion --deny=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::unnested-or-patterns' --deny=unnameable-test-items '--warn=clippy::uninlined-format-args' '--warn=clippy::unimplemented' --deny=unexpected_cfgs '--warn=rustdoc::unescaped-backticks' '--deny=clippy::undocumented-unsafe-blocks' --deny=unconditional-recursion --warn=trivial-numeric-casts --warn=trivial-casts '--warn=clippy::todo' --deny=suspicious-double-ref-op '--deny=clippy::std-instead-of-core' --warn=single-use-lifetimes '--warn=clippy::semicolon-outside-block' '--warn=rustdoc::private-doc-tests' '--warn=clippy::print-stdout' --deny=overlapping-range-endpoints --deny=opaque-hidden-inferred-bound '--warn=clippy::obfuscated-if-else' --warn=noop-method-call --deny=non-ascii-idents --deny=named-arguments-used-positionally '--warn=clippy::missing-enforced-import-renames' '--warn=clippy::missing-docs-in-private-items' --warn=missing-docs --warn=missing-debug-implementations --warn=missing-copy-implementations --warn=missing-abi --warn=meta-variable-misuse '--warn=clippy::manual-let-else' --warn=macro-use-extern-crate --warn=let-underscore --warn=keyword-idents --deny=invalid-value --deny=invalid-reference-casting --deny=invalid-nan-comparisons --deny=invalid-macro-export-arguments --deny=invalid-from-utf8 --deny=improper-ctypes-definitions --deny=improper-ctypes --deny=hidden-glob-reexports '--warn=clippy::get-unwrap' --deny=future-incompatible '--warn=clippy::explicit-auto-deref' --deny=drop-bounds --deny=deref-nullptr '--warn=clippy::decimal-literal-representation' '--warn=clippy::dbg-macro' --deny=dangling-pointers-from-temporaries --deny=const-item-mutation --deny=clashing-extern-declarations --deny=ambiguous-glob-reexports '--deny=clippy::alloc-instead-of-core' --allow=unstable-name-collisions '--allow=clippy::uninhabited-references' '--allow=clippy::redundant-pub-crate' '--allow=clippy::option-if-let-else' --check-cfg 'cfg(__ui_tests)' --check-cfg 'cfg(bench)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=4fc1ed6c5e9e2bce -C extra-filename=-7aa6c134402dc081 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=powerfmt CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <jacob@jhpratt.dev>' CARGO_PKG_DESCRIPTION='    `powerfmt` is a library that provides utilities for formatting values. This crate makes it
    significantly easier to support filling to a minimum width with alignment, avoid heap
    allocation, and avoid repetitive calculations.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=powerfmt CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jhpratt/powerfmt' CARGO_PKG_RUST_VERSION=1.67.0 CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name powerfmt --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "macros", "std"))' -C metadata=3fe89bec6e98a851 -C extra-filename=-e2f1d8d69a62852e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=utf8_iter CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/Cargo.toml CARGO_PKG_AUTHORS='Henri Sivonen <hsivonen@hsivonen.fi>' CARGO_PKG_DESCRIPTION='Iterator by char over potentially-invalid UTF-8 in &[u8]' CARGO_PKG_HOMEPAGE='https://docs.rs/utf8_iter/' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=utf8_iter CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hsivonen/utf8_iter' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.4 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name utf8_iter --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=e10c3c4c6f8c3f3b -C extra-filename=-90173e31af3bae98 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=time_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <open-source@jhpratt.dev>:Time contributors' CARGO_PKG_DESCRIPTION='This crate is an implementation detail and should not be relied upon directly.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=time-core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/time-rs/time' CARGO_PKG_RUST_VERSION=1.67.1 CARGO_PKG_VERSION=0.1.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name time_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-core-0.1.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unused '--warn=clippy::nursery' '--warn=clippy::all' --warn=variant-size-differences '--warn=clippy::use-debug' '--warn=clippy::unwrap-used' '--warn=clippy::unwrap-in-result' --warn=unused-qualifications --warn=unused-lifetimes --warn=unused-import-braces --deny=unstable-syntax-pre-expansion --deny=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::unnested-or-patterns' --deny=unnameable-test-items '--warn=clippy::uninlined-format-args' '--warn=clippy::unimplemented' --deny=unexpected_cfgs '--warn=rustdoc::unescaped-backticks' '--deny=clippy::undocumented-unsafe-blocks' --deny=unconditional-recursion --warn=trivial-numeric-casts --warn=trivial-casts '--warn=clippy::todo' --deny=suspicious-double-ref-op '--deny=clippy::std-instead-of-core' --warn=single-use-lifetimes '--warn=clippy::semicolon-outside-block' '--warn=rustdoc::private-doc-tests' '--warn=clippy::print-stdout' --deny=overlapping-range-endpoints --deny=opaque-hidden-inferred-bound '--warn=clippy::obfuscated-if-else' --warn=noop-method-call --deny=non-ascii-idents --deny=named-arguments-used-positionally '--warn=clippy::missing-enforced-import-renames' '--warn=clippy::missing-docs-in-private-items' --warn=missing-docs --warn=missing-debug-implementations --warn=missing-copy-implementations --warn=missing-abi --warn=meta-variable-misuse '--warn=clippy::manual-let-else' --warn=macro-use-extern-crate --warn=let-underscore --warn=keyword-idents --deny=invalid-value --deny=invalid-reference-casting --deny=invalid-nan-comparisons --deny=invalid-macro-export-arguments --deny=invalid-from-utf8 --deny=improper-ctypes-definitions --deny=improper-ctypes --deny=hidden-glob-reexports '--warn=clippy::get-unwrap' --deny=future-incompatible '--warn=clippy::explicit-auto-deref' --deny=drop-bounds --deny=deref-nullptr '--warn=clippy::decimal-literal-representation' '--warn=clippy::dbg-macro' --deny=dangling-pointers-from-temporaries --deny=const-item-mutation --deny=clashing-extern-declarations --deny=ambiguous-glob-reexports '--deny=clippy::alloc-instead-of-core' --allow=unstable-name-collisions '--allow=clippy::uninhabited-references' '--allow=clippy::redundant-pub-crate' '--allow=clippy::option-if-let-else' --check-cfg 'cfg(__ui_tests)' --check-cfg 'cfg(bench)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=cac9fed510d2d0a9 -C extra-filename=-6a9b06cae416a169 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_conv CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <jacob@jhpratt.dev>' CARGO_PKG_DESCRIPTION='`num_conv` is a crate to convert between integer types without using `as` casts. This provides
better certainty when refactoring, makes the exact behavior of code more explicit, and allows using
turbofish syntax.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-conv CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jhpratt/num-conv' CARGO_PKG_RUST_VERSION=1.57.0 CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_conv --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-conv-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unused --warn=unreachable-pub '--deny=clippy::std-instead-of-core' --warn=missing-docs '--deny=clippy::alloc-instead-of-core' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=97c297cdb7e5555f -C extra-filename=-a05ddb3da68e16d1 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser for Rust source code' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=syn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/syn' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.109 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="clone-impls"' --cfg 'feature="default"' --cfg 'feature="derive"' --cfg 'feature="extra-traits"' --cfg 'feature="full"' --cfg 'feature="parsing"' --cfg 'feature="printing"' --cfg 'feature="proc-macro"' --cfg 'feature="quote"' --cfg 'feature="visit"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "test", "visit", "visit-mut"))' -C metadata=a821946d0661bf09 -C extra-filename=-c1bfe886b1bcdb61 --out-dir /home/ivo/massive_game_server/target/release/build/syn-c1bfe886b1bcdb61 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A tiny, safe, speedy, zero-copy HTTP/1.x parser.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=httparse CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/httparse' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.10.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(httparse_simd)' --check-cfg 'cfg(httparse_simd_target_feature_avx2)' --check-cfg 'cfg(httparse_simd_target_feature_sse42)' --check-cfg 'cfg(httparse_simd_neon_intrinsics)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=2166239a741bdb79 -C extra-filename=-5bd3fcb4342e36f0 --out-dir /home/ivo/massive_game_server/target/release/build/httparse-5bd3fcb4342e36f0 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=bitflags CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A macro to generate structures which behave like bitflags.
' CARGO_PKG_HOMEPAGE='https://github.com/bitflags/bitflags' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=bitflags CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/bitflags/bitflags' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=2.9.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name bitflags --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "bytemuck", "compiler_builtins", "core", "example_generated", "rustc-dep-of-std", "serde", "std"))' -C metadata=419f86b97de46c05 -C extra-filename=-e03d6ba3add70dfb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=base16ct CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids
any usages of data-dependent branches/LUTs and thereby provides portable
"best effort" constant-time operation and embedded-friendly no_std support
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=base16ct CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/base16ct' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name base16ct --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "std"))' -C metadata=eb96d30a67c39295 -C extra-filename=-4d5477911a30ff24 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=byteorder CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/Cargo.toml CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='Library for reading/writing numbers in big-endian and little-endian.' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/byteorder' CARGO_PKG_LICENSE='Unlicense OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=byteorder CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/byteorder' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=1.5.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name byteorder --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/byteorder-1.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "i128", "std"))' -C metadata=ce92b250e6ef87fd -C extra-filename=-c14529b9ba2f3b32 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=smallvec CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0/Cargo.toml CARGO_PKG_AUTHORS='The Servo Project Developers' CARGO_PKG_DESCRIPTION=''\''Small vector'\'' optimization: store up to a small number of items on the stack' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=smallvec CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-smallvec' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.15.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=15 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name smallvec --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smallvec-1.15.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="const_generics"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "bincode", "const_generics", "const_new", "debugger_visualizer", "drain_filter", "drain_keep_rest", "impl_bincode", "malloc_size_of", "may_dangle", "serde", "specialization", "union", "unty", "write"))' -C metadata=fab2dec50c093123 -C extra-filename=-2515caadcd8dc652 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=data_encoding CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/data-encoding-2.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/data-encoding-2.9.0/Cargo.toml CARGO_PKG_AUTHORS='Julien Cretin <git@ia0.eu>' CARGO_PKG_DESCRIPTION='Efficient and customizable data-encoding functions like base64, base32, and hex' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=data-encoding CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/ia0/data-encoding' CARGO_PKG_RUST_VERSION=1.48 CARGO_PKG_VERSION=2.9.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name data_encoding --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/data-encoding-2.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unused-results --warn=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::undocumented-unsafe-blocks' --warn=missing-docs --warn=missing-debug-implementations --warn=let-underscore-drop --warn=elided-lifetimes-in-paths --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=c6adcea54a65250d -C extra-filename=-ee91a5b3944ccfc4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=opaque_debug CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/opaque-debug-0.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/opaque-debug-0.3.1/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Macro for opaque Debug trait implementation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=opaque-debug CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name opaque_debug --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/opaque-debug-0.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=aa8f7b32481c64f7 -C extra-filename=-b2225bd4fd1d92ff --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=openssl_probe CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-probe-0.1.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-probe-0.1.6/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Tool for helping to find SSL certificate locations on the system for OpenSSL
' CARGO_PKG_HOMEPAGE='https://github.com/alexcrichton/openssl-probe' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl-probe CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/alexcrichton/openssl-probe' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.1.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name openssl_probe --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-probe-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=dae06e92fc0f8db7 -C extra-filename=-f73a30f25e09f5f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hashbrown CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.3/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='A Rust port of Google'\''s SwissTable hash map' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hashbrown CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/hashbrown' CARGO_PKG_RUST_VERSION=1.65.0 CARGO_PKG_VERSION=0.15.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=15 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hashbrown --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.15.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "allocator-api2", "compiler_builtins", "core", "default", "default-hasher", "equivalent", "inline-more", "nightly", "raw-entry", "rayon", "rustc-dep-of-std", "rustc-internal-api", "serde"))' -C metadata=d0334cd4e00e5f58 -C extra-filename=-68d6e18ecc37e8a7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crc_catalog CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-catalog-2.4.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-catalog-2.4.0/Cargo.toml CARGO_PKG_AUTHORS='Akhil Velagapudi <akhilvelagapudi@gmail.com>' CARGO_PKG_DESCRIPTION='Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed as simple Rust structs.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crc-catalog CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/akhilles/crc-catalog.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.4.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crc_catalog --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-catalog-2.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=17061810391a4f78 -C extra-filename=-797ef9c2522f9fba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ryu CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Fast floating point to string conversion' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR BSL-1.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ryu CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/ryu' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=1.0.20 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=20 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ryu --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ryu-1.0.20/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("no-panic", "small"))' -C metadata=aed2599f359ea497 -C extra-filename=-dfc97d2c04cc1031 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=equivalent CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Traits for key comparison in maps.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=equivalent CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/indexmap-rs/equivalent' CARGO_PKG_RUST_VERSION=1.6 CARGO_PKG_VERSION=1.0.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name equivalent --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=3925463742c5ccbf -C extra-filename=-4d8a6c486f5c59e8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A JSON serialization file format' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_json CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/json' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.140 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=140 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arbitrary_precision", "default", "float_roundtrip", "indexmap", "preserve_order", "raw_value", "std", "unbounded_depth"))' -C metadata=8b5bab908687fadd -C extra-filename=-ccdfd2425b086cd7 --out-dir /home/ivo/massive_game_server/target/release/build/serde_json-ccdfd2425b086cd7 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=foreign_types_shared CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-shared-0.1.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-shared-0.1.1/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='An internal crate used by foreign-types' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=foreign-types-shared CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/sfackler/foreign-types' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name foreign_types_shared --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-shared-0.1.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=45b7901ee37a86ba -C extra-filename=-9707cfccb1e8b1f4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unicode_xid CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-xid-0.2.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-xid-0.2.6/Cargo.toml CARGO_PKG_AUTHORS='erick.tryzelaar <erick.tryzelaar@gmail.com>:kwantam <kwantam@gmail.com>:Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Determine whether characters have the XID_Start
or XID_Continue properties according to
Unicode Standard Annex #31.
' CARGO_PKG_HOMEPAGE='https://github.com/unicode-rs/unicode-xid' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unicode-xid CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-rs/unicode-xid' CARGO_PKG_RUST_VERSION=1.17 CARGO_PKG_VERSION=0.2.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name unicode_xid --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicode-xid-0.2.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bench", "default", "no_std"))' -C metadata=6612a33fcb734279 -C extra-filename=-47f904d4b6836050 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='OpenSSL bindings' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.10.73 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=73 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc", "bindgen", "default", "unstable_boringssl", "v101", "v102", "v110", "v111", "vendored"))' -C metadata=351dd555ba17234e -C extra-filename=-218e9df45f7a9a07 --out-dir /home/ivo/massive_game_server/target/release/build/openssl-218e9df45f7a9a07 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=utf8_iter CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/Cargo.toml CARGO_PKG_AUTHORS='Henri Sivonen <hsivonen@hsivonen.fi>' CARGO_PKG_DESCRIPTION='Iterator by char over potentially-invalid UTF-8 in &[u8]' CARGO_PKG_HOMEPAGE='https://docs.rs/utf8_iter/' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=utf8_iter CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hsivonen/utf8_iter' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.4 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name utf8_iter --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8_iter-1.0.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=9f5d9a43efa1be9a -C extra-filename=-bf959edf6d052201 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `parking_lot_core` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Object Identifier (OID) database' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/oid-registry' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=oid-registry CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/oid-registry.git' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="crypto"' --cfg 'feature="default"' --cfg 'feature="kdf"' --cfg 'feature="nist_algs"' --cfg 'feature="pkcs1"' --cfg 'feature="pkcs12"' --cfg 'feature="pkcs7"' --cfg 'feature="pkcs9"' --cfg 'feature="registry"' --cfg 'feature="x509"' --cfg 'feature="x962"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("crypto", "default", "kdf", "ms_spc", "nist_algs", "pkcs1", "pkcs12", "pkcs7", "pkcs9", "registry", "x500", "x509", "x962"))' -C metadata=10c4098372298778 -C extra-filename=-f78a1a72ad315f0b --out-dir /home/ivo/massive_game_server/target/release/build/oid-registry-f78a1a72ad315f0b -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=regex_syntax CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.5/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='A regular expression parser.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=regex-syntax CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/regex/tree/master/regex-syntax' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.8.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name regex_syntax --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.8.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --cfg 'feature="unicode"' --cfg 'feature="unicode-age"' --cfg 'feature="unicode-bool"' --cfg 'feature="unicode-case"' --cfg 'feature="unicode-gencat"' --cfg 'feature="unicode-perl"' --cfg 'feature="unicode-script"' --cfg 'feature="unicode-segment"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "default", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"))' -C metadata=07d9acea7f2629fc -C extra-filename=-222491375154f6c7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=fnv CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Fowler–Noll–Vo hash function' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 / MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=fnv CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-fnv' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.7 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name fnv --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/fnv-1.0.7/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=2799e37fa9226269 -C extra-filename=-e21eb3332409182c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ident_case CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/Cargo.toml CARGO_PKG_AUTHORS='Ted Driggs <ted.driggs@outlook.com>' CARGO_PKG_DESCRIPTION='Utility for applying case rules to Rust identifiers.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ident_case CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TedDriggs/ident_case' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ident_case --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=b84ed74520eada71 -C extra-filename=-f6160353c9350937 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=percent_encoding CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Percent encoding and decoding' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=percent-encoding CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url/' CARGO_PKG_RUST_VERSION=1.51 CARGO_PKG_VERSION=2.3.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name percent_encoding --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=76a38ce39008b265 -C extra-filename=-ca9e75f992189b17 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=log CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A lightweight logging facade for Rust
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=log CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/log' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.4.27 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=27 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name log --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.27/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("kv", "kv_serde", "kv_std", "kv_sval", "kv_unstable", "kv_unstable_serde", "kv_unstable_std", "kv_unstable_sval", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "serde", "std", "sval", "sval_ref", "value-bag"))' -C metadata=7bfbdea8549fef39 -C extra-filename=-6f227cc9ddaa23ca --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=atomic_waker CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2/Cargo.toml CARGO_PKG_AUTHORS='Stjepan Glavina <stjepang@gmail.com>:Contributors to futures-rs' CARGO_PKG_DESCRIPTION='A synchronization primitive for task wakeup' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=atomic-waker CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/smol-rs/atomic-waker' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=1.1.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name atomic_waker --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("portable-atomic"))' -C metadata=88298ded1f8d3aae -C extra-filename=-3ab40da958b332f4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='A wrapper over a platform'\''s native TLS implementation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=native-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-native-tls' CARGO_PKG_RUST_VERSION=1.80.0 CARGO_PKG_VERSION=0.2.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alpn", "vendored"))' -C metadata=22a2f3c874ce51da -C extra-filename=-157eae7b5c6bd417 --out-dir /home/ivo/massive_game_server/target/release/build/native-tls-157eae7b5c6bd417 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=httpdate CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httpdate-1.0.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httpdate-1.0.3/Cargo.toml CARGO_PKG_AUTHORS='Pyfisch <pyfisch@posteo.org>' CARGO_PKG_DESCRIPTION='HTTP date parsing and formatting' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=httpdate CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/pyfisch/httpdate' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name httpdate --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httpdate-1.0.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=bbe368bace148ccd -C extra-filename=-fde3b54d65e3df39 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=try_lock CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.5/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A lightweight atomic lock.' CARGO_PKG_HOMEPAGE='https://github.com/seanmonstar/try-lock' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=try-lock CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/try-lock' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name try_lock --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/try-lock-0.2.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=6b3a80a4b5117069 -C extra-filename=-de5ef713621ea2fc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=strsim CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/Cargo.toml CARGO_PKG_AUTHORS='Danny Guo <danny@dannyguo.com>:maxbachmann <oss@maxbachmann.de>' CARGO_PKG_DESCRIPTION='Implementations of string similarity metrics. Includes Hamming, Levenshtein,
OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice.
' CARGO_PKG_HOMEPAGE='https://github.com/rapidfuzz/strsim-rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=strsim CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rapidfuzz/strsim-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.11.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name strsim --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/strsim-0.11.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=1b70ef5a18db1f3f -C extra-filename=-15288e39fe80c4a8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=arc_swap CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arc-swap-1.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arc-swap-1.7.1/Cargo.toml CARGO_PKG_AUTHORS='Michal '\''vorner'\'' Vaner <vorner@vorner.cz>' CARGO_PKG_DESCRIPTION='Atomically swappable Arc' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=arc-swap CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/vorner/arc-swap' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.7.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name arc_swap --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/arc-swap-1.7.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("experimental-strategies", "experimental-thread-local", "internal-test-strategies", "serde", "weak"))' -C metadata=6611ea5db661ae88 -C extra-filename=-0608e6621d058498 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unicase CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A case-insensitive wrapper around strings.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unicase CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/unicase' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.8.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name unicase --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("nightly"))' -C metadata=db240467119df407 -C extra-filename=-f6189482674629f4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.23.27 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=23 CARGO_PKG_VERSION_PATCH=27 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(bench)' --check-cfg 'cfg(coverage_nightly)' --check-cfg 'cfg(read_buf)' --cfg 'feature="ring"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc-rs", "aws_lc_rs", "brotli", "custom-provider", "default", "fips", "hashbrown", "log", "logging", "prefer-post-quantum", "read_buf", "ring", "rustversion", "std", "tls12", "zlib"))' -C metadata=7e33c415d5247808 -C extra-filename=-00497ae92884ab9c --out-dir /home/ivo/massive_game_server/target/release/build/rustls-00497ae92884ab9c -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=mime CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Strongly Typed Mimes' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=mime CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/mime' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.17 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=17 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name mime --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime-0.3.17/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=4b20bf26e1472855 -C extra-filename=-727c609573810913 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=bitflags CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A macro to generate structures which behave like bitflags.
' CARGO_PKG_HOMEPAGE='https://github.com/bitflags/bitflags' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=bitflags CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/bitflags/bitflags' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=2.9.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name bitflags --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bitflags-2.9.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "bytemuck", "compiler_builtins", "core", "example_generated", "rustc-dep-of-std", "serde", "std"))' -C metadata=a8b3283769511e4b -C extra-filename=-e9ee1768cb8db9b9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.21.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="quic"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("dangerous_configuration", "default", "log", "logging", "quic", "read_buf", "rustversion", "secret_extraction", "tls12"))' -C metadata=e4ac5f17dc5a2710 -C extra-filename=-c6f93f1b583916ca --out-dir /home/ivo/massive_game_server/target/release/build/rustls-c6f93f1b583916ca -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tower_service CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.3/Cargo.toml CARGO_PKG_AUTHORS='Tower Maintainers <team@tower-rs.com>' CARGO_PKG_DESCRIPTION='Trait representing an asynchronous, request / response based, client or server.
' CARGO_PKG_HOMEPAGE='https://github.com/tower-rs/tower' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tower-service CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tower-rs/tower' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tower_service --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tower-service-0.3.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=b961df010bb82b51 -C extra-filename=-2099fdbbb5987da4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=base64 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/Cargo.toml CARGO_PKG_AUTHORS='Marshall Pierce <marshall@mpierce.org>' CARGO_PKG_DESCRIPTION='encodes and decodes base64 as bytes or utf8' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=base64 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/marshallpierce/rust-base64' CARGO_PKG_RUST_VERSION=1.48.0 CARGO_PKG_VERSION=0.22.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=22 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name base64 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=210441a1c5f0d6a9 -C extra-filename=-60595947c2ad589b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=spin CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/Cargo.toml CARGO_PKG_AUTHORS='Mathijs van de Nes <git@mathijs.vd-nes.nl>:John Ericson <git@JohnEricson.me>' CARGO_PKG_DESCRIPTION='Synchronization primitives based on spinning.
They may contain data, are usable without `std`,
and static initializers are available.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=spin CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mvdnes/spin-rs.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.5.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name spin --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=860039ec40aa275b -C extra-filename=-3e06e0d1a23dfa8d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tinyvec_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec_macros-0.1.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec_macros-0.1.1/Cargo.toml CARGO_PKG_AUTHORS='Soveu <marx.tomasz@gmail.com>' CARGO_PKG_DESCRIPTION='Some macros for tiny containers' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0 OR Zlib' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tinyvec_macros CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Soveu/tinyvec_macros' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tinyvec_macros --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec_macros-0.1.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=48771524e8213807 -C extra-filename=-373a4547eafe8c80 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=regex_syntax CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='A regular expression parser.' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/regex' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=regex-syntax CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/regex' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.6.29 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=29 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name regex_syntax --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="unicode"' --cfg 'feature="unicode-age"' --cfg 'feature="unicode-bool"' --cfg 'feature="unicode-case"' --cfg 'feature="unicode-gencat"' --cfg 'feature="unicode-perl"' --cfg 'feature="unicode-script"' --cfg 'feature="unicode-segment"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment"))' -C metadata=58e39ee5f5f23f93 -C extra-filename=-3daa3f8c99f08e1b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Safe low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-safe CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=7.2.4 CARGO_PKG_VERSION_MAJOR=7 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --allow=non_upper_case_globals --cfg 'feature="arrays"' --cfg 'feature="legacy"' --cfg 'feature="std"' --cfg 'feature="zdict_builder"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arrays", "bindgen", "debug", "default", "doc-cfg", "experimental", "fat-lto", "legacy", "no_asm", "pkg-config", "seekable", "std", "thin", "thin-lto", "zdict_builder", "zstdmt"))' -C metadata=3c720bb84808d2fd -C extra-filename=-049845a2e9942d54 --out-dir /home/ivo/massive_game_server/target/release/build/zstd-safe-049845a2e9942d54 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/Cargo.toml CARGO_PKG_AUTHORS='Niko Matsakis <niko@alum.mit.edu>:Josh Stone <cuviper@gmail.com>' CARGO_PKG_DESCRIPTION='Core APIs for Rayon' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rayon-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rayon-rs/rayon' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=1.12.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("web_spin_lock"))' -C metadata=387fb9bd27d817fc -C extra-filename=-68ea8053857c6cfb --out-dir /home/ivo/massive_game_server/target/release/build/rayon-core-68ea8053857c6cfb -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=utf8parse CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8parse-0.2.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8parse-0.2.2/Cargo.toml CARGO_PKG_AUTHORS='Joe Wilm <joe@jwilm.com>:Christian Duerr <contact@christianduerr.com>' CARGO_PKG_DESCRIPTION='Table-driven UTF-8 parser' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=utf8parse CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/alacritty/vte' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name utf8parse --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf8parse-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "nightly"))' -C metadata=a02c46d8056c57ae -C extra-filename=-6f70808de701aa9e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/Cargo.toml CARGO_PKG_AUTHORS='Stepan Koltsov <stepan.koltsov@gmail.com>' CARGO_PKG_DESCRIPTION='Rust implementation of Google protocol buffers
' CARGO_PKG_HOMEPAGE='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=protobuf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.28.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=28 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bytes", "serde", "serde_derive", "with-bytes", "with-serde"))' -C metadata=fc3e96fbaccfc681 -C extra-filename=-2f6db7ae11fdc143 --out-dir /home/ivo/massive_game_server/target/release/build/protobuf-2f6db7ae11fdc143 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=untrusted CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Brian Smith <brian@briansmith.org>' CARGO_PKG_DESCRIPTION='Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=ISC CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=untrusted CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/untrusted' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name untrusted --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.7.1/src/untrusted.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=bf70706b2f421b83 -C extra-filename=-de2bfbb5082988b2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=is_terminal_polyfill CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/is_terminal_polyfill-1.70.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/is_terminal_polyfill-1.70.1/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Polyfill for `is_terminal` stdlib feature for use with older MSRVs' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=is_terminal_polyfill CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/polyfill-rs/is_terminal_polyfill' CARGO_PKG_RUST_VERSION=1.70.0 CARGO_PKG_VERSION=1.70.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=70 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name is_terminal_polyfill --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/is_terminal_polyfill-1.70.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::single_match_else' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' --warn=rust_2018_idioms '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::match_wildcard_for_single_variants' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default"))' -C metadata=d1c4c157ccfa2a9c -C extra-filename=-bf14e2c2fb8b823c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=anstyle_query CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-query-1.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-query-1.1.2/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Look up colored console capabilities' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anstyle-query CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/anstyle.git' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=1.1.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name anstyle_query --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-query-1.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=25bcf0d8d3e1f25f -C extra-filename=-f600ecc8ef0bf79a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=utf8 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf-8-0.7.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf-8-0.7.6/Cargo.toml CARGO_PKG_AUTHORS='Simon Sapin <simon.sapin@exyr.org>' CARGO_PKG_DESCRIPTION='Incremental, zero-copy UTF-8 decoding with error handling' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=utf-8 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/SimonSapin/rust-utf8' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name utf8 --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/utf-8-0.7.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=859ea8a281e19d49 -C extra-filename=-b49c39bef4fb9914 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=colorchoice CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorchoice-1.0.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorchoice-1.0.3/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Global override of color control' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=colorchoice CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/anstyle.git' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=1.0.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name colorchoice --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/colorchoice-1.0.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f49e353c267a8259 -C extra-filename=-52c867356deec618 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=overload CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/overload-0.1.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/overload-0.1.1/Cargo.toml CARGO_PKG_AUTHORS='Daniel Salvadori <danaugrs@gmail.com>' CARGO_PKG_DESCRIPTION='Provides a macro to simplify operator overloading.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=overload CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/danaugrs/overload' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name overload --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/overload-0.1.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=9ebb557d1986b4bf -C extra-filename=-5008f61643c24de0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4/Cargo.toml CARGO_PKG_AUTHORS='overvenus@gmail.com:siddontang@gmail.com:vistaswx@gmail.com' CARGO_PKG_DESCRIPTION='Prometheus instrumentation library for Rust applications.' CARGO_PKG_HOMEPAGE='https://github.com/tikv/rust-prometheus' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=prometheus CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tikv/rust-prometheus' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="protobuf"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "gen", "libc", "nightly", "process", "procfs", "protobuf", "protobuf-codegen-pure", "push", "reqwest"))' -C metadata=271ce8597e672ae1 -C extra-filename=-0a9cecb0cc358527 --out-dir /home/ivo/massive_game_server/target/release/build/prometheus-0a9cecb0cc358527 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unicase CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A case-insensitive wrapper around strings.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unicase CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/unicase' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.8.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name unicase --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unicase-2.8.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("nightly"))' -C metadata=1e7c56a0a116c40b -C extra-filename=-ffee3c732d4bff6b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=spin CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.9.8 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.9.8/Cargo.toml CARGO_PKG_AUTHORS='Mathijs van de Nes <git@mathijs.vd-nes.nl>:John Ericson <git@JohnEricson.me>:Joshua Barretto <joshua.s.barretto@gmail.com>' CARGO_PKG_DESCRIPTION='Spin-based synchronization primitives' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=spin CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mvdnes/spin-rs.git' CARGO_PKG_RUST_VERSION=1.38 CARGO_PKG_VERSION=0.9.8 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=8 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name spin --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.9.8/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="mutex"' --cfg 'feature="spin_mutex"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("barrier", "default", "fair_mutex", "lazy", "lock_api", "lock_api_crate", "mutex", "once", "portable-atomic", "portable_atomic", "rwlock", "spin_mutex", "std", "ticket_mutex", "use_ticket_mutex"))' -C metadata=e261551f5bfabff0 -C extra-filename=-3e83cf9a6c3708ee --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sketches_ddsketch CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sketches-ddsketch-0.2.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sketches-ddsketch-0.2.2/Cargo.toml CARGO_PKG_AUTHORS='Mike Heffner <mikeh@fesnel.com>' CARGO_PKG_DESCRIPTION='A direct port of the Golang DDSketch implementation.
' CARGO_PKG_HOMEPAGE='https://github.com/mheffner/rust-sketches-ddsketch' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sketches-ddsketch CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mheffner/rust-sketches-ddsketch' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sketches_ddsketch --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sketches-ddsketch-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("serde", "use_serde"))' -C metadata=b4228297806edde7 -C extra-filename=-958fd49d4523466f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Flexible concrete Error type built on std::error::Error' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anyhow CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/anyhow' CARGO_PKG_RUST_VERSION=1.39 CARGO_PKG_VERSION=1.0.98 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=98 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("backtrace", "default", "std"))' -C metadata=9b2933a5291c0fb7 -C extra-filename=-12c10a919f0b9d0a --out-dir /home/ivo/massive_game_server/target/release/build/anyhow-12c10a919f0b9d0a -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `proc-macro2` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustc_hash CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-1.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-1.1.0/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='speed, non-cryptographic hash used in rustc' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Apache-2.0/MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustc-hash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang-nursery/rustc-hash' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.1.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustc_hash --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc-hash-1.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=5d15d9301297572f -C extra-filename=-227cfb528a67c219 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=anstyle CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-1.0.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-1.0.10/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='ANSI text styling' CARGO_PKG_HOMEPAGE='https://github.com/rust-cli/anstyle' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anstyle CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/anstyle.git' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=1.0.10 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name anstyle --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-1.0.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=c4d675bc48cf8c9b -C extra-filename=-89b6f415f092c9e2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=unsafe_libyaml CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unsafe-libyaml-0.2.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unsafe-libyaml-0.2.11/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='libyaml transpiled to rust by c2rust' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=unsafe-libyaml CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/unsafe-libyaml' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.2.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name unsafe_libyaml --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/unsafe-libyaml-0.2.11/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=599394c1e68bd0b3 -C extra-filename=-b6d8f3a3d985b8fc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=either CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/Cargo.toml CARGO_PKG_AUTHORS=bluss CARGO_PKG_DESCRIPTION='The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=either CARGO_PKG_README=README-crates.io.md CARGO_PKG_REPOSITORY='https://github.com/rayon-rs/either' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=1.15.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=15 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name either --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/either-1.15.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std", "use_std"))' -C metadata=c0e43b3bf7024277 -C extra-filename=-9299886be813588b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hex CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hex-0.4.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hex-0.4.3/Cargo.toml CARGO_PKG_AUTHORS='KokaKiwi <kokakiwi@kokakiwi.net>' CARGO_PKG_DESCRIPTION='Encoding and decoding data into/from hexadecimal representation.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hex CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/KokaKiwi/rust-hex' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.4.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hex --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hex-0.4.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "serde", "std"))' -C metadata=e0c524720b491bc6 -C extra-filename=-9c84efedc25576cb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling futures-channel v0.3.31
   Compiling tracing-core v0.1.33
   Compiling pem-rfc7468 v0.7.0
   Compiling crc v3.3.0
   Compiling foreign-types v0.3.2
warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/upper.rs:49:14
   |
49 |     unsafe { crate::String::from_utf8_unchecked(dst) }
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/lib.rs:13:5
   |
13 |     unused_qualifications
   |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
   |
49 -     unsafe { crate::String::from_utf8_unchecked(dst) }
49 +     unsafe { String::from_utf8_unchecked(dst) }
   |

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/mutex.rs:1:48
  |
1 | use core::sync::atomic::{AtomicBool, Ordering, spin_loop_hint as cpu_relax};
  |                                                ^^^^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.22.1/src/lib.rs:223:13
    |
223 | #![cfg_attr(feature = "cargo-clippy", allow(clippy::cast_lossless))]
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `default`, and `std`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/src/lib.rs:223:13
    |
223 | #![cfg_attr(feature = "cargo-clippy", allow(clippy::cast_lossless))]
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `default`, and `std`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base64-0.21.7/src/lib.rs:232:5
    |
232 |     warnings
    |     ^^^^^^^^
    = note: `#[warn(unexpected_cfgs)]` implied by `#[warn(warnings)]`

warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/percent-encoding-2.3.1/src/lib.rs:466:35
    |
466 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default
help: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses
    |
466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
466 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));
    |
help: use explicit `std::ptr::eq` method to compare metadata and addresses
    |
466 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
466 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));
    |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lazy_static-1.5.0/src/inline_lazy.rs:26:43
   |
26 |     pub fn get<F>(&'static self, f: F) -> &T
   |                                           ^ this elided lifetime gets resolved as `'static`
   |
   = note: `#[warn(elided_named_lifetimes)]` on by default
help: consider specifying it explicitly
   |
26 |     pub fn get<F>(&'static self, f: F) -> &'static T
   |                                            +++++++

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=jiff CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.14/Cargo.toml CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='A date-time library that encourages you to jump into the pit of success.

This library is heavily inspired by the Temporal project.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Unlicense OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=jiff CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/jiff' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=0.2.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name jiff --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jiff-0.2.14/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "js", "logging", "perf-inline", "serde", "static", "static-tz", "std", "tz-fat", "tz-system", "tzdb-bundle-always", "tzdb-bundle-platform", "tzdb-concatenated", "tzdb-zoneinfo"))' -C metadata=4ebe68099234298d -C extra-filename=-27d689b01f2cf06d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/mutex.rs:136:17
    |
136 |                 cpu_relax();
    |                 ^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/rw_lock.rs:8:26
  |
8 | use core::sync::atomic::{spin_loop_hint as cpu_relax, AtomicUsize, Ordering};
  |                          ^^^^^^^^^^^^^^

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/rw_lock.rs:170:25
    |
170 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/error.rs:28:22
   |
28 | impl From<Error> for core::fmt::Error {
   |                      ^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
28 - impl From<Error> for core::fmt::Error {
28 + impl From<Error> for fmt::Error {
   |

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=seahash CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/seahash-4.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/seahash-4.1.0/Cargo.toml CARGO_PKG_AUTHORS='ticki <ticki@users.noreply.github.com>:Tom Almeida <tom@tommoa.me>' CARGO_PKG_DESCRIPTION='A blazingly fast, portable hash function with proven statistical guarantees.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=seahash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://gitlab.redox-os.org/redox-os/seahash' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=4.1.0 CARGO_PKG_VERSION_MAJOR=4 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name seahash --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/seahash-4.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "use_std"))' -C metadata=1cfded42c97dc09f -C extra-filename=-4259b25369966ef5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `is_terminal_polyfill` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=scoped_tls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scoped-tls-1.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scoped-tls-1.0.1/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Library implementation of the standard library'\''s old `scoped_thread_local'\!'`
macro for providing scoped access to thread local storage (TLS) so any type can
be stored into TLS.
' CARGO_PKG_HOMEPAGE='https://github.com/alexcrichton/scoped-tls' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=scoped-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/alexcrichton/scoped-tls' CARGO_PKG_RUST_VERSION=1.59 CARGO_PKG_VERSION=1.0.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name scoped_tls --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/scoped-tls-1.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=25c6d58566458ff4 -C extra-filename=-a6667ef7568db59f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `futures-task` (lib) generated 5 warnings (5 duplicates)
warning: `futures-io` (lib) generated 5 warnings (5 duplicates)
warning: `thiserror` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,proc-macro CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_PROC_MACRO=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A substitute implementation of the compiler'\''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=proc-macro2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/proc-macro2' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.95 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=95 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/proc-macro2-31eaae1416ecb1da/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/proc-macro2-d156fb4e103a2963/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='An advanced API for creating custom synchronization primitives.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=parking_lot_core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.9.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/parking_lot_core-a7aac1b702259a5e/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/parking_lot_core-928f4259f81e90e0/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_channel CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Channels for asynchronous communication using futures-rs.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-channel CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_channel --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-channel-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="futures-sink"' --cfg 'feature="sink"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "cfg-target-has-atomic", "default", "futures-sink", "sink", "std", "unstable"))' -C metadata=db21cd9f471a17b7 -C extra-filename=-f9d05d7240e9556c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_sink=/home/ivo/massive_game_server/target/release/deps/libfutures_sink-f80d8fdd34ee7a48.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.33 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.33/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Core primitives for application-level tracing.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.1.33 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=33 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing_core --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-core-0.1.33/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(flaky_tests)' --check-cfg 'cfg(tracing_unstable)' --cfg 'feature="default"' --cfg 'feature="once_cell"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "once_cell", "std", "valuable"))' -C metadata=de60c6fc8245b665 -C extra-filename=-9ebeaf34b772be2a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pem_rfc7468 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-rfc7468-0.7.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-rfc7468-0.7.0/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a
strict subset of the original Privacy-Enhanced Mail encoding intended
specifically for use with cryptographic keys, certificates, and other messages.
Provides a no_std-friendly, constant-time implementation suitable for use with
cryptographic private keys.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pem-rfc7468 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/pem-rfc7468' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.7.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pem_rfc7468 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-rfc7468-0.7.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "std"))' -C metadata=0d0b81b817ad1727 -C extra-filename=-14195eae82e6a7d2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64ct=/home/ivo/massive_game_server/target/release/deps/libbase64ct-08cdec4d81f5df38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling form_urlencoded v1.2.1
   Compiling nom v7.1.3
   Compiling http v0.2.12
   Compiling aho-corasick v1.1.3
   Compiling want v0.3.1
   Compiling rustls-pemfile v1.0.4
   Compiling http v1.3.1
   Compiling raw-cpuid v11.5.0
   Compiling flatc-rust v0.2.0
   Compiling anstyle-parse v0.2.6
   Compiling tinyvec v1.9.0
   Compiling encoding_rs v0.8.35
   Compiling sharded-slab v0.1.7
   Compiling thread_local v1.1.8
   Compiling nu-ansi-term v0.46.0
warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/untrusted-0.7.1/src/untrusted.rs:91:5
   |
91 |     box_pointers,
   |     ^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/rw_lock.rs:284:25
    |
284 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

warning: trait `AssertSync` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/atomic-waker-1.1.2/src/lib.rs:226:15
    |
226 |         trait AssertSync: Sync {}
    |               ^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/error.rs:29:26
   |
29 |     fn from(_: Error) -> core::fmt::Error {
   |                          ^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
29 -     fn from(_: Error) -> core::fmt::Error {
29 +     fn from(_: Error) -> fmt::Error {
   |

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/rw_lock.rs:320:25
    |
320 |                 None => cpu_relax(),
    |                         ^^^^^^^^^

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-3.3.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-3.3.0/Cargo.toml CARGO_PKG_AUTHORS='Rui Hu <code@mrhooray.com>:Akhil Velagapudi <4@4khil.com>' CARGO_PKG_DESCRIPTION='Rust implementation of CRC with support of various standards' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mrhooray/crc-rs.git' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=3.3.0 CARGO_PKG_VERSION_MAJOR=3 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crc-3.3.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=4450f17573a85780 -C extra-filename=-7db4ebee9806bc43 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crc_catalog=/home/ivo/massive_game_server/target/release/deps/libcrc_catalog-797ef9c2522f9fba.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/base16ct-0.2.0/src/error.rs:30:9
   |
30 |         core::fmt::Error::default()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
30 -         core::fmt::Error::default()
30 +         fmt::Error::default()
   |

warning: unexpected `cfg` condition name: `__powerfmt_docs`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/src/lib.rs:6:13
  |
6 | #![cfg_attr(__powerfmt_docs, feature(doc_auto_cfg, rustc_attrs))]
  |             ^^^^^^^^^^^^^^^
  |
  = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(__powerfmt_docs)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(__powerfmt_docs)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=foreign_types CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-0.3.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-0.3.2/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='A framework for Rust wrappers over C APIs' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=foreign-types CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/foreign-types' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name foreign_types --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/foreign-types-0.3.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=eee7ba950fe8c3c9 -C extra-filename=-59ff5f5b07df7c0e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern foreign_types_shared=/home/ivo/massive_game_server/target/release/deps/libforeign_types_shared-9707cfccb1e8b1f4.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `httpdate` (lib) generated 5 warnings (5 duplicates)
warning: `rustc-hash` (lib) generated 5 warnings (5 duplicates)
warning: `libc` (build script) generated 5 warnings (5 duplicates)
warning: `fnv` (lib) generated 5 warnings (5 duplicates)
warning: `shlex` (lib) generated 6 warnings (5 duplicates)
warning: `libc` (build script) generated 5 warnings (5 duplicates)
warning: `getrandom` (build script) generated 5 warnings (5 duplicates)
warning: `arc-swap` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='derive(Error)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=thiserror CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/thiserror' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=1.0.69 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=69 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/thiserror-43657f4ba536c021/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/thiserror-175c27efcc783a86/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=form_urlencoded CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=form_urlencoded CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url' CARGO_PKG_RUST_VERSION=1.51 CARGO_PKG_VERSION=1.2.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name form_urlencoded --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=959037c8a7903152 -C extra-filename=-c98379f6f3f8d959 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern percent_encoding=/home/ivo/massive_game_server/target/release/deps/libpercent_encoding-cf34d17ff91aac01.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=nom CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/Cargo.toml CARGO_PKG_AUTHORS='contact@geoffroycouprie.com' CARGO_PKG_DESCRIPTION='A byte-oriented, zero-copy, parser combinators library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=nom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Geal/nom' CARGO_PKG_RUST_VERSION=1.48 CARGO_PKG_VERSION=7.1.3 CARGO_PKG_VERSION_MAJOR=7 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name nom --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "docsrs", "std"))' -C metadata=577800fcd391fde5 -C extra-filename=-c01c72e5dad33115 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern minimal_lexical=/home/ivo/massive_game_server/target/release/deps/libminimal_lexical-e781b75510f3dd9f.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=http CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A set of types for representing HTTP requests and responses.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=http CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/http' CARGO_PKG_RUST_VERSION=1.49.0 CARGO_PKG_VERSION=0.2.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name http --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=4f44c6e9c607c5d3 -C extra-filename=-b51de42da7d0e4ba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern fnv=/home/ivo/massive_game_server/target/release/deps/libfnv-c408408c4d03e488.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=aho_corasick CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.3/Cargo.toml CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='Fast multiple substring searching.' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/aho-corasick' CARGO_PKG_LICENSE='Unlicense OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=aho-corasick CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/aho-corasick' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=1.1.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name aho_corasick --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aho-corasick-1.1.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="perf-literal"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "logging", "perf-literal", "std"))' -C metadata=d325099da3280f0f -C extra-filename=-a0239b3850ef4fef --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=want CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Detect when another Future wants a result.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=want CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/want' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name want --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/want-0.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=66ad2c517f7cb322 -C extra-filename=-79ca31671eaec4a4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern try_lock=/home/ivo/massive_game_server/target/release/deps/libtry_lock-de5ef713621ea2fc.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustls_pemfile CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pemfile-1.0.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pemfile-1.0.4/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Basic .pem file parser for keys and certificates' CARGO_PKG_HOMEPAGE='https://github.com/rustls/pemfile' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls-pemfile CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/pemfile' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.0.4 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustls_pemfile --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pemfile-1.0.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=7f00be65d61a4f19 -C extra-filename=-c8ff8bb7c7dd7c8c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-f0e2d0711532d445.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=http CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A set of types for representing HTTP requests and responses.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=http CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/http' CARGO_PKG_RUST_VERSION=1.49.0 CARGO_PKG_VERSION=1.3.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name http --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-1.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=c1e3c9f6c47a283e -C extra-filename=-b360abd0c6ae15c0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern fnv=/home/ivo/massive_game_server/target/release/deps/libfnv-c408408c4d03e488.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=raw_cpuid CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/raw-cpuid-11.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/raw-cpuid-11.5.0/Cargo.toml CARGO_PKG_AUTHORS='Gerd Zellweger <mail@gerdzellweger.com>' CARGO_PKG_DESCRIPTION='A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The implementation closely resembles the Intel CPUID manual description. The library does only depend on libcore.' CARGO_PKG_HOMEPAGE='https://github.com/gz/rust-cpuid' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=raw-cpuid CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/gz/rust-cpuid' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=11.5.0 CARGO_PKG_VERSION_MAJOR=11 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name raw_cpuid --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/raw-cpuid-11.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("clap", "cli", "display", "serde", "serde_derive", "serde_json", "serialize", "std", "termimad"))' -C metadata=dadfb29f6be75c25 -C extra-filename=-2de6822feda370e3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-e03d6ba3add70dfb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=anstyle_parse CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-parse-0.2.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-parse-0.2.6/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Parse ANSI Style Escapes' CARGO_PKG_HOMEPAGE='https://github.com/rust-cli/anstyle' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anstyle-parse CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/anstyle.git' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=0.2.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name anstyle_parse --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstyle-parse-0.2.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="default"' --cfg 'feature="utf8"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("core", "default", "utf8"))' -C metadata=e79cab59fa224891 -C extra-filename=-b3e44010f6fb75de --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern utf8parse=/home/ivo/massive_game_server/target/release/deps/libutf8parse-6f70808de701aa9e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=flatc_rust CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatc-rust-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatc-rust-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Vlad Frolov <frolvlad@gmail.com>' CARGO_PKG_DESCRIPTION='FlatBuffers flatc command as API' CARGO_PKG_HOMEPAGE='https://github.com/frol/flatc-rust' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=flatc-rust CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/frol/flatc-rust' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name flatc_rust --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatc-rust-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c9b428d70bf182df -C extra-filename=-020505a8b3f5a4f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f227cc9ddaa23ca.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tinyvec CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec-1.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec-1.9.0/Cargo.toml CARGO_PKG_AUTHORS='Lokathor <zefria@gmail.com>' CARGO_PKG_DESCRIPTION='`tinyvec` provides 100% safe vec-like data structures.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Zlib OR Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tinyvec CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Lokathor/tinyvec' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.9.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tinyvec --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinyvec-1.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="tinyvec_macros"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arbitrary", "borsh", "debugger_visualizer", "default", "experimental_write_impl", "generic-array", "grab_spare_slice", "latest_stable_rust", "nightly_slice_partition_dedup", "real_blackbox", "rustc_1_40", "rustc_1_55", "rustc_1_57", "rustc_1_61", "serde", "std", "tinyvec_macros"))' -C metadata=3855c6d3c11a672a -C extra-filename=-27f78054032708ee --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern tinyvec_macros=/home/ivo/massive_game_server/target/release/deps/libtinyvec_macros-373a4547eafe8c80.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=encoding_rs CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/Cargo.toml CARGO_PKG_AUTHORS='Henri Sivonen <hsivonen@hsivonen.fi>' CARGO_PKG_DESCRIPTION='A Gecko-oriented implementation of the Encoding Standard' CARGO_PKG_HOMEPAGE='https://docs.rs/encoding_rs/' CARGO_PKG_LICENSE='(Apache-2.0 OR MIT) AND BSD-3-Clause' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=encoding_rs CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hsivonen/encoding_rs' CARGO_PKG_RUST_VERSION=1.36 CARGO_PKG_VERSION=0.8.35 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=35 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name encoding_rs --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "any_all_workaround", "default", "fast-big5-hanzi-encode", "fast-gb-hanzi-encode", "fast-hangul-encode", "fast-hanja-encode", "fast-kanji-encode", "fast-legacy-encode", "less-slow-big5-hanzi-encode", "less-slow-gb-hanzi-encode", "less-slow-kanji-encode", "serde", "simd-accel"))' -C metadata=acfd2391eac21ecb -C extra-filename=-356873a44416e474 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling pem v3.0.5
   Compiling waitgroup v0.1.2
warning: use of deprecated trait `std::ascii::AsciiExt`: use inherent methods instead
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/src/lib.rs:25:17
   |
25 | use std::ascii::AsciiExt;
   |                 ^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: unexpected `cfg` condition name: `__powerfmt_docs`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/src/lib.rs:7:13
  |
7 | #![cfg_attr(__powerfmt_docs, allow(internal_features))]
  |             ^^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(__powerfmt_docs)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(__powerfmt_docs)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=thread_local CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.8 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.8/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='Per-object thread-local storage' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=thread_local CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Amanieu/thread_local-rs' CARGO_PKG_RUST_VERSION=1.59 CARGO_PKG_VERSION=1.1.8 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=8 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name thread_local --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.8/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("nightly"))' -C metadata=8cb3d7b34d58901a -C extra-filename=-094698888bf25b52 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pemfile-1.0.4/src/pemfile.rs:132:6
    |
132 | ) -> std::io::Result<usize> {
    |      ^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pemfile-1.0.4/src/lib.rs:41:5
    |
41  |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
132 - ) -> std::io::Result<usize> {
132 + ) -> io::Result<usize> {
    |

warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/rw_lock.rs:404:13
    |
404 |             cpu_relax();
    |             ^^^^^^^^^

warning: unused import: `std::ascii::AsciiExt`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ident_case-1.0.1/src/lib.rs:25:5
   |
25 | use std::ascii::AsciiExt;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sharded_slab CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/Cargo.toml CARGO_PKG_AUTHORS='Eliza Weisman <eliza@buoyant.io>' CARGO_PKG_DESCRIPTION='A lock-free concurrent slab.
' CARGO_PKG_HOMEPAGE='https://github.com/hawkw/sharded-slab' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sharded-slab CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hawkw/sharded-slab' CARGO_PKG_RUST_VERSION=1.42.0 CARGO_PKG_VERSION=0.1.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sharded_slab --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("loom"))' -C metadata=882b4dd825965876 -C extra-filename=-7206112881cdba00 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=nu_ansi_term CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0/Cargo.toml CARGO_PKG_AUTHORS='ogham@bsago.me:Ryan Scheel (Havvy) <ryan.havvy@gmail.com>:Josh Triplett <josh@joshtriplett.org>:The Nushell Project Developers' CARGO_PKG_DESCRIPTION='Library for ANSI terminal colors and styles (bold, underline)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=nu-ansi-term CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/nushell/nu-ansi-term' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.46.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=46 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name nu_ansi_term --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("derive_serde_style", "serde"))' -C metadata=2dec7d379d83366e -C extra-filename=-f150b1e7b501b491 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern overload=/home/ivo/massive_game_server/target/release/deps/liboverload-5008f61643c24de0.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `untrusted` (lib) generated 6 warnings (5 duplicates)
warning: `utf8_iter` (lib) generated 5 warnings (5 duplicates)
warning: `icu_normalizer_data` (build script) generated 5 warnings (5 duplicates)
warning: `zstd-safe` (build script) generated 5 warnings (5 duplicates)
warning: `utf8parse` (lib) generated 5 warnings (5 duplicates)
warning: `rustls` (build script) generated 5 warnings (5 duplicates)
warning: `cpufeatures` (lib) generated 5 warnings (5 duplicates)
warning: `litemap` (lib) generated 5 warnings (5 duplicates)
warning: `writeable` (lib) generated 5 warnings (5 duplicates)
warning: `spin` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,extra_traits,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_EXTRA_TRAITS=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/libc-ba29142f249bf50e/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/libc-69abcec6bca6a05d/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/libc-d965ae394736f18d/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/libc-0d429fbf4bf1622c/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.3.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/getrandom-fa31edf456f23575/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/getrandom-96bbb3e9b32c4613/build-script-build`
warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/src/lib.rs:414:35
    |
414 |                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default
help: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses
    |
414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
414 +                     debug_assert!(std::ptr::addr_eq(raw_utf8, &*bytes as *const [u8]));
    |
help: use explicit `std::ptr::eq` method to compare metadata and addresses
    |
414 -                     debug_assert!(raw_utf8 == &*bytes as *const [u8]);
414 +                     debug_assert!(std::ptr::eq(raw_utf8, &*bytes as *const [u8]));
    |

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pem CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-3.0.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-3.0.5/Cargo.toml CARGO_PKG_AUTHORS='Jonathan Creekmore <jonathan@thecreekmores.org>' CARGO_PKG_DESCRIPTION='Parse and encode PEM-encoded data.' CARGO_PKG_HOMEPAGE='https://github.com/jcreekmore/pem-rs.git' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pem CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jcreekmore/pem-rs.git' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=3.0.5 CARGO_PKG_VERSION_MAJOR=3 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pem --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pem-3.0.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std"))' -C metadata=378f9238ca858f58 -C extra-filename=-1da381a620d447cd --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-60595947c2ad589b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[thiserror 1.0.69] cargo:rerun-if-changed=build/probe.rs
warning: unexpected `cfg` condition name: `__powerfmt_docs`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/powerfmt-0.2.0/src/smart_display.rs:629:12
    |
629 | #[cfg_attr(__powerfmt_docs, rustc_must_implement_one_of(fmt, fmt_with_metadata))]
    |            ^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(__powerfmt_docs)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(__powerfmt_docs)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=form_urlencoded CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=form_urlencoded CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url' CARGO_PKG_RUST_VERSION=1.51 CARGO_PKG_VERSION=1.2.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name form_urlencoded --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/form_urlencoded-1.2.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=b07c998e6af130c3 -C extra-filename=-d467a9d7be0e26f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern percent_encoding=/home/ivo/massive_game_server/target/release/deps/libpercent_encoding-ca9e75f992189b17.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[thiserror 1.0.69] cargo:rustc-check-cfg=cfg(error_generic_member_access)
[thiserror 1.0.69] cargo:rustc-check-cfg=cfg(thiserror_nightly_testing)
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/once.rs:2:49
  |
2 | use core::sync::atomic::{AtomicUsize, Ordering, spin_loop_hint as cpu_relax};
  |                                                 ^^^^^^^^^^^^^^

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=waitgroup CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/waitgroup-0.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/waitgroup-0.1.2/Cargo.toml CARGO_PKG_AUTHORS='laizy <aochyi@126.com>' CARGO_PKG_DESCRIPTION='Async waitgroup for a collection of task to finish' CARGO_PKG_HOMEPAGE='https://github.com/laizy/waitgroup-rs' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=waitgroup CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/laizy/waitgroup-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name waitgroup --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/waitgroup-0.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=bccc5b35f7acc75d -C extra-filename=-6bc6000899a9e732 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern atomic_waker=/home/ivo/massive_game_server/target/release/deps/libatomic_waker-3ab40da958b332f4.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[parking_lot_core 0.9.11] cargo:rerun-if-changed=build.rs
warning: `native-tls` (build script) generated 5 warnings (5 duplicates)
warning: `subtle` (lib) generated 5 warnings (5 duplicates)
warning: `fnv` (lib) generated 5 warnings (5 duplicates)
warning: `tinyvec_macros` (lib) generated 5 warnings (5 duplicates)
warning: `equivalent` (lib) generated 5 warnings (5 duplicates)
warning: `ryu` (lib) generated 5 warnings (5 duplicates)
warning: `typenum` (build script) generated 5 warnings (5 duplicates)
warning: `crossbeam-utils` (build script) generated 5 warnings (5 duplicates)
warning: `base64ct` (lib) generated 5 warnings (5 duplicates)
warning: `rustls` (build script) generated 5 warnings (5 duplicates)
warning: `icu_properties_data` (build script) generated 5 warnings (5 duplicates)
warning: `litemap` (lib) generated 5 warnings (5 duplicates)
warning: `bitflags` (lib) generated 5 warnings (5 duplicates)
warning: `version_check` (lib) generated 5 warnings (5 duplicates)
   Compiling generic-array v0.14.7
   Compiling deranged v0.4.0
   Compiling ahash v0.8.12
   Compiling multer v2.1.0
   Compiling rustls-native-certs v0.6.3
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/once.rs:125:21
    |
125 |                     cpu_relax();
    |                     ^^^^^^^^^

[getrandom 0.3.3] cargo:rerun-if-changed=build.rs
[libc 0.2.172] cargo:rerun-if-changed=build.rs
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_FREEBSD_VERSION
[libc 0.2.172] cargo:rustc-cfg=freebsd11
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_LINUX_TIME_BITS64
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_GNU_FILE_OFFSET_BITS
[libc 0.2.172] cargo:rustc-cfg=libc_const_extern_fn
warning: use of deprecated function `core::sync::atomic::spin_loop_hint`: use hint::spin_loop instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/once.rs:149:31
    |
149 |                 RUNNING    => cpu_relax(), // We spin
    |                               ^^^^^^^^^

[thiserror 1.0.69] cargo:rerun-if-env-changed=RUSTC_BOOTSTRAP
warning: `syn` (build script) generated 5 warnings (5 duplicates)
warning: `seahash` (lib) generated 5 warnings (5 duplicates)
warning: `anstyle-query` (lib) generated 5 warnings (5 duplicates)
warning: `log` (lib) generated 5 warnings (5 duplicates)
warning: `percent-encoding` (lib) generated 6 warnings (6 duplicates)
warning: `mime` (lib) generated 5 warnings (5 duplicates)
warning: `once_cell` (lib) generated 5 warnings (5 duplicates)
warning: `stable_deref_trait` (lib) generated 5 warnings (5 duplicates)
warning: `either` (lib) generated 5 warnings (5 duplicates)
warning: `utf-8` (lib) generated 5 warnings (5 duplicates)
warning: `prometheus` (build script) generated 5 warnings (5 duplicates)
warning: `minimal-lexical` (lib) generated 5 warnings (5 duplicates)
warning: `base64` (lib) generated 6 warnings (5 duplicates)
warning: `atomic-waker` (lib) generated 6 warnings (5 duplicates)
warning: `ident_case` (lib) generated 7 warnings (5 duplicates)
warning: `percent-encoding` (lib) generated 6 warnings (5 duplicates)
warning: `byteorder` (lib) generated 5 warnings (5 duplicates)
warning: `tower-service` (lib) generated 5 warnings (5 duplicates)
warning: `bytes` (lib) generated 5 warnings (5 duplicates)
warning: `untrusted` (lib) generated 5 warnings (5 duplicates)
warning: `bitflags` (lib) generated 5 warnings (5 duplicates)
warning: `writeable` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_normalizer crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_normalizer_data-1f5ff5b0270e3cf1/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/icu_normalizer_data-65f53dd2544a5111/build-script-build`
warning: `time-core` (lib) generated 5 warnings (5 duplicates)
warning: `rayon-core` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/Cargo.toml CARGO_PKG_AUTHORS='Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>' CARGO_PKG_DESCRIPTION='Generic types implementing functionality of arrays' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=generic-array CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/fizyk20/generic-array.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.14.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=14 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="more_lengths"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("more_lengths", "serde", "zeroize"))' -C metadata=eee901d6f474a859 -C extra-filename=-47c32078f8d4354f --out-dir /home/ivo/massive_game_server/target/release/build/generic-array-47c32078f8d4354f -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern version_check=/home/ivo/massive_game_server/target/release/deps/libversion_check-f7983a463131ed56.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/Cargo.toml CARGO_PKG_AUTHORS='Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>' CARGO_PKG_DESCRIPTION='Typenum is a Rust library for type-level numbers evaluated at
    compile time. It currently supports bits, unsigned integers, and signed
    integers. It also provides a type-level array of type-level numbers, but its
    implementation is incomplete.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=typenum CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/paholg/typenum' CARGO_PKG_RUST_VERSION=1.37.0 CARGO_PKG_VERSION=1.18.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/typenum-07adaeea1601d98a/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/typenum-6dd32bb86a920067/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_properties crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_properties_data-46c17e3fbbc5450e/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/icu_properties_data-bd287bc43a49f2e1/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Utilities for concurrent programming' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-utils CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.8.21 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=21 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/crossbeam-utils-f76880552f56ac68/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/crossbeam-utils-8ef92cd58c4570d5/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=deranged CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deranged-0.4.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deranged-0.4.0/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <jacob@jhpratt.dev>' CARGO_PKG_DESCRIPTION='Ranged integers' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=deranged CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jhpratt/deranged' CARGO_PKG_RUST_VERSION=1.67.0 CARGO_PKG_VERSION=0.4.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name deranged --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/deranged-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unused '--warn=clippy::nursery' '--warn=clippy::all' --warn=variant-size-differences '--warn=clippy::use-debug' '--warn=clippy::unwrap-used' '--warn=clippy::unwrap-in-result' --warn=unused-qualifications --warn=unused-lifetimes --warn=unused-import-braces --deny=unstable-syntax-pre-expansion --deny=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::unnested-or-patterns' --deny=unnameable-test-items '--warn=clippy::uninlined-format-args' '--warn=clippy::unimplemented' '--warn=rustdoc::unescaped-backticks' '--deny=clippy::undocumented-unsafe-blocks' --deny=unconditional-recursion --warn=trivial-numeric-casts --warn=trivial-casts '--warn=clippy::todo' --deny=suspicious-double-ref-op '--deny=clippy::std-instead-of-core' --warn=single-use-lifetimes '--warn=clippy::semicolon-outside-block' '--allow=clippy::redundant-pub-crate' '--warn=rustdoc::private-doc-tests' '--warn=clippy::print-stdout' --deny=overlapping-range-endpoints '--allow=clippy::option-if-let-else' --deny=opaque-hidden-inferred-bound '--warn=clippy::obfuscated-if-else' --warn=noop-method-call --deny=non-ascii-idents --deny=named-arguments-used-positionally '--warn=clippy::missing-enforced-import-renames' '--warn=clippy::missing-docs-in-private-items' --warn=missing-docs --warn=missing-debug-implementations --warn=missing-copy-implementations --warn=missing-abi --warn=meta-variable-misuse '--warn=clippy::manual-let-else' --warn=macro-use-extern-crate --warn=let-underscore --warn=keyword-idents --deny=invalid-value --deny=invalid-reference-casting --deny=invalid-nan-comparisons --deny=invalid-macro-export-arguments --deny=invalid-from-utf8 --deny=improper-ctypes-definitions --deny=improper-ctypes --deny=hidden-glob-reexports '--warn=clippy::get-unwrap' --deny=future-incompatible '--warn=clippy::explicit-auto-deref' --deny=drop-bounds --deny=deref-nullptr '--warn=clippy::decimal-literal-representation' '--warn=clippy::dbg-macro' --deny=dangling-pointers-from-temporaries --deny=const-item-mutation --deny=clashing-extern-declarations --deny=ambiguous-glob-reexports '--deny=clippy::alloc-instead-of-core' --warn=unstable-name-collisions --allow=path-statements --cfg 'feature="alloc"' --cfg 'feature="powerfmt"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "macros", "num", "powerfmt", "quickcheck", "rand", "rand08", "rand09", "serde", "std"))' -C metadata=a9c3f779ffa615a3 -C extra-filename=-c6aeb1454adcbb7e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern powerfmt=/home/ivo/massive_game_server/target/release/deps/libpowerfmt-e2f1d8d69a62852e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/Cargo.toml CARGO_PKG_AUTHORS='Rousan Ali <hello@rousan.io>' CARGO_PKG_DESCRIPTION='An async parser for `multipart/form-data` content-type in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rousan/multer-rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=multer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rousan/multer-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.1.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("all", "default", "json", "serde", "serde_json", "tokio", "tokio-io", "tokio-util"))' -C metadata=d6d422aa2a8a379b -C extra-filename=-480d9bbeb5190cea --out-dir /home/ivo/massive_game_server/target/release/build/multer-480d9bbeb5190cea -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern version_check=/home/ivo/massive_game_server/target/release/deps/libversion_check-f7983a463131ed56.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml CARGO_PKG_AUTHORS='Tom Kaitchuck <Tom.Kaitchuck@gmail.com>' CARGO_PKG_DESCRIPTION='A non-cryptographic hash function using AES-NI for high performance' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ahash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tkaitchuck/ahash' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.8.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="getrandom"' --cfg 'feature="runtime-rng"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("atomic-polyfill", "compile-time-rng", "const-random", "default", "getrandom", "nightly-arm-aes", "no-rng", "runtime-rng", "serde", "std"))' -C metadata=0dcbb3994669c7d9 -C extra-filename=-cf665087c55b87e3 --out-dir /home/ivo/massive_game_server/target/release/build/ahash-cf665087c55b87e3 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern version_check=/home/ivo/massive_game_server/target/release/deps/libversion_check-f7983a463131ed56.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[icu_normalizer_data 2.0.0] cargo:rerun-if-env-changed=ICU4X_DATA_DIR
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustls_native_certs CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-native-certs-0.6.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-native-certs-0.6.3/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='rustls-native-certs allows rustls to use the platform native certificate store' CARGO_PKG_HOMEPAGE='https://github.com/ctz/rustls-native-certs' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls-native-certs CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/ctz/rustls-native-certs' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.6.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustls_native_certs --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-native-certs-0.6.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=a2ff896141b09a43 -C extra-filename=-0edfc1185b774fa6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern openssl_probe=/home/ivo/massive_game_server/target/release/deps/libopenssl_probe-f73a30f25e09f5f2.rmeta --extern rustls_pemfile=/home/ivo/massive_game_server/target/release/deps/librustls_pemfile-c8ff8bb7c7dd7c8c.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: use of deprecated method `core::sync::atomic::AtomicBool::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/mutex.rs:131:25
    |
131 |         while self.lock.compare_and_swap(false, true, Ordering::Acquire) != false
    |                         ^^^^^^^^^^^^^^^^

warning: unused import: `windows::*`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nu-ansi-term-0.46.0/src/lib.rs:261:9
    |
261 | pub use windows::*;
    |         ^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

[libc 0.2.172] cargo:rerun-if-changed=build.rs
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(fuzzing)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(emscripten_old_stat_abi)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(no_is_available)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(espidf_time32)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(no_literal_byte_character)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(no_literal_c_string)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd10)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd11)
warning: unexpected `cfg` condition name: `loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:15:17
   |
15 | #[cfg(all(test, loom))]
   |                 ^^^^ help: found config with similar value: `feature = "loom"`
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd12)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd13)
[parking_lot_core 0.9.11] cargo:rustc-check-cfg=cfg(tsan_enabled)
warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs:375:13
    |
375 | #![cfg_attr(feature = "cargo-clippy", allow(clippy::doc_markdown))]
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `default`, `docsrs`, and `std`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

[icu_normalizer_data 2.0.0] cargo:rustc-check-cfg=cfg(icu4c_enable_renaming)
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_FREEBSD_VERSION
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(no_source_text)
warning: use of deprecated method `core::sync::atomic::AtomicBool::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/mutex.rs:181:22
    |
181 |         if self.lock.compare_and_swap(false, true, Ordering::Acquire) == false
    |                      ^^^^^^^^^^^^^^^^

warning: `serde` (build script) generated 5 warnings (5 duplicates)
warning: `futures-sink` (lib) generated 5 warnings (5 duplicates)
warning: `semver` (build script) generated 5 warnings (5 duplicates)
warning: `num-conv` (lib) generated 5 warnings (5 duplicates)
warning: `overload` (lib) generated 5 warnings (5 duplicates)
warning: `time-core` (lib) generated 5 warnings (5 duplicates)
warning: `form_urlencoded` (lib) generated 6 warnings (5 duplicates)
warning: `zerocopy` (build script) generated 5 warnings (5 duplicates)
warning: `base64` (lib) generated 6 warnings (5 duplicates)
warning: `futures-core` (lib) generated 5 warnings (5 duplicates)
warning: `const-oid` (lib) generated 6 warnings (5 duplicates)
warning: `openssl-probe` (lib) generated 5 warnings (5 duplicates)
warning: `anstyle` (lib) generated 5 warnings (5 duplicates)
warning: `hex` (lib) generated 5 warnings (5 duplicates)
warning: `opaque-debug` (lib) generated 5 warnings (5 duplicates)
warning: `serde_json` (build script) generated 5 warnings (5 duplicates)
warning: `num-conv` (lib) generated 5 warnings (5 duplicates)
warning: `unicase` (lib) generated 5 warnings (5 duplicates)
warning: `smallvec` (lib) generated 5 warnings (5 duplicates)
warning: `httparse` (build script) generated 5 warnings (5 duplicates)
warning: `base16ct` (lib) generated 9 warnings (5 duplicates)
warning: `openssl` (build script) generated 5 warnings (5 duplicates)
warning: `bitflags` (lib) generated 5 warnings (5 duplicates)
warning: `lazy_static` (lib) generated 6 warnings (5 duplicates)
warning: `utf8_iter` (lib) generated 5 warnings (5 duplicates)
warning: `smallvec` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=clone-impls,default,derive,extra-traits,full,parsing,printing,proc-macro,quote,visit CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_CLONE_IMPLS=1 CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_DERIVE=1 CARGO_FEATURE_EXTRA_TRAITS=1 CARGO_FEATURE_FULL=1 CARGO_FEATURE_PARSING=1 CARGO_FEATURE_PRINTING=1 CARGO_FEATURE_PROC_MACRO=1 CARGO_FEATURE_QUOTE=1 CARGO_FEATURE_VISIT=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser for Rust source code' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=syn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/syn' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.109 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/syn-d33c125ac395aaf9/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/syn-c1bfe886b1bcdb61/build-script-build`
   Compiling time-macros v0.2.22
   Compiling mime_guess v2.0.5
   Compiling anstream v0.6.18
[icu_properties_data 2.0.1] cargo:rerun-if-env-changed=ICU4X_DATA_DIR
[crossbeam-utils 0.8.21] cargo:rerun-if-changed=no_atomic.rs
[icu_properties_data 2.0.1] cargo:rustc-check-cfg=cfg(icu4c_enable_renaming)
[crossbeam-utils 0.8.21] cargo:rustc-check-cfg=cfg(crossbeam_no_atomic,crossbeam_sanitize_thread)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(proc_macro_span)
warning: use of deprecated method `core::sync::atomic::AtomicUsize::compare_and_swap`: Use `compare_exchange` or `compare_exchange_weak` instead
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.5.2/src/once.rs:104:33
    |
104 |             status = self.state.compare_and_swap(INCOMPLETE,
    |                                 ^^^^^^^^^^^^^^^^

[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd14)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd15)
[typenum 1.18.0] cargo:rerun-if-changed=tests
[libc 0.2.172] cargo:rustc-check-cfg=cfg(gnu_file_offset_bits64)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_const_extern_fn)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_deny_warnings)
[libc 0.2.172] cargo:rustc-cfg=freebsd11
warning: `powerfmt` (lib) generated 8 warnings (5 duplicates)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_thread_local)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_ctest)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(linux_time_bits64)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_os,values("switch","aix","ohos","hurd","rtems","visionos","nuttx","cygwin"))
[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_env,values("illumos","wasi","aix","ohos","nto71_iosock","nto80"))
[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))
warning: field `inner` is never read
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/waitgroup-0.1.2/src/lib.rs:36:5
   |
35 | pub struct Worker {
   |            ------ field in this struct
36 |     inner: Arc<Inner>,
   |     ^^^^^
   |
   = note: `Worker` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: `ipnet` (lib) generated 5 warnings (5 duplicates)
warning: `stable_deref_trait` (lib) generated 5 warnings (5 duplicates)
warning: `crc-catalog` (lib) generated 5 warnings (5 duplicates)
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_LINUX_TIME_BITS64
[libc 0.2.172] cargo:rerun-if-env-changed=RUST_LIBC_UNSTABLE_GNU_FILE_OFFSET_BITS
[libc 0.2.172] cargo:rustc-cfg=libc_const_extern_fn
[libc 0.2.172] cargo:rustc-check-cfg=cfg(emscripten_old_stat_abi)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(espidf_time32)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd10)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd11)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd12)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd13)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd14)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(freebsd15)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(gnu_file_offset_bits64)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_const_extern_fn)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_deny_warnings)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_thread_local)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(libc_ctest)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(linux_time_bits64)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_os,values("switch","aix","ohos","hurd","rtems","visionos","nuttx","cygwin"))
warning: methods `unchecked_unwrap` and `unchecked_unwrap_none` are never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.8/src/unreachable.rs:13:15
   |
11 | pub trait UncheckedOptionExt<T> {
   |           ------------------ methods in this trait
12 |     /// Get the value out of this Option without checking for None.
13 |     unsafe fn unchecked_unwrap(self) -> T;
   |               ^^^^^^^^^^^^^^^^
...
16 |     unsafe fn unchecked_unwrap_none(self);
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_env,values("illumos","wasi","aix","ohos","nto71_iosock","nto80"))
warning: `unicode-xid` (lib) generated 5 warnings (5 duplicates)
[libc 0.2.172] cargo:rustc-check-cfg=cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1 CARGO_MANIFEST_LINKS=rayon-core CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/Cargo.toml CARGO_PKG_AUTHORS='Niko Matsakis <niko@alum.mit.edu>:Josh Stone <cuviper@gmail.com>' CARGO_PKG_DESCRIPTION='Core APIs for Rayon' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rayon-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rayon-rs/rayon' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=1.12.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/rayon-core-e54940f2cc887761/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/rayon-core-68ea8053857c6cfb/build-script-build`
warning: `foreign-types-shared` (lib) generated 5 warnings (5 duplicates)
warning: `colorchoice` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs:379:12
    |
379 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,protobuf CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_PROTOBUF=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4/Cargo.toml CARGO_PKG_AUTHORS='overvenus@gmail.com:siddontang@gmail.com:vistaswx@gmail.com' CARGO_PKG_DESCRIPTION='Prometheus instrumentation library for Rust applications.' CARGO_PKG_HOMEPAGE='https://github.com/tikv/rust-prometheus' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=prometheus CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tikv/rust-prometheus' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/prometheus-16559ccce6da9806/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/prometheus-0a9cecb0cc358527/build-script-build`
warning: `itoa` (lib) generated 5 warnings (5 duplicates)
warning: `crc` (lib) generated 5 warnings (5 duplicates)
warning: `want` (lib) generated 5 warnings (5 duplicates)
warning: `foreign-types` (lib) generated 5 warnings (5 duplicates)
warning: `anstyle-parse` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=simd CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_SIMD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/Cargo.toml CARGO_PKG_AUTHORS='Joshua Liebow-Feeser <joshlf@google.com>:Jack Wrenn <jswrenn@amazon.com>' CARGO_PKG_DESCRIPTION='Zerocopy makes zero-cost memory manipulation effortless. We write "unsafe" so you don'\''t have to.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='BSD-2-Clause OR Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerocopy CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/zerocopy' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=0.8.25 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=25 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/zerocopy-87016f29f21e6c9e/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/zerocopy-83ee173b1500392a/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=alloc,default,derive,rc,serde_derive,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ALLOC=1 CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_DERIVE=1 CARGO_FEATURE_RC=1 CARGO_FEATURE_SERDE_DERIVE=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A generic serialization/deserialization framework' CARGO_PKG_HOMEPAGE='https://serde.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde CARGO_PKG_README=crates-io.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/serde' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.219 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=219 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/serde-3b2237d1d2526c97/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/serde-3054f8c279077b79/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser and evaluator for Cargo'\''s flavor of Semantic Versioning' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=semver CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/semver' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.26 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=26 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/semver-72028c763f7e0a89/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/semver-0baae7f6c5fe40d8/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_normalizer_data CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_normalizer crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_normalizer_data-1f5ff5b0270e3cf1/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_normalizer_data --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f209434268a8fe18 -C extra-filename=-c110d135379973c5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(icu4c_enable_renaming)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=time_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-macros-0.2.22 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-macros-0.2.22/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <open-source@jhpratt.dev>:Time contributors' CARGO_PKG_DESCRIPTION='    Procedural macros for the time crate.
    This crate is an implementation detail and should not be relied upon directly.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=time-macros CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/time-rs/time' CARGO_PKG_RUST_VERSION=1.67.1 CARGO_PKG_VERSION=0.2.22 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=22 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name time_macros --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-macros-0.2.22/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unused '--warn=clippy::nursery' '--warn=clippy::all' --warn=variant-size-differences '--warn=clippy::use-debug' '--warn=clippy::unwrap-used' '--warn=clippy::unwrap-in-result' --warn=unused-qualifications --warn=unused-lifetimes --warn=unused-import-braces --deny=unstable-syntax-pre-expansion --deny=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::unnested-or-patterns' --deny=unnameable-test-items '--warn=clippy::uninlined-format-args' '--warn=clippy::unimplemented' --deny=unexpected_cfgs '--warn=rustdoc::unescaped-backticks' '--deny=clippy::undocumented-unsafe-blocks' --deny=unconditional-recursion --warn=trivial-numeric-casts --warn=trivial-casts '--warn=clippy::todo' --deny=suspicious-double-ref-op '--deny=clippy::std-instead-of-core' --warn=single-use-lifetimes '--warn=clippy::semicolon-outside-block' '--warn=rustdoc::private-doc-tests' '--warn=clippy::print-stdout' --deny=overlapping-range-endpoints --deny=opaque-hidden-inferred-bound '--warn=clippy::obfuscated-if-else' --warn=noop-method-call --deny=non-ascii-idents --deny=named-arguments-used-positionally '--warn=clippy::missing-enforced-import-renames' '--warn=clippy::missing-docs-in-private-items' --warn=missing-docs --warn=missing-debug-implementations --warn=missing-copy-implementations --warn=missing-abi --warn=meta-variable-misuse '--warn=clippy::manual-let-else' --warn=macro-use-extern-crate --warn=let-underscore --warn=keyword-idents --deny=invalid-value --deny=invalid-reference-casting --deny=invalid-nan-comparisons --deny=invalid-macro-export-arguments --deny=invalid-from-utf8 --deny=improper-ctypes-definitions --deny=improper-ctypes --deny=hidden-glob-reexports '--warn=clippy::get-unwrap' --deny=future-incompatible '--warn=clippy::explicit-auto-deref' --deny=drop-bounds --deny=deref-nullptr '--warn=clippy::decimal-literal-representation' '--warn=clippy::dbg-macro' --deny=dangling-pointers-from-temporaries --deny=const-item-mutation --deny=clashing-extern-declarations '--warn=clippy::as-underscore' --deny=ambiguous-glob-reexports '--deny=clippy::alloc-instead-of-core' --allow=unstable-name-collisions '--allow=clippy::uninhabited-references' '--allow=clippy::redundant-pub-crate' '--allow=clippy::option-if-let-else' --check-cfg 'cfg(__ui_tests)' --check-cfg 'cfg(bench)' --cfg 'feature="formatting"' --cfg 'feature="parsing"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("formatting", "large-dates", "parsing", "serde"))' -C metadata=f0fd9c037180af7f -C extra-filename=-fcdad37d5abab3b5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern num_conv=/home/ivo/massive_game_server/target/release/deps/libnum_conv-061312d144ea953f.rlib --extern time_core=/home/ivo/massive_game_server/target/release/deps/libtime_core-7aa6c134402dc081.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A tiny, safe, speedy, zero-copy HTTP/1.x parser.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=httparse CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/httparse' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.10.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/httparse-4c712c7cf3c043d1/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/httparse-5bd3fcb4342e36f0/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_normalizer_data CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_normalizer crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_normalizer_data-1f5ff5b0270e3cf1/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_normalizer_data --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer_data-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f9bda31bbe6473c1 -C extra-filename=-7f3c0c9afbca3968 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(icu4c_enable_renaming)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=anstream CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstream-0.6.18 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstream-0.6.18/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A simple cross platform library for writing colored text to a terminal.' CARGO_PKG_HOMEPAGE='https://github.com/rust-cli/anstyle' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anstream CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/anstyle.git' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=0.6.18 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=18 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name anstream --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anstream-0.6.18/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="auto"' --cfg 'feature="wincon"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("auto", "default", "test", "wincon"))' -C metadata=f98ec9b8d62998fb -C extra-filename=-32d8c66d21767dd8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern anstyle=/home/ivo/massive_game_server/target/release/deps/libanstyle-89b6f415f092c9e2.rmeta --extern anstyle_parse=/home/ivo/massive_game_server/target/release/deps/libanstyle_parse-b3e44010f6fb75de.rmeta --extern anstyle_query=/home/ivo/massive_game_server/target/release/deps/libanstyle_query-f600ecc8ef0bf79a.rmeta --extern colorchoice=/home/ivo/massive_game_server/target/release/deps/libcolorchoice-52c867356deec618.rmeta --extern is_terminal_polyfill=/home/ivo/massive_game_server/target/release/deps/libis_terminal_polyfill-bf14e2c2fb8b823c.rmeta --extern utf8parse=/home/ivo/massive_game_server/target/release/deps/libutf8parse-6f70808de701aa9e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A JSON serialization file format' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_json CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/json' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.140 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=140 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/serde_json-84b8acd08db8529a/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/serde_json-ccdfd2425b086cd7/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/Cargo.toml CARGO_PKG_AUTHORS='Austin Bonander <austin.bonander@gmail.com>' CARGO_PKG_DESCRIPTION='A simple crate for detection of a file'\''s MIME type by its extension.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=mime_guess CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/abonander/mime_guess' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.0.5 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="rev-mappings"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "rev-mappings"))' -C metadata=4bb5b46da3e232b4 -C extra-filename=-ffeb2d9824e1f8be --out-dir /home/ivo/massive_game_server/target/release/build/mime_guess-ffeb2d9824e1f8be -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern unicase=/home/ivo/massive_game_server/target/release/deps/libunicase-f6189482674629f4.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(procmacro2_backtrace)
warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs:391:12
    |
391 | #[cfg_attr(nightly, allow(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:453:9
    |
453 |         test_println!("pool: create {:?}", tid);
    |         --------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

[zerocopy 0.8.25] cargo:rerun-if-changed=build.rs
warning: method `unchecked_unwrap_err` is never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thread_local-1.1.8/src/unreachable.rs:25:15
   |
20 | pub trait UncheckedResultExt<T, E> {
   |           ------------------ method in this trait
...
25 |     unsafe fn unchecked_unwrap_err(self) -> E;
   |               ^^^^^^^^^^^^^^^^^^^^

[zerocopy 0.8.25] cargo:rerun-if-changed=Cargo.toml
[syn 1.0.109] cargo:rustc-cfg=syn_disable_nightly_tests
[rayon-core 1.12.1] cargo:rerun-if-changed=build.rs
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:621:9
    |
621 |         test_println!("pool: create_owned {:?}", tid);
    |         --------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:655:9
    |
655 |         test_println!("pool: create_with");
    |         ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:678:9
    |
678 |         test_println!("pool: get{:?}; current={:?}", tid, Tid::<C>::current());
    |         ---------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(procmacro2_nightly_testing)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(procmacro2_semver_exempt)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(randomize_layout)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(span_locations)
[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(super_unstable)
[serde 1.0.219] cargo:rerun-if-changed=build.rs
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:769:9
    |
769 |         test_println!("pool: get{:?}; current={:?}", tid, Tid::<C>::current());
    |         ---------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:914:9
    |
914 |         test_println!("drop Ref: try clearing data");
    |         -------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1049:9
     |
1049 |         test_println!(" -> drop RefMut: try clearing data");
     |         --------------------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1124:9
     |
1124 |         test_println!("drop OwnedRef: try clearing data");
     |         ------------------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1135:13
     |
1135 |             test_println!("-> shard={:?}", shard_idx);
     |             ----------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1139:17
     |
1139 |                 test_println!("-> shard={:?} does not exist! THIS IS A BUG", shard_idx);
     |                 ----------------------------------------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs:418:14
    |
418 |   #[cfg_attr(nightly, allow(rustdoc::missing_doc_code_examples))]
    |              ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

[proc-macro2 1.0.95] cargo:rustc-check-cfg=cfg(wrap_proc_macro)
[proc-macro2 1.0.95] cargo:rerun-if-changed=build/probe.rs
warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1238:9
     |
1238 |         test_println!("-> shard={:?}", shard_idx);
     |         ----------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1290:9
     |
1290 |         test_println!("drop OwnedRefMut: try clearing data");
     |         ---------------------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `unicase` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `slab_print`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
     |
3    |         if cfg!(test) && cfg!(slab_print) {
     |                               ^^^^^^^^^^
     |
    ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/pool.rs:1303:17
     |
1303 |                 test_println!("-> shard does not exist! THIS IS A BUG");
     |                 ------------------------------------------------------- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_aarch64_simd_1_59_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_core_error_1_81_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_diagnostic_on_unimplemented_1_78_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_generic_bounds_in_const_fn_1_61_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_panic_in_const_and_vec_try_reserve_1_57_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(zerocopy_target_has_atomics_1_60_0)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(doc_cfg)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(kani)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(__ZEROCOPY_INTERNAL_USE_ONLY_NIGHTLY_FEATURES_IN_TESTS)
[zerocopy 0.8.25] cargo:rustc-check-cfg=cfg(coverage_nightly)
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_aarch64_simd_1_59_0
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_core_error_1_81_0
warning: `scoped-tls` (lib) generated 5 warnings (5 duplicates)
warning: `try-lock` (lib) generated 5 warnings (5 duplicates)
warning: `rustls-pemfile` (lib) generated 6 warnings (5 duplicates)
warning: `sketches-ddsketch` (lib) generated 5 warnings (5 duplicates)
warning: `thread_local` (lib) generated 7 warnings (5 duplicates)
warning: `spin` (lib) generated 18 warnings (5 duplicates)
warning: `waitgroup` (lib) generated 6 warnings (5 duplicates)
warning: `futures-channel` (lib) generated 5 warnings (5 duplicates)
warning: `log` (lib) generated 5 warnings (5 duplicates)
warning: `memchr` (lib) generated 5 warnings (5 duplicates)
warning: `anyhow` (build script) generated 5 warnings (5 duplicates)
warning: `generic-array` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=libc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/libc-ba29142f249bf50e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name libc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="extra_traits"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' -C metadata=25f64aea02361895 -C extra-filename=-4e354bf6f7f90a88 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg freebsd11 --cfg libc_const_extern_fn --check-cfg 'cfg(emscripten_old_stat_abi)' --check-cfg 'cfg(espidf_time32)' --check-cfg 'cfg(freebsd10)' --check-cfg 'cfg(freebsd11)' --check-cfg 'cfg(freebsd12)' --check-cfg 'cfg(freebsd13)' --check-cfg 'cfg(freebsd14)' --check-cfg 'cfg(freebsd15)' --check-cfg 'cfg(gnu_file_offset_bits64)' --check-cfg 'cfg(libc_const_extern_fn)' --check-cfg 'cfg(libc_deny_warnings)' --check-cfg 'cfg(libc_thread_local)' --check-cfg 'cfg(libc_ctest)' --check-cfg 'cfg(linux_time_bits64)' --check-cfg 'cfg(target_os,values("switch","aix","ohos","hurd","rtems","visionos","nuttx","cygwin"))' --check-cfg 'cfg(target_env,values("illumos","wasi","aix","ohos","nto71_iosock","nto80"))' --check-cfg 'cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=libc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Raw FFI bindings to platform libraries like libc.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/libc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libc' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.2.172 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=172 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/libc-d965ae394736f18d/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name libc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libc-0.2.172/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("align", "const-extern-fn", "default", "extra_traits", "rustc-dep-of-std", "rustc-std-workspace-core", "std", "use_std"))' -C metadata=69de756d4dc3588b -C extra-filename=-b1f6962553262e28 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg freebsd11 --cfg libc_const_extern_fn --check-cfg 'cfg(emscripten_old_stat_abi)' --check-cfg 'cfg(espidf_time32)' --check-cfg 'cfg(freebsd10)' --check-cfg 'cfg(freebsd11)' --check-cfg 'cfg(freebsd12)' --check-cfg 'cfg(freebsd13)' --check-cfg 'cfg(freebsd14)' --check-cfg 'cfg(freebsd15)' --check-cfg 'cfg(gnu_file_offset_bits64)' --check-cfg 'cfg(libc_const_extern_fn)' --check-cfg 'cfg(libc_deny_warnings)' --check-cfg 'cfg(libc_thread_local)' --check-cfg 'cfg(libc_ctest)' --check-cfg 'cfg(linux_time_bits64)' --check-cfg 'cfg(target_os,values("switch","aix","ohos","hurd","rtems","visionos","nuttx","cygwin"))' --check-cfg 'cfg(target_env,values("illumos","wasi","aix","ohos","nto71_iosock","nto80"))' --check-cfg 'cfg(target_arch,values("loongarch64","mips32r6","mips64r6","csky"))'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=typenum CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/Cargo.toml CARGO_PKG_AUTHORS='Paho Lurie-Gregg <paho@paholg.com>:Andre Bogus <bogusandre@gmail.com>' CARGO_PKG_DESCRIPTION='Typenum is a Rust library for type-level numbers evaluated at
    compile time. It currently supports bits, unsigned integers, and signed
    integers. It also provides a type-level array of type-level numbers, but its
    implementation is incomplete.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=typenum CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/paholg/typenum' CARGO_PKG_RUST_VERSION=1.37.0 CARGO_PKG_VERSION=1.18.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/typenum-07adaeea1601d98a/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name typenum --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/typenum-1.18.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("const-generics", "force_unix_path_separator", "i128", "no_std", "scale-info", "scale_info", "strict"))' -C metadata=b13c4fab6b005b71 -C extra-filename=-ec08e63d6ae28cdf --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling indexmap v2.9.0
   Compiling tracing-log v0.2.0
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_core_cstr)
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_diagnostic_on_unimplemented_1_78_0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam_utils CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Utilities for concurrent programming' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-utils CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.8.21 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=21 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/crossbeam-utils-f76880552f56ac68/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam_utils --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-utils-0.8.21/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs '--allow=clippy::lint_groups_priority' '--allow=clippy::declare_interior_mutable_const' --check-cfg 'cfg(crossbeam_loom)' --check-cfg 'cfg(crossbeam_sanitize)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "loom", "nightly", "std"))' -C metadata=a375e49dec7abd7b -C extra-filename=-ad1a605bff336aad --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(crossbeam_no_atomic,crossbeam_sanitize_thread)'`
[proc-macro2 1.0.95] cargo:rustc-cfg=wrap_proc_macro
warning: unexpected `cfg` condition name: `loom`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/sync.rs:3:11
  |
3 | #[cfg(all(loom, any(test, feature = "loom")))]
  |           ^^^^ help: found config with similar value: `feature = "loom"`
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `self::str::*`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/lib.rs:439:9
    |
439 | pub use self::str::*;
    |         ^^^^^^^^^^^^
    |
    = note: `#[warn(unused_imports)]` on by default

[httparse 1.10.1] cargo:rustc-cfg=httparse_simd_neon_intrinsics
[semver 1.0.26] cargo:rerun-if-changed=build.rs
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_properties_data CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_properties crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_properties_data-46c17e3fbbc5450e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_properties_data --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=6ef31379028b184a -C extra-filename=-3741682bb07d8e13 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(icu4c_enable_renaming)'`
[serde_json 1.0.140] cargo:rerun-if-changed=build.rs
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_core_error)
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_generic_bounds_in_const_fn_1_61_0
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_core_net)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_core_num_saturating)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_core_try_from)
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_panic_in_const_and_vec_try_reserve_1_57_0
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_diagnostic_namespace)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_float_copysign)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_num_nonzero_signed)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_relaxed_trait_bounds)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_serde_derive)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_std_atomic)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_std_atomic64)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_systemtime_checked_add)
[serde 1.0.219] cargo:rustc-check-cfg=cfg(no_target_has_atomic)
[zerocopy 0.8.25] cargo:rustc-cfg=zerocopy_target_has_atomics_1_60_0
warning: unexpected `cfg` condition name: `loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/sync.rs:63:15
   |
63 | #[cfg(not(all(loom, any(feature = "loom", test))))]
   |               ^^^^ help: found config with similar value: `feature = "loom"`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/clear.rs:95:11
   |
95 | #[cfg(all(loom, test))]
   |           ^^^^ help: found config with similar value: `feature = "loom"`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_properties_data CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Data for the icu_properties crate' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties_data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/icu_properties_data-46c17e3fbbc5450e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_properties_data --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties_data-2.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(icu4x_custom_data)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=7367372fa049bde1 -C extra-filename=-f507c71442e0731a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(icu4c_enable_renaming)'`
[serde_json 1.0.140] cargo:rustc-check-cfg=cfg(fast_arithmetic, values("32", "64"))
[serde_json 1.0.140] cargo:rustc-cfg=fast_arithmetic="64"
[httparse 1.10.1] cargo:rustc-cfg=httparse_simd
[httparse 1.10.1] cargo:rustc-cfg=httparse_simd_target_feature_sse42
[httparse 1.10.1] cargo:rustc-cfg=httparse_simd_target_feature_avx2
[proc-macro2 1.0.95] cargo:rerun-if-env-changed=RUSTC_BOOTSTRAP
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_alloc_crate)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_const_vec_new)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_exhaustive_int_match)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_non_exhaustive)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_nonzero_bitscan)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_str_strip_prefix)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_track_caller)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(no_unsafe_op_in_unsafe_fn_lint)
[semver 1.0.26] cargo:rustc-check-cfg=cfg(test_node_semver)
warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:18:9
   |
18 |         test_println!("UniqueIter::next");
   |         --------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:20:13
   |
20 |             test_println!("-> try next slot");
   |             --------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:22:17
   |
22 |                 test_println!("-> found an item!");
   |                 ---------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:26:13
   |
26 |             test_println!("-> try next page");
   |             --------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:28:17
   |
28 |                 test_println!("-> found another page");
   |                 -------------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:33:13
   |
33 |             test_println!("-> try next shard");
   |             ---------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:35:17
   |
35 |                 test_println!("-> found another shard");
   |                 --------------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `nightly`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:49:12
   |
49 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:96:12
   |
96 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:340:12
    |
340 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `form_urlencoded` (lib) generated 6 warnings (6 duplicates)
warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:357:12
    |
357 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:374:12
    |
374 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:392:12
    |
392 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/iter.rs:38:17
   |
38 |                 test_println!("-> all done!");
   |                 ----------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:409:12
    |
409 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nom-7.1.3/src/internal.rs:430:12
    |
430 | #[cfg_attr(nightly, warn(rustdoc::missing_doc_code_examples))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:115:13
    |
115 | /             test_println!(
116 | |                 "-> get {:?}; current_gen={:?}; lifecycle={:#x}; state={:?}; refs={:?};",
117 | |                 gen,
118 | |                 current_gen,
...   |
121 | |                 refs,
122 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:129:17
    |
129 |                 test_println!("-> get: no longer exists!");
    |                 ------------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:142:21
    |
142 |                     test_println!("-> {:?}", new_refs);
    |                     ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:154:21
    |
154 |                     test_println!("-> get: retrying; lifecycle={:#x};", actual);
    |                     ----------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:175:13
    |
175 | /             test_println!(
176 | |                 "-> mark_release; gen={:?}; current_gen={:?};",
177 | |                 gen,
178 | |                 curr_gen
179 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:187:13
    |
187 |             test_println!("-> mark_release; state={:?};", state);
    |             ---------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:190:21
    |
190 |                     test_println!("--> mark_release; cannot release (already removed!)");
    |                     -------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:194:21
    |
194 |                     test_println!("--> mark_release; already marked;");
    |                     -------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:202:13
    |
202 | /             test_println!(
203 | |                 "-> mark_release; old_lifecycle={:#x}; new_lifecycle={:#x};",
204 | |                 lifecycle,
205 | |                 new_lifecycle
206 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:216:21
    |
216 |                     test_println!("-> mark_release; retrying");
    |                     ------------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:224:9
    |
224 |         test_println!("-> mark_release: marked; refs={:?};", refs);
    |         ---------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:246:13
    |
246 | /             test_println!("-> release_with; lifecycle={:#x}; expected_gen={:?}; current_gen={:?}; next_gen={:?};",
247 | |                 lifecycle,
248 | |                 gen,
249 | |                 current_gen,
250 | |                 next_gen
251 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:258:17
    |
258 |                 test_println!("-> already removed!");
    |                 ------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:275:21
    |
275 |                     test_println!("-> advanced gen; lifecycle={:#x}; refs={:?};", actual, refs);
    |                     --------------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `protobuf` (build script) generated 5 warnings (5 duplicates)
warning: `hashbrown` (lib) generated 5 warnings (5 duplicates)
warning: `icu_normalizer_data` (lib) generated 5 warnings (5 duplicates)
warning: `pem-rfc7468` (lib) generated 5 warnings (5 duplicates)
warning: `multer` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=more_lengths,zeroize CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_MORE_LENGTHS=1 CARGO_FEATURE_ZEROIZE=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/Cargo.toml CARGO_PKG_AUTHORS='Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>' CARGO_PKG_DESCRIPTION='Generic types implementing functionality of arrays' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=generic-array CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/fizyk20/generic-array.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.14.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=14 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/generic-array-137e5fbc1d774a8f/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/generic-array-47c32078f8d4354f/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=indexmap CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.9.0/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A hash table with consistent order and fast iteration.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=indexmap CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/indexmap-rs/indexmap' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=2.9.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name indexmap --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/indexmap-2.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 '--allow=clippy::style' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "borsh", "default", "quickcheck", "rayon", "serde", "std", "test_debug"))' -C metadata=be667bd854e23498 -C extra-filename=-b12568fe01c9c06c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern equivalent=/home/ivo/massive_game_server/target/release/deps/libequivalent-4d8a6c486f5c59e8.rmeta --extern hashbrown=/home/ivo/massive_game_server/target/release/deps/libhashbrown-68d6e18ecc37e8a7.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition value: `phf`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:1:7
  |
1 | #[cfg(feature = "phf")]
  |       ^^^^^^^^^^^^^^^
  |
  = note: expected values for `feature` are: `default` and `rev-mappings`
  = help: consider adding `phf` as a feature in `Cargo.toml`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
  = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `cargo-clippy`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/lib.rs:42:5
   |
42 |     feature = "cargo-clippy",
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
   = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Flexible concrete Error type built on std::error::Error' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anyhow CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/anyhow' CARGO_PKG_RUST_VERSION=1.39 CARGO_PKG_VERSION=1.0.98 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=98 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/anyhow-e8880123a3ba6bcd/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/anyhow-12c10a919f0b9d0a/build-script-build`
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:277:25
    |
277 |                         test_println!("-> ok to remove!");
    |                         --------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing_log CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Provides compatibility between `tracing` and the `log` crate.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing-log CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing_log --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="log-tracer"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("ahash", "default", "interest-cache", "log-tracer", "lru", "std"))' -C metadata=6c8fbb1e3658d7d5 -C extra-filename=-62fe140f69da1aba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern tracing_core=/home/ivo/massive_game_server/target/release/deps/libtracing_core-9ebeaf34b772be2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:290:21
    |
290 |                     test_println!("-> refs={:?}; spin...", refs);
    |                     -------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:20:7
   |
20 | #[cfg(feature = "phf")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/macros.rs:689:16
    |
689 |       #[cfg_attr(feature = "cargo-clippy", allow(never_loop))]
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/euc_jp.rs:77:5
    |
77  | /     euc_jp_decoder_functions!(
78  | |         {
79  | |             let trail_minus_offset = byte.wrapping_sub(0xA1);
...   |
220 | |         handle
221 | |     );
    | |_____- in this macro invocation
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `euc_jp_decoder_function` which comes from the expansion of the macro `euc_jp_decoder_functions` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:296:21
    |
296 |                     test_println!("-> retrying; lifecycle={:#x};", actual);
    |                     ------------------------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:41:7
   |
41 | #[cfg(feature = "phf")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

[anyhow 1.0.98] cargo:rerun-if-changed=src/nightly.rs
warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/macros.rs:364:16
    |
364 |       #[cfg_attr(feature = "cargo-clippy", allow(never_loop))]
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/gb18030.rs:112:5
    |
112 | /     gb18030_decoder_functions!(
...   |
295 | |         handle,
296 | |         'outermost);
    | |___________________- in this macro invocation
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `gb18030_decoder_function` which comes from the expansion of the macro `gb18030_decoder_functions` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:316:9
    |
316 | /         test_println!(
317 | |             "-> initialize_state; state={:?}; gen={:?}; refs={:?};",
318 | |             Lifecycle::<C>::from_packed(lifecycle),
319 | |             gen,
320 | |             refs,
321 | |         );
    | |_________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:324:13
    |
324 |             test_println!("-> initialize while referenced! cancelling");
    |             ----------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:363:9
    |
363 |         test_println!("-> inserted at {:?}", gen);
    |         ----------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:389:17
    |
389 | /                 test_println!(
390 | |                     "-> try_remove_value; nothing exists at generation={:?}",
391 | |                     gen
392 | |                 );
    | |_________________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:397:9
    |
397 |         test_println!("-> try_remove_value; marked!");
    |         --------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:78:11
   |
78 | #[cfg(all(feature = "phf", feature = "rev-mappings"))]
   |           ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/iso_2022_jp.rs:377:5
    |
377 |     feature = "cargo-clippy",
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:401:13
    |
401 |             test_println!("-> try_remove_value; can remove now");
    |             ---------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/iso_2022_jp.rs:398:5
    |
398 |     feature = "cargo-clippy",
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:453:17
    |
453 | /                 test_println!(
454 | |                     "-> try_clear_storage; nothing exists at generation={:?}",
455 | |                     gen
456 | |                 );
    | |_________________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `phf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:123:15
    |
123 | #[cfg(all(not(feature = "phf"), feature = "rev-mappings"))]
    |               ^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `default` and `rev-mappings`
    = help: consider adding `phf` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/utf_8.rs:229:12
    |
229 | #[cfg_attr(feature = "cargo-clippy", allow(never_loop, cyclomatic_complexity))]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:461:9
    |
461 |         test_println!("-> try_clear_storage; marked!");
    |         ---------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/utf_8.rs:606:12
    |
606 | #[cfg_attr(feature = "cargo-clippy", allow(never_loop))]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/build.rs:33:11
   |
33 |     #[cfg(feature = "phf")]
   |           ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `disabled`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:1508:68
     |
1508 |     if #[cfg(all(feature = "simd-accel", target_endian = "little", target_arch = "disabled"))] {
     |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: expected values for `target_arch` are: `aarch64`, `amdgpu`, `arm`, `arm64ec`, `avr`, `bpf`, `csky`, `hexagon`, `loongarch64`, `m68k`, `mips`, `mips32r6`, `mips64`, `mips64r6`, `msp430`, `nvptx64`, `powerpc`, `powerpc64`, `riscv32`, `riscv64`, `s390x`, `sparc`, `sparc64`, `wasm32`, `wasm64`, `x86`, `x86_64`, and `xtensa`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:465:13
    |
465 |             test_println!("-> try_remove_value; can clear now");
    |             --------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:1725:20
     |
1725 |         #[cfg_attr(feature = "cargo-clippy", allow(cast_ptr_alignment))]
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:485:13
    |
485 |             test_println!("-> cleared: {}", cleared);
    |             ---------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:227:13
     |
227  |             feature = "cargo-clippy",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
...
1856 |         basic_latin_alu!(ascii_to_basic_latin, u8, u16, ascii_to_basic_latin_stride_alu);
     |         -------------------------------------------------------------------------------- in this macro invocation
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `basic_latin_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:227:13
     |
227  |             feature = "cargo-clippy",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
...
1857 |         basic_latin_alu!(basic_latin_to_ascii, u16, u8, basic_latin_to_ascii_stride_alu);
     |         -------------------------------------------------------------------------------- in this macro invocation
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `basic_latin_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:349:13
     |
349  |             feature = "cargo-clippy",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
...
1858 |         latin1_alu!(unpack_latin1, u8, u16, unpack_latin1_stride_alu);
     |         ------------------------------------------------------------- in this macro invocation
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `latin1_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:510:13
    |
510 | /             test_println!(
511 | |                 "-> drop guard: state={:?}; gen={:?}; refs={:?}; lifecycle={:#x}; new_lifecycle={:#x}; dropping={:?}",
512 | |                 state,
513 | |                 gen,
...   |
517 | |                 dropping
518 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:349:13
     |
349  |             feature = "cargo-clippy",
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
...
1859 |         latin1_alu!(pack_latin1, u16, u8, pack_latin1_stride_alu);
     |         --------------------------------------------------------- in this macro invocation
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `latin1_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:526:21
    |
526 |                     test_println!("-> drop guard: done;  dropping={:?}", dropping);
    |                     -------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/ascii.rs:105:20
     |
105  |         #[cfg_attr(feature = "cargo-clippy", allow(never_loop, cast_ptr_alignment))]
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^
...
1861 |         ascii_alu!(ascii_to_ascii, u8, u8, ascii_to_ascii_stride);
     |         --------------------------------------------------------- in this macro invocation
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `ascii_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:530:21
    |
530 |                     test_println!("-> drop guard; retry, actual={:#x}", actual);
    |                     ----------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/data.rs:456:12
    |
456 | #[cfg_attr(feature = "cargo-clippy", allow(unreadable_literal))]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:710:13
    |
710 |             test_println!("-> get: {}; MAX={}", self.value, RefCount::<C>::MAX);
    |             ------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:830:9
    |
830 | /         test_println!(
831 | |             "InitGuard::release; curr_lifecycle={:?}; downgrading={}",
832 | |             Lifecycle::<C>::from_packed(self.curr_lifecycle),
833 | |             new_refs != 0,
834 | |         );
    | |_________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:836:13
    |
836 |             test_println!("-> already released!");
    |             ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:852:17
    |
852 |                 test_println!("--> advanced to PRESENT; done");
    |                 ---------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/handles.rs:1183:16
     |
1183 |     #[cfg_attr(feature = "cargo-clippy", allow(collapsible_if))]
     |                ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:856:17
    |
856 | /                 test_println!(
857 | |                     "--> lifecycle changed; actual={:?}",
858 | |                     Lifecycle::<C>::from_packed(actual)
859 | |                 );
    | |_________________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/handles.rs:1217:16
     |
1217 |     #[cfg_attr(feature = "cargo-clippy", allow(collapsible_if))]
     |                ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:336:12
    |
336 | #[cfg_attr(feature = "cargo-clippy", allow(collapsible_if))]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:870:13
    |
870 | /             test_println!(
871 | |                 "-> InitGuard::release; lifecycle={:#x}; state={:?}; refs={:?};",
872 | |                 curr_lifecycle,
873 | |                 state,
874 | |                 refs,
875 | |             );
    | |_____________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:710:12
    |
710 | #[cfg_attr(feature = "cargo-clippy", allow(collapsible_if, cyclomatic_complexity))]
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:1140:12
     |
1140 | #[cfg_attr(feature = "cargo-clippy", allow(collapsible_if))]
     |            ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
     = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:889:21
    |
889 |                     test_println!("-> InitGuard::RELEASE: done!");
    |                     --------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:86:20
    |
86  |         #[cfg_attr(feature = "cargo-clippy", allow(cast_ptr_alignment))]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
...
322 |         by_unit_check_alu!(is_ascii_impl, u8, 0x80, ASCII_MASK);
    |         ------------------------------------------------------- in this macro invocation
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `by_unit_check_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/slot.rs:894:21
    |
894 |                     test_println!("-> InitGuard::release; retry, actual={:#x}", actual);
    |                     ------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/stack.rs:72:11
   |
72 | #[cfg(all(loom, test))]
   |           ^^^^ help: found config with similar value: `feature = "loom"`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:86:20
    |
86  |         #[cfg_attr(feature = "cargo-clippy", allow(cast_ptr_alignment))]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
...
323 |         by_unit_check_alu!(is_basic_latin_impl, u16, 0x80, BASIC_LATIN_MASK);
    |         -------------------------------------------------------------------- in this macro invocation
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `by_unit_check_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:86:20
    |
86  |         #[cfg_attr(feature = "cargo-clippy", allow(cast_ptr_alignment))]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
...
324 |         by_unit_check_alu!(is_utf16_latin1_impl, u16, 0x100, LATIN1_MASK);
    |         ----------------------------------------------------------------- in this macro invocation
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `by_unit_check_alu` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `cargo-clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:591:20
    |
591 |         #[cfg_attr(feature = "cargo-clippy", allow(cast_ptr_alignment))]
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `any_all_workaround`, `default`, `fast-big5-hanzi-encode`, `fast-gb-hanzi-encode`, `fast-hangul-encode`, `fast-hanja-encode`, `fast-kanji-encode`, `fast-legacy-encode`, `less-slow-big5-hanzi-encode`, `less-slow-gb-hanzi-encode`, `less-slow-kanji-encode`, `serde`, and `simd-accel`
    = help: consider adding `cargo-clippy` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/encoding_rs-0.8.35/src/mem.rs:44:32
     |
44   |     ($($arg:tt)*) => (if !cfg!(fuzzing) { debug_assert!($($arg)*); })
     |                                ^^^^^^^
...
1933 |     non_fuzz_debug_assert!(is_utf8_latin1(src));
     |     ------------------------------------------- in this macro invocation
     |
     = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `non_fuzz_debug_assert` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `icu_normalizer_data` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/stack.rs:20:9
   |
20 |         test_println!("-> pop {:#x}", val);
   |         ---------------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/stack.rs:34:13
   |
34 |             test_println!("-> next {:#x}", next);
   |             ------------------------------------ in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/stack.rs:43:21
   |
43 |                     test_println!("-> retry!");
   |                     -------------------------- in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/stack.rs:47:21
   |
47 |                     test_println!("-> successful; next={:#x}", next);
   |                     ------------------------------------------------ in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:146:9
    |
146 |         test_println!("-> local head {:?}", head);
    |         ----------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:156:13
    |
156 |             test_println!("-> remote head {:?}", head);
    |             ------------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:163:13
    |
163 |             test_println!("-> NULL! {:?}", head);
    |             ------------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:185:9
    |
185 |         test_println!("-> offset {:?}", poff);
    |         ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:214:9
    |
214 |         test_println!("-> take: offset {:?}", offset);
    |         --------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:231:9
    |
231 |         test_println!("-> offset {:?}", offset);
    |         --------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:287:9
    |
287 |         test_println!("-> init_with: insert at offset: {}", index);
    |         ---------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:294:9
    |
294 |         test_println!("-> alloc new page ({})", self.size);
    |         -------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:318:9
    |
318 |         test_println!("-> offset {:?}", offset);
    |         --------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/page/mod.rs:338:9
    |
338 |         test_println!("-> offset {:?}", offset);
    |         --------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
   |
3  |         if cfg!(test) && cfg!(slab_print) {
   |                               ^^^^^^^^^^
   |
  ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:79:9
   |
79 |         test_println!("-> {:?}", addr);
   |         ------------------------------ in this macro invocation
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:111:9
    |
111 |         test_println!("-> remove_local {:?}", addr);
    |         ------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:125:9
    |
125 |         test_println!("-> take_remote {:?}; page {:?}", addr, page_index);
    |         ----------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:172:13
    |
172 |             test_println!("-> page {}; {:?}; {:?}", page_idx, local, page);
    |             -------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |           if cfg!(test) && cfg!(slab_print) {
    |                                 ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:208:9
    |
208 | /         test_println!(
209 | |             "-> clear_after_release; self.tid={:?}; current.tid={:?};",
210 | |             tid,
211 | |             self.tid
212 | |         );
    | |_________- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:286:9
    |
286 |         test_println!("-> get shard={}", idx);
    |         ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:293:9
    |
293 |         test_println!("current: {:?}", tid);
    |         ----------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:306:13
    |
306 |             test_println!("-> allocated new shard for index {} at {:p}", idx, ptr);
    |             ---------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:315:13
    |
315 |             test_println!("-> highest index={}, prev={}", std::cmp::max(max, idx), max);
    |             --------------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:326:9
    |
326 |         test_println!("Array::iter_mut");
    |         -------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:328:9
    |
328 |         test_println!("-> highest index={}", max);
    |         ----------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:381:9
    |
381 |         test_println!("---> loaded={:p} (order={:?})", ptr, order);
    |         ---------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:383:13
    |
383 |             test_println!("---> null");
    |             -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:418:9
    |
418 |         test_println!("IterMut::next");
    |         ------------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:425:13
    |
425 |             test_println!("-> next.is_some={}", next.is_some());
    |             --------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/shard.rs:427:17
    |
427 |                 test_println!("-> done");
    |                 ------------------------ in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/tid.rs:185:15
    |
185 | #[cfg(not(all(loom, any(feature = "loom", test))))]
    |               ^^^^ help: found config with similar value: `feature = "loom"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/tid.rs:197:21
    |
197 | #[cfg(all(test, not(loom)))]
    |                     ^^^^ help: found config with similar value: `feature = "loom"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:422:9
    |
422 |         test_println!("insert {:?}", tid);
    |         --------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `oid-registry` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=proc_macro2 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A substitute implementation of the compiler'\''s `proc_macro` API to decouple token-based libraries from the procedural macro use case.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=proc-macro2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/proc-macro2' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.95 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=95 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/proc-macro2-31eaae1416ecb1da/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name proc_macro2 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/proc-macro2-1.0.95/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="proc-macro"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "nightly", "proc-macro", "span-locations"))' -C metadata=ceec740203176e2f -C extra-filename=-c5da71e4551bf919 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern unicode_ident=/home/ivo/massive_game_server/target/release/deps/libunicode_ident-fa0428afe5ab3280.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg wrap_proc_macro --check-cfg 'cfg(fuzzing)' --check-cfg 'cfg(no_is_available)' --check-cfg 'cfg(no_literal_byte_character)' --check-cfg 'cfg(no_literal_c_string)' --check-cfg 'cfg(no_source_text)' --check-cfg 'cfg(proc_macro_span)' --check-cfg 'cfg(procmacro2_backtrace)' --check-cfg 'cfg(procmacro2_nightly_testing)' --check-cfg 'cfg(procmacro2_semver_exempt)' --check-cfg 'cfg(randomize_layout)' --check-cfg 'cfg(span_locations)' --check-cfg 'cfg(super_unstable)' --check-cfg 'cfg(wrap_proc_macro)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerocopy CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/Cargo.toml CARGO_PKG_AUTHORS='Joshua Liebow-Feeser <joshlf@google.com>:Jack Wrenn <jswrenn@amazon.com>' CARGO_PKG_DESCRIPTION='Zerocopy makes zero-cost memory manipulation effortless. We write "unsafe" so you don'\''t have to.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='BSD-2-Clause OR Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerocopy CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/zerocopy' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=0.8.25 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=25 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/zerocopy-87016f29f21e6c9e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerocopy --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerocopy-0.8.25/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="simd"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__internal_use_only_features_that_work_on_stable", "alloc", "derive", "float-nightly", "simd", "simd-nightly", "std", "zerocopy-derive"))' -C metadata=7089d8e3cc4892d6 -C extra-filename=-6e80bc33090eee8d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg zerocopy_aarch64_simd_1_59_0 --cfg zerocopy_core_error_1_81_0 --cfg zerocopy_diagnostic_on_unimplemented_1_78_0 --cfg zerocopy_generic_bounds_in_const_fn_1_61_0 --cfg zerocopy_panic_in_const_and_vec_try_reserve_1_57_0 --cfg zerocopy_target_has_atomics_1_60_0 --check-cfg 'cfg(zerocopy_aarch64_simd_1_59_0)' --check-cfg 'cfg(zerocopy_core_error_1_81_0)' --check-cfg 'cfg(zerocopy_diagnostic_on_unimplemented_1_78_0)' --check-cfg 'cfg(zerocopy_generic_bounds_in_const_fn_1_61_0)' --check-cfg 'cfg(zerocopy_panic_in_const_and_vec_try_reserve_1_57_0)' --check-cfg 'cfg(zerocopy_target_has_atomics_1_60_0)' --check-cfg 'cfg(doc_cfg)' --check-cfg 'cfg(kani)' --check-cfg 'cfg(__ZEROCOPY_INTERNAL_USE_ONLY_NIGHTLY_FEATURES_IN_TESTS)' --check-cfg 'cfg(coverage_nightly)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=semver CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser and evaluator for Cargo'\''s flavor of Semantic Versioning' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=semver CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/semver' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.26 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=26 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/semver-72028c763f7e0a89/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name semver --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/semver-1.0.26/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std"))' -C metadata=d24bc20c9f65ecaf -C extra-filename=-29bb5f4b3c1b787f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(no_alloc_crate)' --check-cfg 'cfg(no_const_vec_new)' --check-cfg 'cfg(no_exhaustive_int_match)' --check-cfg 'cfg(no_non_exhaustive)' --check-cfg 'cfg(no_nonzero_bitscan)' --check-cfg 'cfg(no_str_strip_prefix)' --check-cfg 'cfg(no_track_caller)' --check-cfg 'cfg(no_unsafe_op_in_unsafe_fn_lint)' --check-cfg 'cfg(test_node_semver)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=httparse CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A tiny, safe, speedy, zero-copy HTTP/1.x parser.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=httparse CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/httparse' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.10.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/httparse-4c712c7cf3c043d1/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name httparse --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/httparse-1.10.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(httparse_simd)' --check-cfg 'cfg(httparse_simd_target_feature_avx2)' --check-cfg 'cfg(httparse_simd_target_feature_sse42)' --check-cfg 'cfg(httparse_simd_neon_intrinsics)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=8726f057704551bc -C extra-filename=-4e64bb65f11071bd --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg httparse_simd_neon_intrinsics --cfg httparse_simd --cfg httparse_simd_target_feature_sse42 --cfg httparse_simd_target_feature_avx2`
[generic-array 0.14.7] cargo:rustc-cfg=relaxed_coherence
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:457:9
    |
457 |         test_println!("vacant_entry {:?}", tid);
    |         --------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/Cargo.toml CARGO_PKG_AUTHORS='Rousan Ali <hello@rousan.io>' CARGO_PKG_DESCRIPTION='An async parser for `multipart/form-data` content-type in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rousan/multer-rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=multer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rousan/multer-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.1.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/multer-05e773c867589ea9/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/multer-480d9bbeb5190cea/build-script-build`
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:518:9
    |
518 |         test_println!("rm_deferred {:?}", tid);
    |         -------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:584:9
    |
584 |         test_println!("rm {:?}", tid);
    |         ----------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:611:9
    |
611 |         test_println!("get {:?}; current={:?}", tid, Tid::<C>::current());
    |         ----------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:709:9
    |
709 |         test_println!("get_owned {:?}; current={:?}", tid, Tid::<C>::current());
    |         ----------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/Cargo.toml CARGO_PKG_AUTHORS='Stepan Koltsov <stepan.koltsov@gmail.com>' CARGO_PKG_DESCRIPTION='Rust implementation of Google protocol buffers
' CARGO_PKG_HOMEPAGE='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=protobuf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.28.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=28 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/protobuf-15976721a8e6211d/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/protobuf-2f6db7ae11fdc143/build-script-build`
warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:960:9
    |
960 |         test_println!("drop OwnedEntry: try clearing data");
    |         --------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:971:13
    |
971 |             test_println!("-> shard={:?}", shard_idx);
    |             ----------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `slab_print`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/macros.rs:3:31
    |
3   |         if cfg!(test) && cfg!(slab_print) {
    |                               ^^^^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sharded-slab-0.1.7/src/lib.rs:975:17
    |
975 |                 test_println!("-> shard={:?} does not exist! THIS IS A BUG", shard_idx);
    |                 ----------------------------------------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_print)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_print)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `test_println` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `ahash` (build script) generated 5 warnings (5 duplicates)
warning: lint `private_in_public` has been removed: replaced with another group of lints, see RFC <https://rust-lang.github.io/rfcs/2145-type-privacy.html> for more information
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-log-0.2.0/src/lib.rs:115:5
    |
115 |     private_in_public,
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: `nu-ansi-term` (lib) generated 6 warnings (5 duplicates)
warning: `rustls-native-certs` (lib) generated 5 warnings (5 duplicates)
[anyhow 1.0.98] cargo:rerun-if-env-changed=RUSTC_BOOTSTRAP
warning: `autocfg` (lib) generated 5 warnings (5 duplicates)
warning: `portable-atomic` (build script) generated 5 warnings (5 duplicates)
   Compiling lock_api v0.4.13
   Compiling slab v0.4.9
   Compiling memoffset v0.7.1
   Compiling num-traits v0.2.19
   Compiling substring v1.4.5
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=crypto,default,kdf,nist_algs,pkcs1,pkcs12,pkcs7,pkcs9,registry,x509,x962 CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_CRYPTO=1 CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_KDF=1 CARGO_FEATURE_NIST_ALGS=1 CARGO_FEATURE_PKCS1=1 CARGO_FEATURE_PKCS12=1 CARGO_FEATURE_PKCS7=1 CARGO_FEATURE_PKCS9=1 CARGO_FEATURE_REGISTRY=1 CARGO_FEATURE_X509=1 CARGO_FEATURE_X962=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Object Identifier (OID) database' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/oid-registry' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=oid-registry CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/oid-registry.git' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/oid-registry-a68ca2eb95b3a7a1/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/oid-registry-f78a1a72ad315f0b/build-script-build`
warning: `flatc-rust` (lib) generated 5 warnings (5 duplicates)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_build_probe)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_nightly_testing)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_no_core_error)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_no_core_unwind_safe)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_no_fmt_arguments_as_str)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_no_ptr_addr_of)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(anyhow_no_unsafe_op_in_unsafe_fn_lint)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(error_generic_member_access)
[anyhow 1.0.98] cargo:rustc-check-cfg=cfg(std_backtrace)
[anyhow 1.0.98] cargo:rustc-cfg=std_backtrace
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=lock_api CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.4.13 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=13 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="atomic_usize"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arc_lock", "atomic_usize", "default", "nightly", "owning_ref", "serde"))' -C metadata=51608c7853ad7029 -C extra-filename=-85616807cb63b9fb --out-dir /home/ivo/massive_game_server/target/release/build/lock_api-85616807cb63b9fb -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern autocfg=/home/ivo/massive_game_server/target/release/deps/libautocfg-58cd4444f15aa9a0.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>' CARGO_PKG_DESCRIPTION='Pre-allocated storage for a uniform data type' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=slab CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/slab' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=0.4.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std"))' -C metadata=447eb048a236cc27 -C extra-filename=-259346e52d6e2382 --out-dir /home/ivo/massive_game_server/target/release/build/slab-259346e52d6e2382 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern autocfg=/home/ivo/massive_game_server/target/release/deps/libautocfg-58cd4444f15aa9a0.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Gilad Naaman <gilad.naaman@gmail.com>' CARGO_PKG_DESCRIPTION='offset_of functionality for Rust structs.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memoffset CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Gilnaa/memoffset' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "unstable_const"))' -C metadata=b07e86330cb529d1 -C extra-filename=-6319273734a7fdac --out-dir /home/ivo/massive_game_server/target/release/build/memoffset-6319273734a7fdac -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern autocfg=/home/ivo/massive_game_server/target/release/deps/libautocfg-58cd4444f15aa9a0.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[oid-registry 0.7.1] cargo:rerun-if-changed=assets/oid_db.txt
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,fallback CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_FALLBACK=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Portable atomic types including support for 128-bit atomics, atomic float, etc.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=portable-atomic CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/taiki-e/portable-atomic' CARGO_PKG_RUST_VERSION=1.34 CARGO_PKG_VERSION=1.11.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/portable-atomic-83923e77f3e274b8/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/portable-atomic-286fd327b687fd0f/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Numeric traits for generic mathematics' CARGO_PKG_HOMEPAGE='https://github.com/rust-num/num-traits' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-traits CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-num/num-traits' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.2.19 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=19 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="i128"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "i128", "libm", "std"))' -C metadata=504347f7e1cbda3a -C extra-filename=-27916a3b02bb7506 --out-dir /home/ivo/massive_game_server/target/release/build/num-traits-27916a3b02bb7506 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern autocfg=/home/ivo/massive_game_server/target/release/deps/libautocfg-58cd4444f15aa9a0.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[portable-atomic 1.11.0] cargo:rerun-if-changed=build.rs
[portable-atomic 1.11.0] cargo:rerun-if-changed=src/gen/build.rs
[portable-atomic 1.11.0] cargo:rerun-if-changed=version.rs
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5/Cargo.toml CARGO_PKG_AUTHORS='Anders Evensen' CARGO_PKG_DESCRIPTION='A substring method for string types.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=substring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Anders429/substring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.4.5 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=3cbb955b276caa44 -C extra-filename=-1df943e5e3ddeb1b --out-dir /home/ivo/massive_game_server/target/release/build/substring-1df943e5e3ddeb1b -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern autocfg=/home/ivo/massive_game_server/target/release/deps/libautocfg-58cd4444f15aa9a0.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,getrandom,runtime-rng,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_GETRANDOM=1 CARGO_FEATURE_RUNTIME_RNG=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml CARGO_PKG_AUTHORS='Tom Kaitchuck <Tom.Kaitchuck@gmail.com>' CARGO_PKG_DESCRIPTION='A non-cryptographic hash function using AES-NI for high performance' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ahash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tkaitchuck/ahash' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.8.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/ahash-a2343e8a4c7b2bd3/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/ahash-cf665087c55b87e3/build-script-build`
[portable-atomic 1.11.0] cargo:rustc-check-cfg=cfg(target_feature,values("zacas","fast-serialization","load-store-on-cond","distinct-ops","miscellaneous-extensions-3"))
[portable-atomic 1.11.0] cargo:rustc-check-cfg=cfg(portable_atomic_disable_fiq,portable_atomic_force_amo,portable_atomic_ll_sc_rmw,portable_atomic_new_atomic_intrinsics,portable_atomic_no_asm,portable_atomic_no_asm_maybe_uninit,portable_atomic_no_atomic_64,portable_atomic_no_atomic_cas,portable_atomic_no_atomic_load_store,portable_atomic_no_atomic_min_max,portable_atomic_no_cfg_target_has_atomic,portable_atomic_no_cmpxchg16b_intrinsic,portable_atomic_no_cmpxchg16b_target_feature,portable_atomic_no_const_mut_refs,portable_atomic_no_const_raw_ptr_deref,portable_atomic_no_const_transmute,portable_atomic_no_core_unwind_safe,portable_atomic_no_diagnostic_namespace,portable_atomic_no_offset_of,portable_atomic_no_strict_provenance,portable_atomic_no_stronger_failure_ordering,portable_atomic_no_track_caller,portable_atomic_no_unsafe_op_in_unsafe_fn,portable_atomic_pre_llvm_15,portable_atomic_pre_llvm_16,portable_atomic_pre_llvm_18,portable_atomic_pre_llvm_20,portable_atomic_s_mode,portable_atomic_sanitize_thread,portable_atomic_target_feature,portable_atomic_unsafe_assume_single_core,portable_atomic_unstable_asm,portable_atomic_unstable_asm_experimental_arch,portable_atomic_unstable_cfg_target_has_atomic,portable_atomic_unstable_isa_attribute)
[portable-atomic 1.11.0] cargo:rustc-check-cfg=cfg(portable_atomic_target_feature,values("cmpxchg16b","distinct-ops","fast-serialization","load-store-on-cond","lse","lse128","lse2","mclass","miscellaneous-extensions-3","quadword-atomics","rcpc3","v6","zaamo","zabha","zacas"))
[portable-atomic 1.11.0] cargo:rustc-cfg=portable_atomic_pre_llvm_20
warning: `icu_properties_data` (lib) generated 5 warnings (5 duplicates)
warning: `icu_properties_data` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=protobuf CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/Cargo.toml CARGO_PKG_AUTHORS='Stepan Koltsov <stepan.koltsov@gmail.com>' CARGO_PKG_DESCRIPTION='Rust implementation of Google protocol buffers
' CARGO_PKG_HOMEPAGE='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=protobuf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/stepancheg/rust-protobuf/' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.28.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=28 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/protobuf-15976721a8e6211d/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name protobuf --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bytes", "serde", "serde_derive", "with-bytes", "with-serde"))' -C metadata=78ccdb8e468240d7 -C extra-filename=-92a0417d8e19b46f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=anyhow CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Flexible concrete Error type built on std::error::Error' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=anyhow CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/anyhow' CARGO_PKG_RUST_VERSION=1.39 CARGO_PKG_VERSION=1.0.98 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=98 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/anyhow-e8880123a3ba6bcd/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name anyhow --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anyhow-1.0.98/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("backtrace", "default", "std"))' -C metadata=97cd9cb066a15a95 -C extra-filename=-6e6caebf8bf55556 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg std_backtrace --check-cfg 'cfg(anyhow_build_probe)' --check-cfg 'cfg(anyhow_nightly_testing)' --check-cfg 'cfg(anyhow_no_core_error)' --check-cfg 'cfg(anyhow_no_core_unwind_safe)' --check-cfg 'cfg(anyhow_no_fmt_arguments_as_str)' --check-cfg 'cfg(anyhow_no_ptr_addr_of)' --check-cfg 'cfg(anyhow_no_unsafe_op_in_unsafe_fn_lint)' --check-cfg 'cfg(error_generic_member_access)' --check-cfg 'cfg(std_backtrace)'`
[ahash 0.8.12] cargo:rerun-if-changed=build.rs
[ahash 0.8.12] cargo:rustc-check-cfg=cfg(specialize)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=portable_atomic CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Portable atomic types including support for 128-bit atomics, atomic float, etc.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=portable-atomic CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/taiki-e/portable-atomic' CARGO_PKG_RUST_VERSION=1.34 CARGO_PKG_VERSION=1.11.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/portable-atomic-83923e77f3e274b8/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name portable_atomic --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 '--warn=clippy::unused_trait_names' --warn=unreachable_pub --warn=unnameable_types --warn=unexpected_cfgs '--warn=clippy::undocumented_unsafe_blocks' '--warn=clippy::transmute_undefined_repr' '--warn=clippy::trailing_empty_array' --warn=single_use_lifetimes --warn=rust_2018_idioms '--warn=clippy::pedantic' --warn=non_ascii_idents '--warn=clippy::inline_asm_x86_att_syntax' --warn=improper_ctypes_definitions --warn=improper_ctypes --warn=deprecated_safe '--warn=clippy::default_union_representation' '--warn=clippy::as_underscore' '--warn=clippy::as_ptr_cast_mut' '--warn=clippy::all' '--allow=clippy::unreadable_literal' '--allow=clippy::type_complexity' '--allow=clippy::too_many_lines' '--allow=clippy::too_many_arguments' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::single_match_else' '--allow=clippy::single_match' '--allow=clippy::similar_names' '--allow=clippy::range_plus_one' '--allow=clippy::nonminimal_bool' '--allow=clippy::naive_bytecount' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_errors_doc' '--allow=clippy::manual_range_contains' '--allow=clippy::manual_assert' '--allow=clippy::lint_groups_priority' '--allow=clippy::incompatible_msrv' '--allow=clippy::float_cmp' '--allow=clippy::doc_markdown' '--allow=clippy::declare_interior_mutable_const' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(target_arch,values("xtensa"))' --check-cfg 'cfg(target_arch,values("amdgpu"))' --check-cfg 'cfg(target_os,values("psx"))' --check-cfg 'cfg(target_env,values("psx"))' --check-cfg 'cfg(target_feature,values("lse2","lse128","rcpc3"))' --check-cfg 'cfg(target_feature,values("quadword-atomics"))' --check-cfg 'cfg(target_feature,values("zaamo","zabha"))' --check-cfg 'cfg(target_pointer_width,values("128"))' --check-cfg 'cfg(portable_atomic_test_outline_atomics_detect_false,qemu,valgrind)' --check-cfg 'cfg(portable_atomic_no_outline_atomics,portable_atomic_outline_atomics,portable_atomic_unstable_f16,portable_atomic_unstable_f128)' --check-cfg 'cfg(portable_atomic_unstable_coerce_unsized)' --cfg 'feature="default"' --cfg 'feature="fallback"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("critical-section", "default", "disable-fiq", "fallback", "float", "force-amo", "require-cas", "s-mode", "serde", "std", "unsafe-assume-single-core"))' -C metadata=d598e359659f3457 -C extra-filename=-0f905871fe1080f3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg portable_atomic_pre_llvm_20 --check-cfg 'cfg(target_feature,values("zacas","fast-serialization","load-store-on-cond","distinct-ops","miscellaneous-extensions-3"))' --check-cfg 'cfg(portable_atomic_disable_fiq,portable_atomic_force_amo,portable_atomic_ll_sc_rmw,portable_atomic_new_atomic_intrinsics,portable_atomic_no_asm,portable_atomic_no_asm_maybe_uninit,portable_atomic_no_atomic_64,portable_atomic_no_atomic_cas,portable_atomic_no_atomic_load_store,portable_atomic_no_atomic_min_max,portable_atomic_no_cfg_target_has_atomic,portable_atomic_no_cmpxchg16b_intrinsic,portable_atomic_no_cmpxchg16b_target_feature,portable_atomic_no_const_mut_refs,portable_atomic_no_const_raw_ptr_deref,portable_atomic_no_const_transmute,portable_atomic_no_core_unwind_safe,portable_atomic_no_diagnostic_namespace,portable_atomic_no_offset_of,portable_atomic_no_strict_provenance,portable_atomic_no_stronger_failure_ordering,portable_atomic_no_track_caller,portable_atomic_no_unsafe_op_in_unsafe_fn,portable_atomic_pre_llvm_15,portable_atomic_pre_llvm_16,portable_atomic_pre_llvm_18,portable_atomic_pre_llvm_20,portable_atomic_s_mode,portable_atomic_sanitize_thread,portable_atomic_target_feature,portable_atomic_unsafe_assume_single_core,portable_atomic_unstable_asm,portable_atomic_unstable_asm_experimental_arch,portable_atomic_unstable_cfg_target_has_atomic,portable_atomic_unstable_isa_attribute)' --check-cfg 'cfg(portable_atomic_target_feature,values("cmpxchg16b","distinct-ops","fast-serialization","load-store-on-cond","lse","lse128","lse2","mclass","miscellaneous-extensions-3","quadword-atomics","rcpc3","v6","zaamo","zabha","zacas"))'`
warning: `strsim` (lib) generated 5 warnings (5 duplicates)
[ahash 0.8.12] cargo:rustc-check-cfg=cfg(folded_multiply)
[ahash 0.8.12] cargo:rustc-cfg=folded_multiply
warning: `pem` (lib) generated 5 warnings (5 duplicates)
warning: trait `Sealed` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-0.2.12/src/lib.rs:210:15
    |
210 |     pub trait Sealed {}
    |               ^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

   Compiling rustc_version v0.4.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustc_version CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.1/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A library for querying the version of a installed rustc compiler' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustc_version CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/djc/rustc-version-rs' CARGO_PKG_RUST_VERSION=1.32 CARGO_PKG_VERSION=0.4.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustc_version --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustc_version-0.4.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f6190e49289bef59 -C extra-filename=-361f056af408630e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern semver=/home/ivo/massive_game_server/target/release/deps/libsemver-29bb5f4b3c1b787f.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `tracing-log` (lib) generated 6 warnings (5 duplicates)
warning: `anstream` (lib) generated 5 warnings (5 duplicates)
warning: `lock_api` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=atomic_usize,default CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ATOMIC_USIZE=1 CARGO_FEATURE_DEFAULT=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=lock_api CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.4.13 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=13 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/lock_api-4545333aa4bcbc7f/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/lock_api-85616807cb63b9fb/build-script-build`
warning: `tracing-core` (lib) generated 5 warnings (5 duplicates)
warning: `num-traits` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,i128,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_I128=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Numeric traits for generic mathematics' CARGO_PKG_HOMEPAGE='https://github.com/rust-num/num-traits' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-traits CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-num/num-traits' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.2.19 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=19 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/num-traits-fcea04d1ca984878/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/num-traits-27916a3b02bb7506/build-script-build`
warning: `substring` (build script) generated 5 warnings (5 duplicates)
warning: `memoffset` (build script) generated 5 warnings (5 duplicates)
warning: `slab` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5/Cargo.toml CARGO_PKG_AUTHORS='Anders Evensen' CARGO_PKG_DESCRIPTION='A substring method for string types.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=substring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Anders429/substring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.4.5 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/substring-6e3567c399e31bda/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/substring-1df943e5e3ddeb1b/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Gilad Naaman <gilad.naaman@gmail.com>' CARGO_PKG_DESCRIPTION='offset_of functionality for Rust structs.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memoffset CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Gilnaa/memoffset' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/memoffset-5dd8b6d2e2ff51cf/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/memoffset-6319273734a7fdac/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>' CARGO_PKG_DESCRIPTION='Pre-allocated storage for a uniform data type' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=slab CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/slab' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=0.4.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/slab-f21fc13353f53e47/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/slab-259346e52d6e2382/build-script-build`
warning: unexpected `cfg` condition name: `never`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/lib.rs:186:7
    |
186 | #[cfg(never)]
    |       ^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(never)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(never)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `never`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/lib.rs:189:7
    |
189 | #[cfg(never)]
    |       ^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(never)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(never)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/descriptor.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^
   |
   = note: `#[warn(renamed_and_removed_lints)]` on by default

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/plugin.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/rustproto.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/any.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/api.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/duration.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/empty.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/field_mask.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/source_context.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/struct_pb.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/timestamp.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/type_pb.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: lint `box_pointers` has been removed: it does not detect other kinds of allocations, and existed only for historical reasons
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/wrappers.rs:11:10
   |
11 | #![allow(box_pointers)]
   |          ^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/well_known_types/mod.rs:17:9
   |
17 | pub use self::any::*;
   |         ^^^^^^^^^^^^ the name `file_descriptor_proto` in the value namespace is first re-exported here
...
26 | pub use self::wrappers::*;
   |         ----------------- but the name `file_descriptor_proto` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

[lock_api 0.4.13] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[lock_api 0.4.13]   |
[lock_api 0.4.13]   = note: this feature is not stably supported; its behavior can change in the future
[lock_api 0.4.13] 
[lock_api 0.4.13] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[lock_api 0.4.13]   |
[lock_api 0.4.13]   = note: this feature is not stably supported; its behavior can change in the future
[lock_api 0.4.13] 
[lock_api 0.4.13] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[lock_api 0.4.13]   |
[lock_api 0.4.13]   = note: this feature is not stably supported; its behavior can change in the future
[lock_api 0.4.13] 
[lock_api 0.4.13] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[lock_api 0.4.13]   |
[lock_api 0.4.13]   = note: this feature is not stably supported; its behavior can change in the future
[lock_api 0.4.13] 
[lock_api 0.4.13] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[lock_api 0.4.13]   |
[lock_api 0.4.13]   = note: this feature is not stably supported; its behavior can change in the future
[lock_api 0.4.13] 
[lock_api 0.4.13] warning: 5 warnings emitted
[lock_api 0.4.13] 
[lock_api 0.4.13] cargo:rerun-if-changed=build.rs
[lock_api 0.4.13] cargo:rustc-check-cfg=cfg(has_const_fn_trait_bound)
[lock_api 0.4.13] cargo:rustc-cfg=has_const_fn_trait_bound
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=lock_api CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=lock_api CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.4.13 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=13 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/lock_api-4545333aa4bcbc7f/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name lock_api --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/lock_api-0.4.13/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="atomic_usize"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arc_lock", "atomic_usize", "default", "nightly", "owning_ref", "serde"))' -C metadata=3d68f11b82a69f6b -C extra-filename=-d02ec6c849e4aa3c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern scopeguard=/home/ivo/massive_game_server/target/release/deps/libscopeguard-85bc9e96188a4f2d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg has_const_fn_trait_bound --check-cfg 'cfg(has_const_fn_trait_bound)'`
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: 5 warnings emitted
[num-traits 0.2.19] 
[substring 1.4.5] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[substring 1.4.5]   |
[substring 1.4.5]   = note: this feature is not stably supported; its behavior can change in the future
[substring 1.4.5] 
[substring 1.4.5] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[substring 1.4.5]   |
[substring 1.4.5]   = note: this feature is not stably supported; its behavior can change in the future
[substring 1.4.5] 
[substring 1.4.5] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[substring 1.4.5]   |
[substring 1.4.5]   = note: this feature is not stably supported; its behavior can change in the future
[substring 1.4.5] 
[substring 1.4.5] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[substring 1.4.5]   |
[substring 1.4.5]   = note: this feature is not stably supported; its behavior can change in the future
[substring 1.4.5] 
[substring 1.4.5] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[substring 1.4.5]   |
[substring 1.4.5]   = note: this feature is not stably supported; its behavior can change in the future
[substring 1.4.5] 
[num-traits 0.2.19] cargo:rustc-check-cfg=cfg(has_total_cmp)
[substring 1.4.5] warning: 5 warnings emitted
[substring 1.4.5] 
[memoffset 0.7.1] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[memoffset 0.7.1]   |
[memoffset 0.7.1]   = note: this feature is not stably supported; its behavior can change in the future
[memoffset 0.7.1] 
[memoffset 0.7.1] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[memoffset 0.7.1]   |
[memoffset 0.7.1]   = note: this feature is not stably supported; its behavior can change in the future
[memoffset 0.7.1] 
[memoffset 0.7.1] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[memoffset 0.7.1]   |
[memoffset 0.7.1]   = note: this feature is not stably supported; its behavior can change in the future
[memoffset 0.7.1] 
[memoffset 0.7.1] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[memoffset 0.7.1]   |
[memoffset 0.7.1]   = note: this feature is not stably supported; its behavior can change in the future
[memoffset 0.7.1] 
[memoffset 0.7.1] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[memoffset 0.7.1]   |
[memoffset 0.7.1]   = note: this feature is not stably supported; its behavior can change in the future
[memoffset 0.7.1] 
[substring 1.4.5] cargo:rustc-check-cfg=cfg(rustc_1_6)
[substring 1.4.5] cargo:rustc-cfg=rustc_1_6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=substring CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5/Cargo.toml CARGO_PKG_AUTHORS='Anders Evensen' CARGO_PKG_DESCRIPTION='A substring method for string types.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=substring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Anders429/substring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.4.5 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/substring-6e3567c399e31bda/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name substring --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/substring-1.4.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c36d62c6a1de31a6 -C extra-filename=-8e3d617b2ea6a171 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg rustc_1_6 --check-cfg 'cfg(rustc_1_6)'`
[memoffset 0.7.1] warning: 5 warnings emitted
[memoffset 0.7.1] 
[memoffset 0.7.1] cargo:rustc-cfg=tuple_ty
[memoffset 0.7.1] cargo:rustc-cfg=allow_clippy
[memoffset 0.7.1] cargo:rustc-cfg=maybe_uninit
[memoffset 0.7.1] cargo:rustc-cfg=doctests
[memoffset 0.7.1] cargo:rustc-cfg=raw_ref_macros
[slab 0.4.9] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[slab 0.4.9]   |
[slab 0.4.9]   = note: this feature is not stably supported; its behavior can change in the future
[slab 0.4.9] 
[slab 0.4.9] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[slab 0.4.9]   |
[slab 0.4.9]   = note: this feature is not stably supported; its behavior can change in the future
[slab 0.4.9] 
[slab 0.4.9] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[slab 0.4.9]   |
[slab 0.4.9]   = note: this feature is not stably supported; its behavior can change in the future
[slab 0.4.9] 
[slab 0.4.9] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[slab 0.4.9]   |
[slab 0.4.9]   = note: this feature is not stably supported; its behavior can change in the future
[slab 0.4.9] 
[slab 0.4.9] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[slab 0.4.9]   |
[slab 0.4.9]   = note: this feature is not stably supported; its behavior can change in the future
[slab 0.4.9] 
[slab 0.4.9] warning: 5 warnings emitted
[slab 0.4.9] 
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=memoffset CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Gilad Naaman <gilad.naaman@gmail.com>' CARGO_PKG_DESCRIPTION='offset_of functionality for Rust structs.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=memoffset CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Gilnaa/memoffset' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/memoffset-5dd8b6d2e2ff51cf/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name memoffset --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "unstable_const"))' -C metadata=3fd3a29d01f85e02 -C extra-filename=-b9e6ff57317d4e5c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg tuple_ty --cfg allow_clippy --cfg maybe_uninit --cfg doctests --cfg raw_ref_macros`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=slab CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>' CARGO_PKG_DESCRIPTION='Pre-allocated storage for a uniform data type' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=slab CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/slab' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=0.4.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/slab-f21fc13353f53e47/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name slab --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "std"))' -C metadata=0de44bd688500358 -C extra-filename=-62cea3ce9179a499 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512f`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512cd`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512bw`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512dq`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
[num-traits 0.2.19] warning: unstable feature specified for `-Ctarget-feature`: `avx512vl`
[num-traits 0.2.19]   |
[num-traits 0.2.19]   = note: this feature is not stably supported; its behavior can change in the future
[num-traits 0.2.19] 
warning: `httparse` (lib) generated 5 warnings (5 duplicates)
[num-traits 0.2.19] warning: 5 warnings emitted
[num-traits 0.2.19] 
[num-traits 0.2.19] cargo:rustc-cfg=has_total_cmp
[num-traits 0.2.19] cargo:rerun-if-changed=build.rs
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_traits CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Numeric traits for generic mathematics' CARGO_PKG_HOMEPAGE='https://github.com/rust-num/num-traits' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-traits CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-num/num-traits' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.2.19 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=19 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/num-traits-fcea04d1ca984878/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_traits --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="i128"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "i128", "libm", "std"))' -C metadata=b8781da4f7a7a6a8 -C extra-filename=-7e0c3c4e0ad35639 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg has_total_cmp --check-cfg 'cfg(has_total_cmp)'`
   Compiling crossbeam-epoch v0.9.18
   Compiling crossbeam-channel v0.5.15
   Compiling crossbeam-queue v0.3.12
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam_epoch CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Epoch-based garbage collection' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-epoch CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.9.18 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=18 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam_epoch --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "loom", "loom-crate", "nightly", "std"))' -C metadata=707a28354063be6a -C extra-filename=-d0658ce18407787c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam_channel CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Multi-producer multi-consumer channels for message passing' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-channel CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.5.15 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam_channel --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-channel-0.5.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs '--allow=clippy::lint_groups_priority' '--allow=clippy::declare_interior_mutable_const' --check-cfg 'cfg(crossbeam_loom)' --check-cfg 'cfg(crossbeam_sanitize)' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=00a9b223788d083c -C extra-filename=-983fb481b900eb25 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam_queue CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-queue-0.3.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-queue-0.3.12/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Concurrent queues' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-queue' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-queue CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.3.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam_queue --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-queue-0.3.12/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs '--allow=clippy::lint_groups_priority' '--allow=clippy::declare_interior_mutable_const' --check-cfg 'cfg(crossbeam_loom)' --check-cfg 'cfg(crossbeam_sanitize)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "nightly", "std"))' -C metadata=ae57fd2fa0f10dae -C extra-filename=-aba442d9063b04b5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `doctests`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/lib.rs:65:7
   |
65 | #[cfg(doctests)]
   |       ^^^^^^^^ help: there is a config with a similar name: `doctest`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doctests)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doctests)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `doctests`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/lib.rs:68:7
   |
68 | #[cfg(doctests)]
   |       ^^^^^^^^ help: there is a config with a similar name: `doctest`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doctests)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doctests)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `raw_ref_macros`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:22:7
   |
22 | #[cfg(raw_ref_macros)]
   |       ^^^^^^^^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(raw_ref_macros)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(raw_ref_macros)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `raw_ref_macros`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:30:11
   |
30 | #[cfg(not(raw_ref_macros))]
   |           ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(raw_ref_macros)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(raw_ref_macros)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:57:7
   |
57 | #[cfg(allow_clippy)]
   |       ^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:69:11
   |
69 | #[cfg(not(allow_clippy))]
   |           ^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:90:7
   |
90 | #[cfg(allow_clippy)]
   |       ^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:100:11
    |
100 | #[cfg(not(allow_clippy))]
    |           ^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:125:7
    |
125 | #[cfg(allow_clippy)]
    |       ^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `allow_clippy`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:141:11
    |
141 | #[cfg(not(allow_clippy))]
    |           ^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(allow_clippy)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(allow_clippy)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `tuple_ty`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/raw_field.rs:183:7
    |
183 | #[cfg(tuple_ty)]
    |       ^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tuple_ty)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(tuple_ty)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `maybe_uninit`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/offset_of.rs:23:7
   |
23 | #[cfg(maybe_uninit)]
   |       ^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(maybe_uninit)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(maybe_uninit)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `maybe_uninit`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/offset_of.rs:37:11
   |
37 | #[cfg(not(maybe_uninit))]
   |           ^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(maybe_uninit)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(maybe_uninit)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `tuple_ty`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/memoffset-0.7.1/src/offset_of.rs:121:7
    |
121 | #[cfg(tuple_ty)]
    |       ^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(tuple_ty)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(tuple_ty)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_const_vec_new`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:250:15
    |
250 |     #[cfg(not(slab_no_const_vec_new))]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_const_vec_new)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_const_vec_new)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `slab_no_const_vec_new`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:264:11
    |
264 |     #[cfg(slab_no_const_vec_new)]
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_const_vec_new)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_const_vec_new)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:929:20
    |
929 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:1098:20
     |
1098 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:1206:20
     |
1206 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `slab_no_track_caller`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/slab-0.4.9/src/lib.rs:1216:20
     |
1216 |     #[cfg_attr(not(slab_no_track_caller), track_caller)]
     |                    ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(slab_no_track_caller)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(slab_no_track_caller)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

   Compiling quote v1.0.40
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=quote CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Quasi-quoting macro quote'\!'(...)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=quote CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/quote' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.40 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=40 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name quote --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quote-1.0.40/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="proc-macro"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "proc-macro"))' -C metadata=7883283c9b42eba4 -C extra-filename=-7692427ea321e115 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `memoffset` (lib) generated 19 warnings (5 duplicates)
warning: `substring` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs:66:7
   |
66 | #[cfg(crossbeam_loom)]
   |       ^^^^^^^^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs:69:7
   |
69 | #[cfg(crossbeam_loom)]
   |       ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/lib.rs:91:11
   |
91 | #[cfg(not(crossbeam_loom))]
   |           ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/atomic.rs:1675:21
     |
1675 | #[cfg(all(test, not(crossbeam_loom)))]
     |                     ^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/atomic.rs:350:15
    |
350 |     #[cfg(not(crossbeam_loom))]
    |               ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/atomic.rs:358:11
    |
358 |     #[cfg(crossbeam_loom)]
    |           ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/collector.rs:112:21
    |
112 | #[cfg(all(test, not(crossbeam_loom)))]
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/deferred.rs:90:21
   |
90 | #[cfg(all(test, not(crossbeam_loom)))]
   |                     ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_sanitize`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/internal.rs:56:15
   |
56 | #[cfg(not(any(crossbeam_sanitize, miri)))]
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_sanitize)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_sanitize)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_sanitize`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/internal.rs:59:11
   |
59 | #[cfg(any(crossbeam_sanitize, miri))]
   |           ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_sanitize)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_sanitize)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_sanitize`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/internal.rs:300:15
    |
300 | #[cfg(not(any(crossbeam_sanitize, miri)))] // `crossbeam_sanitize` and `miri` reduce the size of `Local`
    |               ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_sanitize)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_sanitize)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/internal.rs:557:21
    |
557 | #[cfg(all(test, not(crossbeam_loom)))]
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_sanitize`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/internal.rs:202:29
    |
202 |         let steps = if cfg!(crossbeam_sanitize) {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_sanitize)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_sanitize)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/sync/mod.rs:5:11
  |
5 | #[cfg(not(crossbeam_loom))]
  |           ^^^^^^^^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/sync/list.rs:298:21
    |
298 | #[cfg(all(test, not(crossbeam_loom)))]
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/sync/queue.rs:217:21
    |
217 | #[cfg(all(test, not(crossbeam_loom)))]
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/default.rs:10:11
   |
10 | #[cfg(not(crossbeam_loom))]
   |           ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/default.rs:64:21
   |
64 | #[cfg(all(test, not(crossbeam_loom)))]
   |                     ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/default.rs:14:15
   |
14 |     #[cfg(not(crossbeam_loom))]
   |               ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-epoch-0.9.18/src/default.rs:22:11
   |
22 |     #[cfg(crossbeam_loom)]
   |           ^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

   Compiling http-body v0.4.6
   Compiling headers-core v0.2.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=http_body CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-0.4.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-0.4.6/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>:Lucio Franco <luciofranco14@gmail.com>:Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Trait representing an asynchronous, streaming, HTTP request or response body.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=http-body CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/http-body' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.4.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name http_body --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/http-body-0.4.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=b4c66d1d122d4cc1 -C extra-filename=-07e4c35b43911fcd --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=headers_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-core-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-core-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='typed HTTP headers core trait' CARGO_PKG_HOMEPAGE='https://hyper.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=headers-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/headers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name headers_core --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-core-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=e3153a139bcf65f3 -C extra-filename=-e38f4539472dc949 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `typenum` (lib) generated 5 warnings (5 duplicates)
warning: `slab` (lib) generated 11 warnings (5 duplicates)
warning: `lock_api` (lib) generated 5 warnings (5 duplicates)
warning: `crossbeam-queue` (lib) generated 5 warnings (5 duplicates)
   Compiling jobserver v0.1.33
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=jobserver CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='An implementation of the GNU Make jobserver for Rust.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/jobserver-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=jobserver CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/jobserver-rs' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.1.33 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=33 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name jobserver --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/jobserver-0.1.33/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c28bc532e13c3080 -C extra-filename=-354ac75b1216f1e2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-b1f6962553262e28.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `headers-core` (lib) generated 5 warnings (5 duplicates)
warning: `portable-atomic` (lib) generated 5 warnings (5 duplicates)
warning: `anyhow` (lib) generated 5 warnings (5 duplicates)
warning: `tinyvec` (lib) generated 5 warnings (5 duplicates)
warning: `libc` (lib) generated 5 warnings (5 duplicates)
warning: `pkg-config` (lib) generated 5 warnings (5 duplicates)
warning: `deranged` (lib) generated 5 warnings (5 duplicates)
warning: `crossbeam-utils` (lib) generated 5 warnings (5 duplicates)
   Compiling syn v2.0.101
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=syn CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.101 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.101/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser for Rust source code' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=syn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/syn' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=2.0.101 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=101 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name syn --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-2.0.101/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="clone-impls"' --cfg 'feature="default"' --cfg 'feature="derive"' --cfg 'feature="extra-traits"' --cfg 'feature="fold"' --cfg 'feature="full"' --cfg 'feature="parsing"' --cfg 'feature="printing"' --cfg 'feature="proc-macro"' --cfg 'feature="visit"' --cfg 'feature="visit-mut"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "test", "visit", "visit-mut"))' -C metadata=91b7a36fafce6847 -C extra-filename=-a0df0d8428bd1779 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rmeta --extern unicode_ident=/home/ivo/massive_game_server/target/release/deps/libunicode_ident-fa0428afe5ab3280.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=syn CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Parser for Rust source code' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=syn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/syn' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.109 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/syn-d33c125ac395aaf9/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name syn --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="clone-impls"' --cfg 'feature="default"' --cfg 'feature="derive"' --cfg 'feature="extra-traits"' --cfg 'feature="full"' --cfg 'feature="parsing"' --cfg 'feature="printing"' --cfg 'feature="proc-macro"' --cfg 'feature="quote"' --cfg 'feature="visit"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("clone-impls", "default", "derive", "extra-traits", "fold", "full", "parsing", "printing", "proc-macro", "quote", "test", "visit", "visit-mut"))' -C metadata=5a93607a151b10b3 -C extra-filename=-8f2f288754ae8cd8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rmeta --extern unicode_ident=/home/ivo/massive_game_server/target/release/deps/libunicode_ident-fa0428afe5ab3280.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg syn_disable_nightly_tests`
warning: `semver` (lib) generated 5 warnings (5 duplicates)
   Compiling crossbeam-deque v0.8.6
warning: `sharded-slab` (lib) generated 110 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam_deque CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Concurrent work-stealing deque' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam-deque CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.8.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam_deque --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-deque-0.8.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs '--allow=clippy::lint_groups_priority' '--allow=clippy::declare_interior_mutable_const' --check-cfg 'cfg(crossbeam_loom)' --check-cfg 'cfg(crossbeam_sanitize)' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=3d60d22f62a09043 -C extra-filename=-11cba098b43e3ca9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_epoch=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_epoch-d0658ce18407787c.rmeta --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `http-body` (lib) generated 5 warnings (5 duplicates)
   Compiling cc v1.2.25
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.25 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.25/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='A build-time dependency for Cargo build scripts to assist in invoking the native
C compiler to compile native C code into a static archive to be linked into Rust
code.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/cc-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/cc-rs' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=1.2.25 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=25 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name cc --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cc-1.2.25/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="parallel"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("jobserver", "parallel"))' -C metadata=0096940c1760b816 -C extra-filename=-244de555707e0652 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern jobserver=/home/ivo/massive_game_server/target/release/deps/libjobserver-354ac75b1216f1e2.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-b1f6962553262e28.rmeta --extern shlex=/home/ivo/massive_game_server/target/release/deps/libshlex-196e0b57a5226954.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `indexmap` (lib) generated 5 warnings (5 duplicates)
warning: method `symmetric_difference` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/src/hir/interval.rs:423:8
    |
335 | pub trait Interval:
    |           -------- method in this trait
...
423 |     fn symmetric_difference(
    |        ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `crossbeam-epoch` (lib) generated 25 warnings (5 duplicates)
warning: call to `.borrow()` on a reference in this situation does nothing
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-syntax-0.6.29/src/ast/parse.rs:379:21
    |
379 |         self.pattern.borrow()
    |                     ^^^^^^^^^ help: remove this redundant call
    |
    = note: the type `str` does not implement `Borrow`, so calling `borrow` on `&str` copies the reference, which does not do anything and can be removed
    = note: `#[warn(noop_method_call)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rayon_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/Cargo.toml CARGO_PKG_AUTHORS='Niko Matsakis <niko@alum.mit.edu>:Josh Stone <cuviper@gmail.com>' CARGO_PKG_DESCRIPTION='Core APIs for Rayon' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rayon-core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rayon-rs/rayon' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=1.12.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/rayon-core-e54940f2cc887761/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rayon_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("web_spin_lock"))' -C metadata=852aafaf9dda7a7a -C extra-filename=-83d8e9a071be9eff --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_deque=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_deque-11cba098b43e3ca9.rmeta --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `rustc_version` (lib) generated 5 warnings (5 duplicates)
   Compiling flatbuffers v25.2.10
   Compiling curve25519-dalek v4.1.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/Cargo.toml CARGO_PKG_AUTHORS='Robert Winslow <hello@rwinslow.com>:FlatBuffers Maintainers' CARGO_PKG_DESCRIPTION='Official FlatBuffers Rust runtime library.' CARGO_PKG_HOMEPAGE='https://google.github.io/flatbuffers/' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=flatbuffers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/flatbuffers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=25.2.10 CARGO_PKG_VERSION_MAJOR=25 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "serialize", "std"))' -C metadata=37e24689c98e0308 -C extra-filename=-78b78667d5b26334 --out-dir /home/ivo/massive_game_server/target/release/build/flatbuffers-78b78667d5b26334 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern rustc_version=/home/ivo/massive_game_server/target/release/deps/librustc_version-361f056af408630e.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml CARGO_PKG_AUTHORS='Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>' CARGO_PKG_DESCRIPTION='A pure-Rust implementation of group operations on ristretto255 and Curve25519' CARGO_PKG_HOMEPAGE='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_LICENSE=BSD-3-Clause CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=curve25519-dalek CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=4.1.3 CARGO_PKG_VERSION_MAJOR=4 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="precomputed-tables"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "digest", "ff", "group", "group-bits", "legacy_compatibility", "precomputed-tables", "rand_core", "serde", "zeroize"))' -C metadata=28439930b53c09d3 -C extra-filename=-001a76714bbb2991 --out-dir /home/ivo/massive_game_server/target/release/build/curve25519-dalek-001a76714bbb2991 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern rustc_version=/home/ivo/massive_game_server/target/release/deps/librustc_version-361f056af408630e.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `crossbeam-deque` (lib) generated 5 warnings (5 duplicates)
   Compiling crossbeam v0.8.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crossbeam CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Tools for concurrent programming' CARGO_PKG_HOMEPAGE='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crossbeam CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/crossbeam-rs/crossbeam' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.8.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crossbeam --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="crossbeam-channel"' --cfg 'feature="crossbeam-deque"' --cfg 'feature="crossbeam-epoch"' --cfg 'feature="crossbeam-queue"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "crossbeam-channel", "crossbeam-deque", "crossbeam-epoch", "crossbeam-queue", "default", "nightly", "std"))' -C metadata=916585e760433d65 -C extra-filename=-096a1ff00e12c9f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_channel=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_channel-983fb481b900eb25.rmeta --extern crossbeam_deque=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_deque-11cba098b43e3ca9.rmeta --extern crossbeam_epoch=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_epoch-d0658ce18407787c.rmeta --extern crossbeam_queue=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_queue-aba442d9063b04b5.rmeta --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `crossbeam_loom`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crossbeam-0.8.4/src/lib.rs:80:11
   |
80 | #[cfg(not(crossbeam_loom))]
   |           ^^^^^^^^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(crossbeam_loom)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(crossbeam_loom)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: `crossbeam` (lib) generated 6 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:254:13
    |
254 | #![cfg_attr(doc_cfg, feature(doc_cfg))]
    |             ^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:430:12
    |
430 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:434:12
    |
434 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:455:12
    |
455 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "printing"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:804:12
    |
804 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:867:12
    |
867 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "proc-macro"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:887:12
    |
887 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:916:12
    |
916 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:959:12
    |
959 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "full"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/group.rs:136:12
    |
136 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/group.rs:214:12
    |
214 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/group.rs:269:12
    |
269 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:561:12
    |
561 | #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:569:12
    |
569 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_omit_await_from_token_macro`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:881:11
    |
881 | #[cfg(not(syn_omit_await_from_token_macro))]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_omit_await_from_token_macro)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_omit_await_from_token_macro)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_omit_await_from_token_macro`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:883:7
    |
883 | #[cfg(syn_omit_await_from_token_macro)]
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_omit_await_from_token_macro)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_omit_await_from_token_macro)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:394:24
    |
394 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:398:24
    |
398 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:406:24
    |
406 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:414:24
    |
414 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:418:24
    |
418 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:426:24
    |
426 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
556 | / define_punctuation_structs! {
557 | |     "_" pub struct Underscore/1 /// `_`
558 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:271:24
    |
271 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:275:24
    |
275 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:283:24
    |
283 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:291:24
    |
291 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:295:24
    |
295 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:303:24
    |
303 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:309:24
    |
309 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:317:24
    |
317 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                          ^^^^^^^
...
652 | / define_keywords! {
653 | |     "abstract"    pub struct Abstract     /// `abstract`
654 | |     "as"          pub struct As           /// `as`
655 | |     "async"       pub struct Async        /// `async`
...   |
704 | |     "yield"       pub struct Yield        /// `yield`
705 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_keywords` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:444:24
    |
444 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:452:24
    |
452 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:394:24
    |
394 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:398:24
    |
398 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:406:24
    |
406 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:414:24
    |
414 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:418:24
    |
418 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:426:24
    |
426 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
707 | / define_punctuation! {
708 | |     "+"           pub struct Add/1        /// `+`
709 | |     "+="          pub struct AddEq/2      /// `+=`
710 | |     "&"           pub struct And/1        /// `&`
...   |
753 | |     "~"           pub struct Tilde/1      /// `~`
754 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_punctuation_structs` which comes from the expansion of the macro `define_punctuation` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:503:24
    |
503 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:507:24
    |
507 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:515:24
    |
515 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:523:24
    |
523 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:527:24
    |
527 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/token.rs:535:24
    |
535 |               #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                          ^^^^^^^
...
756 | / define_delimiters! {
757 | |     "{"           pub struct Brace        /// `{...}`
758 | |     "["           pub struct Bracket      /// `[...]`
759 | |     "("           pub struct Paren        /// `(...)`
760 | |     " "           pub struct Group        /// None-delimited group
761 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `define_delimiters` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ident.rs:38:12
   |
38 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:463:12
    |
463 | #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:148:16
    |
148 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:329:16
    |
329 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:360:16
    |
360 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:336:1
    |
336 | / ast_enum_of_structs! {
337 | |     /// Content of a compile-time structured attribute.
338 | |     ///
339 | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
370 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:377:16
    |
377 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:390:16
    |
390 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:417:16
    |
417 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:412:1
    |
412 | / ast_enum_of_structs! {
413 | |     /// Element of a compile-time attribute list.
414 | |     ///
415 | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
426 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:165:16
    |
165 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:213:16
    |
213 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:223:16
    |
223 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:237:16
    |
237 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:251:16
    |
251 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:557:16
    |
557 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:565:16
    |
565 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:573:16
    |
573 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:581:16
    |
581 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:630:16
    |
630 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:644:16
    |
644 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/attr.rs:654:16
    |
654 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:9:16
  |
9 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
  |                ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:36:16
   |
36 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:25:1
    |
25  | / ast_enum_of_structs! {
26  | |     /// Data stored within an enum variant or struct.
27  | |     ///
28  | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
48  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:56:16
   |
56 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:68:16
   |
68 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:153:16
    |
153 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:185:16
    |
185 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:173:1
    |
173 | / ast_enum_of_structs! {
174 | |     /// The visibility level of an item: inherited or `pub` or
175 | |     /// `pub(restricted)`.
176 | |     ///
...   |
200 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:207:16
    |
207 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:218:16
    |
218 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:230:16
    |
230 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:246:16
    |
246 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:275:16
    |
275 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:286:16
    |
286 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:327:16
    |
327 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:299:20
    |
299 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:315:20
    |
315 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:423:16
    |
423 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:436:16
    |
436 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:445:16
    |
445 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:454:16
    |
454 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:467:16
    |
467 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:474:16
    |
474 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/data.rs:481:16
    |
481 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:89:16
   |
89 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:90:20
   |
90 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
   |                    ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:14:1
    |
14  | / ast_enum_of_structs! {
15  | |     /// A Rust expression.
16  | |     ///
17  | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
250 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:256:16
    |
256 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:268:16
    |
268 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:281:16
    |
281 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:294:16
    |
294 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:307:16
    |
307 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:321:16
    |
321 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:334:16
    |
334 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:346:16
    |
346 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:359:16
    |
359 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:373:16
    |
373 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:387:16
    |
387 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:400:16
    |
400 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:418:16
    |
418 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:431:16
    |
431 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:444:16
    |
444 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:464:16
    |
464 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:480:16
    |
480 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:495:16
    |
495 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:508:16
    |
508 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:523:16
    |
523 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:534:16
    |
534 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:547:16
    |
547 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:558:16
    |
558 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:572:16
    |
572 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:588:16
    |
588 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:604:16
    |
604 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:616:16
    |
616 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:629:16
    |
629 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:643:16
    |
643 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:657:16
    |
657 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:672:16
    |
672 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:687:16
    |
687 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:699:16
    |
699 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:711:16
    |
711 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:723:16
    |
723 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:737:16
    |
737 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:749:16
    |
749 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:761:16
    |
761 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:775:16
    |
775 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:850:16
    |
850 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:920:16
    |
920 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:968:16
    |
968 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:982:16
    |
982 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:999:16
    |
999 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1021:16
     |
1021 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1049:16
     |
1049 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1065:16
     |
1065 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:246:15
    |
246 |         #[cfg(syn_no_non_exhaustive)]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_const_vec_new`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:784:40
    |
784 |     #[cfg(all(feature = "parsing", not(syn_no_const_vec_new)))]
    |                                        ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_const_vec_new)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_const_vec_new)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:838:19
    |
838 |             #[cfg(syn_no_non_exhaustive)]
    |                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1159:16
     |
1159 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1880:16
     |
1880 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1975:16
     |
1975 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2001:16
     |
2001 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2063:16
     |
2063 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2084:16
     |
2084 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2101:16
     |
2101 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2119:16
     |
2119 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2147:16
     |
2147 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2165:16
     |
2165 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2206:16
     |
2206 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2236:16
     |
2236 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2258:16
     |
2258 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2326:16
     |
2326 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2349:16
     |
2349 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2372:16
     |
2372 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2381:16
     |
2381 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2396:16
     |
2396 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2405:16
     |
2405 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2414:16
     |
2414 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2426:16
     |
2426 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2496:16
     |
2496 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2547:16
     |
2547 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2571:16
     |
2571 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2582:16
     |
2582 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2594:16
     |
2594 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2648:16
     |
2648 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2678:16
     |
2678 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2727:16
     |
2727 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2759:16
     |
2759 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2801:16
     |
2801 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2818:16
     |
2818 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2832:16
     |
2832 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2846:16
     |
2846 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2879:16
     |
2879 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2292:28
     |
2292 |                   #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                              ^^^^^^^
...
2309 | /     impl_by_parsing_expr! {
2310 | |         ExprAssign, Assign, "expected assignment expression",
2311 | |         ExprAssignOp, AssignOp, "expected compound assignment expression",
2312 | |         ExprAwait, Await, "expected await expression",
...    |
2322 | |         ExprType, Type, "expected type ascription expression",
2323 | |     }
     | |_____- in this macro invocation
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
     = note: this warning originates in the macro `impl_by_parsing_expr` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:1248:20
     |
1248 |         #[cfg_attr(doc_cfg, doc(cfg(all(feature = "full", feature = "parsing"))))]
     |                    ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2539:23
     |
2539 |                 #[cfg(syn_no_non_exhaustive)]
     |                       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_const_vec_new`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2905:23
     |
2905 |             #[cfg(not(syn_no_const_vec_new))]
     |                       ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_const_vec_new)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_const_vec_new)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_const_vec_new`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2907:19
     |
2907 |             #[cfg(syn_no_const_vec_new)]
     |                   ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_const_vec_new)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_const_vec_new)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2988:16
     |
2988 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:2998:16
     |
2998 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3008:16
     |
3008 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3020:16
     |
3020 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3035:16
     |
3035 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3046:16
     |
3046 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3057:16
     |
3057 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3072:16
     |
3072 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3082:16
     |
3082 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3091:16
     |
3091 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3099:16
     |
3099 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3110:16
     |
3110 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3141:16
     |
3141 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3153:16
     |
3153 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3165:16
     |
3165 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3180:16
     |
3180 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3197:16
     |
3197 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3211:16
     |
3211 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3233:16
     |
3233 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3244:16
     |
3244 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3255:16
     |
3255 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3265:16
     |
3265 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3275:16
     |
3275 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3291:16
     |
3291 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3304:16
     |
3304 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3317:16
     |
3317 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3328:16
     |
3328 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3338:16
     |
3338 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3348:16
     |
3348 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3358:16
     |
3358 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3367:16
     |
3367 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3379:16
     |
3379 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3390:16
     |
3390 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3400:16
     |
3400 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3409:16
     |
3409 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3420:16
     |
3420 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3431:16
     |
3431 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3441:16
     |
3441 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3451:16
     |
3451 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3460:16
     |
3460 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3478:16
     |
3478 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3491:16
     |
3491 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3501:16
     |
3501 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3512:16
     |
3512 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3522:16
     |
3522 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3531:16
     |
3531 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/expr.rs:3544:16
     |
3544 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:296:5
    |
296 |     doc_cfg,
    |     ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:307:5
    |
307 |     doc_cfg,
    |     ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:318:5
    |
318 |     doc_cfg,
    |     ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:14:16
   |
14 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:35:16
   |
35 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:23:1
    |
23  | / ast_enum_of_structs! {
24  | |     /// A generic type parameter, lifetime, or const generic: `T: Into<String>`,
25  | |     /// `'a: 'b`, `const LEN: usize`.
26  | |     ///
...   |
46  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:53:16
   |
53 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:69:16
   |
69 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:83:16
   |
83 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:363:20
    |
363 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
404 | generics_wrapper_impls!(ImplGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:371:20
    |
371 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
404 | generics_wrapper_impls!(ImplGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:382:20
    |
382 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
404 | generics_wrapper_impls!(ImplGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:386:20
    |
386 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
404 | generics_wrapper_impls!(ImplGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:394:20
    |
394 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
404 | generics_wrapper_impls!(ImplGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:363:20
    |
363 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
406 | generics_wrapper_impls!(TypeGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:371:20
    |
371 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
406 | generics_wrapper_impls!(TypeGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:382:20
    |
382 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
406 | generics_wrapper_impls!(TypeGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:386:20
    |
386 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
406 | generics_wrapper_impls!(TypeGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:394:20
    |
394 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
406 | generics_wrapper_impls!(TypeGenerics);
    | ------------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:363:20
    |
363 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
408 | generics_wrapper_impls!(Turbofish);
    | ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:371:20
    |
371 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
408 | generics_wrapper_impls!(Turbofish);
    | ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:382:20
    |
382 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
408 | generics_wrapper_impls!(Turbofish);
    | ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:386:20
    |
386 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
408 | generics_wrapper_impls!(Turbofish);
    | ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:394:20
    |
394 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
408 | generics_wrapper_impls!(Turbofish);
    | ---------------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generics_wrapper_impls` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:426:16
    |
426 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:475:16
    |
475 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:470:1
    |
470 | / ast_enum_of_structs! {
471 | |     /// A trait or lifetime used as a bound on a type parameter.
472 | |     ///
473 | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
480 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:487:16
    |
487 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:504:16
    |
504 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:517:16
    |
517 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:535:16
    |
535 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:524:1
    |
524 | / ast_enum_of_structs! {
525 | |     /// A single predicate in a `where` clause: `T: Deserialize<'de>`.
526 | |     ///
527 | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
546 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:553:16
    |
553 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:570:16
    |
570 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:583:16
    |
583 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:347:9
    |
347 |         doc_cfg,
    |         ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:597:16
    |
597 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:660:16
    |
660 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:687:16
    |
687 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:725:16
    |
725 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:747:16
    |
747 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:758:16
    |
758 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:812:16
    |
812 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:856:16
    |
856 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:905:16
    |
905 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:916:16
    |
916 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:940:16
    |
940 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:971:16
    |
971 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:982:16
    |
982 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1057:16
     |
1057 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1207:16
     |
1207 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1217:16
     |
1217 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1229:16
     |
1229 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1268:16
     |
1268 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1300:16
     |
1300 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1310:16
     |
1310 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1325:16
     |
1325 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1335:16
     |
1335 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1345:16
     |
1345 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/generics.rs:1354:16
     |
1354 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:19:16
   |
19 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:20:20
   |
20 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
   |                    ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:9:1
    |
9   | / ast_enum_of_structs! {
10  | |     /// Things that can appear directly inside of a module or scope.
11  | |     ///
12  | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
97  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:103:16
    |
103 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:121:16
    |
121 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:137:16
    |
137 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:154:16
    |
154 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:167:16
    |
167 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:181:16
    |
181 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:201:16
    |
201 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:215:16
    |
215 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:229:16
    |
229 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:244:16
    |
244 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:263:16
    |
263 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:279:16
    |
279 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:299:16
    |
299 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:316:16
    |
316 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:333:16
    |
333 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:348:16
    |
348 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:477:16
    |
477 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:467:1
    |
467 | / ast_enum_of_structs! {
468 | |     /// A suffix of an import tree in a `use` item: `Type as Renamed` or `*`.
469 | |     ///
470 | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
494 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:500:16
    |
500 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:512:16
    |
512 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:522:16
    |
522 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:534:16
    |
534 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:544:16
    |
544 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:561:16
    |
561 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:562:20
    |
562 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
    |                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:551:1
    |
551 | / ast_enum_of_structs! {
552 | |     /// An item within an `extern` block.
553 | |     ///
554 | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
601 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:607:16
    |
607 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:620:16
    |
620 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:637:16
    |
637 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:651:16
    |
651 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:669:16
    |
669 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:670:20
    |
670 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
    |                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:659:1
    |
659 | / ast_enum_of_structs! {
660 | |     /// An item declaration within the definition of a trait.
661 | |     ///
662 | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
709 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:715:16
    |
715 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:731:16
    |
731 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:744:16
    |
744 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:761:16
    |
761 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:779:16
    |
779 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:780:20
    |
780 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
    |                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:769:1
    |
769 | / ast_enum_of_structs! {
770 | |     /// An item within an impl block.
771 | |     ///
772 | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
819 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:825:16
    |
825 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:844:16
    |
844 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:858:16
    |
858 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:876:16
    |
876 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:889:16
    |
889 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:927:16
    |
927 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:923:1
    |
923 | / ast_enum_of_structs! {
924 | |     /// An argument in a function signature: the `n: usize` in `fn f(n: usize)`.
925 | |     ///
926 | |     /// *This type is available only if Syn is built with the `"full"` feature.*
...   |
939 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:949:16
    |
949 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:93:15
   |
93 |         #[cfg(syn_no_non_exhaustive)]
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:381:19
    |
381 |             #[cfg(syn_no_non_exhaustive)]
    |                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:597:15
    |
597 |         #[cfg(syn_no_non_exhaustive)]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:705:15
    |
705 |         #[cfg(syn_no_non_exhaustive)]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:815:15
    |
815 |         #[cfg(syn_no_non_exhaustive)]
    |               ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `crossbeam-channel` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:976:16
    |
976 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1237:16
     |
1237 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1264:16
     |
1264 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1305:16
     |
1305 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1338:16
     |
1338 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1352:16
     |
1352 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1401:16
     |
1401 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1419:16
     |
1419 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1500:16
     |
1500 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1535:16
     |
1535 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1564:16
     |
1564 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1584:16
     |
1584 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1680:16
     |
1680 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1722:16
     |
1722 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1745:16
     |
1745 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1827:16
     |
1827 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1843:16
     |
1843 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1859:16
     |
1859 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1903:16
     |
1903 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1921:16
     |
1921 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1971:16
     |
1971 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1995:16
     |
1995 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2019:16
     |
2019 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2070:16
     |
2070 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2144:16
     |
2144 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2200:16
     |
2200 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2260:16
     |
2260 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2290:16
     |
2290 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2319:16
     |
2319 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2392:16
     |
2392 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2410:16
     |
2410 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2522:16
     |
2522 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2603:16
     |
2603 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2628:16
     |
2628 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2668:16
     |
2668 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2726:16
     |
2726 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:1817:23
     |
1817 |                 #[cfg(syn_no_non_exhaustive)]
     |                       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2251:23
     |
2251 |                 #[cfg(syn_no_non_exhaustive)]
     |                       ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2592:27
     |
2592 |                     #[cfg(syn_no_non_exhaustive)]
     |                           ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2771:16
     |
2771 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2787:16
     |
2787 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2799:16
     |
2799 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2815:16
     |
2815 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2830:16
     |
2830 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2843:16
     |
2843 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2861:16
     |
2861 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2873:16
     |
2873 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2888:16
     |
2888 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2903:16
     |
2903 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2929:16
     |
2929 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2942:16
     |
2942 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2964:16
     |
2964 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:2979:16
     |
2979 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3001:16
     |
3001 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3023:16
     |
3023 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3034:16
     |
3034 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3043:16
     |
3043 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3050:16
     |
3050 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3059:16
     |
3059 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3066:16
     |
3066 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3075:16
     |
3075 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3091:16
     |
3091 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3110:16
     |
3110 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3130:16
     |
3130 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3139:16
     |
3139 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3155:16
     |
3155 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3177:16
     |
3177 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3193:16
     |
3193 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3202:16
     |
3202 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3212:16
     |
3212 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3226:16
     |
3226 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3237:16
     |
3237 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3273:16
     |
3273 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/item.rs:3301:16
     |
3301 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/file.rs:80:16
   |
80 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/file.rs:93:16
   |
93 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/file.rs:118:16
    |
118 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lifetime.rs:127:16
    |
127 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lifetime.rs:145:16
    |
145 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:629:12
    |
629 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:640:12
    |
640 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:652:12
    |
652 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:14:1
    |
14  | / ast_enum_of_structs! {
15  | |     /// A Rust literal such as a string or integer or boolean.
16  | |     ///
17  | |     /// # Syntax tree enum
...   |
49  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
703 | lit_extra_traits!(LitStr);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
703 | lit_extra_traits!(LitStr);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
703 | lit_extra_traits!(LitStr);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
704 | lit_extra_traits!(LitByteStr);
    | ----------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
704 | lit_extra_traits!(LitByteStr);
    | ----------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
704 | lit_extra_traits!(LitByteStr);
    | ----------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
705 | lit_extra_traits!(LitByte);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
705 | lit_extra_traits!(LitByte);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
705 | lit_extra_traits!(LitByte);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
706 | lit_extra_traits!(LitChar);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
706 | lit_extra_traits!(LitChar);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
706 | lit_extra_traits!(LitChar);
    | -------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
707 | lit_extra_traits!(LitInt);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
707 | lit_extra_traits!(LitInt);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
707 | lit_extra_traits!(LitInt);
    | ------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:666:20
    |
666 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |                    ^^^^^^^
...
708 | lit_extra_traits!(LitFloat);
    | --------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:676:20
    |
676 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
708 | lit_extra_traits!(LitFloat);
    | --------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:684:20
    |
684 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                    ^^^^^^^
...
708 | lit_extra_traits!(LitFloat);
    | --------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `lit_extra_traits` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:170:16
    |
170 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:200:16
    |
200 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:557:16
    |
557 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:567:16
    |
567 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:577:16
    |
577 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:587:16
    |
587 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:597:16
    |
597 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:607:16
    |
607 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:617:16
    |
617 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:744:16
    |
744 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:816:16
    |
816 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:827:16
    |
827 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:838:16
    |
838 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:849:16
    |
849 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:860:16
    |
860 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:871:16
    |
871 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:882:16
    |
882 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:900:16
    |
900 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:907:16
    |
907 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:914:16
    |
914 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:921:16
    |
921 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:928:16
    |
928 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:935:16
    |
935 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:942:16
    |
942 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_negative_literal_parse`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lit.rs:1568:15
     |
1568 |         #[cfg(syn_no_negative_literal_parse)]
     |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_negative_literal_parse)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_negative_literal_parse)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:15:16
   |
15 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:29:16
   |
29 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:137:16
    |
137 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:145:16
    |
145 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:177:16
    |
177 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/mac.rs:201:16
    |
201 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:8:16
  |
8 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "derive")))]
  |                ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:37:16
   |
37 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "derive")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:57:16
   |
57 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "derive")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:70:16
   |
70 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "derive")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:83:16
   |
83 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "derive")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:95:16
   |
95 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/derive.rs:231:16
    |
231 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:6:16
  |
6 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
  |                ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:72:16
   |
72 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:130:16
    |
130 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:165:16
    |
165 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:188:16
    |
188 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/op.rs:224:16
    |
224 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:7:16
  |
7 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
  |                ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:19:16
   |
19 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:39:16
   |
39 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:136:16
    |
136 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:147:16
    |
147 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:109:20
    |
109 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:312:16
    |
312 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:321:16
    |
321 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/stmt.rs:336:16
    |
336 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:16:16
   |
16 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:17:20
   |
17 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
   |                    ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:5:1
    |
5   | / ast_enum_of_structs! {
6   | |     /// The possible types that a Rust value could have.
7   | |     ///
8   | |     /// *This type is available only if Syn is built with the `"derive"` or `"full"`
...   |
89  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:96:16
   |
96 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:110:16
    |
110 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:128:16
    |
128 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:141:16
    |
141 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:153:16
    |
153 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:164:16
    |
164 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:175:16
    |
175 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:186:16
    |
186 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:199:16
    |
199 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:211:16
    |
211 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:225:16
    |
225 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:239:16
    |
239 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:252:16
    |
252 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:264:16
    |
264 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:276:16
    |
276 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:288:16
    |
288 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:311:16
    |
311 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:323:16
    |
323 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:85:15
   |
85 |         #[cfg(syn_no_non_exhaustive)]
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:342:16
    |
342 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:656:16
    |
656 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:667:16
    |
667 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:680:16
    |
680 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:703:16
    |
703 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:716:16
    |
716 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:777:16
    |
777 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:786:16
    |
786 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:795:16
    |
795 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:828:16
    |
828 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:837:16
    |
837 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:887:16
    |
887 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:895:16
    |
895 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:949:16
    |
949 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:992:16
    |
992 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1003:16
     |
1003 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1024:16
     |
1024 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1098:16
     |
1098 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1108:16
     |
1108 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:357:20
    |
357 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:869:20
    |
869 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:904:20
    |
904 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:958:20
    |
958 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1128:16
     |
1128 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1137:16
     |
1137 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1148:16
     |
1148 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1162:16
     |
1162 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1172:16
     |
1172 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1193:16
     |
1193 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1200:16
     |
1200 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1209:16
     |
1209 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1216:16
     |
1216 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1224:16
     |
1224 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1232:16
     |
1232 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1241:16
     |
1241 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1250:16
     |
1250 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1257:16
     |
1257 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1264:16
     |
1264 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1277:16
     |
1277 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1289:16
     |
1289 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/ty.rs:1297:16
     |
1297 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:16:16
   |
16 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:17:20
   |
17 |     #[cfg_attr(not(syn_no_non_exhaustive), non_exhaustive)]
   |                    ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/macros.rs:155:20
    |
155 |           #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                      ^^^^^^^
    |
   ::: /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:5:1
    |
5   | / ast_enum_of_structs! {
6   | |     /// A pattern in a local binding, function signature, match expression, or
7   | |     /// various other places.
8   | |     ///
...   |
98  | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `generate_to_tokens` which comes from the expansion of the macro `ast_enum_of_structs` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:104:16
    |
104 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:119:16
    |
119 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:136:16
    |
136 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:147:16
    |
147 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:158:16
    |
158 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:176:16
    |
176 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:188:16
    |
188 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:201:16
    |
201 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:214:16
    |
214 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:225:16
    |
225 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:237:16
    |
237 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:251:16
    |
251 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:263:16
    |
263 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:275:16
    |
275 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:288:16
    |
288 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:302:16
    |
302 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "full")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:94:15
   |
94 |         #[cfg(syn_no_non_exhaustive)]
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:318:16
    |
318 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:769:16
    |
769 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:777:16
    |
777 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:791:16
    |
791 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:807:16
    |
807 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:816:16
    |
816 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:826:16
    |
826 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:834:16
    |
834 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:844:16
    |
844 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:853:16
    |
853 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:863:16
    |
863 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:871:16
    |
871 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:879:16
    |
879 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:889:16
    |
889 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:899:16
    |
899 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:907:16
    |
907 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/pat.rs:916:16
    |
916 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:9:16
  |
9 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
  |                ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:35:16
   |
35 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:67:16
   |
67 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:105:16
    |
105 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:130:16
    |
130 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:144:16
    |
144 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:157:16
    |
157 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:171:16
    |
171 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:201:16
    |
201 |     #[cfg_attr(doc_cfg, doc(cfg(any(feature = "full", feature = "derive"))))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:218:16
    |
218 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:225:16
    |
225 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:358:16
    |
358 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:385:16
    |
385 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:397:16
    |
397 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:430:16
    |
430 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:442:16
    |
442 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:505:20
    |
505 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:569:20
    |
569 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:591:20
    |
591 |         #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                    ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:693:16
    |
693 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:701:16
    |
701 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:709:16
    |
709 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:724:16
    |
724 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:752:16
    |
752 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:793:16
    |
793 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:802:16
    |
802 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/path.rs:811:16
    |
811 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:371:12
    |
371 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:386:12
    |
386 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:395:12
    |
395 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:408:12
    |
408 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:422:12
    |
422 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:1012:12
     |
1012 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_const_vec_new`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:54:15
   |
54 |     #[cfg(not(syn_no_const_vec_new))]
   |               ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_const_vec_new)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_const_vec_new)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_const_vec_new`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:63:11
   |
63 |     #[cfg(syn_no_const_vec_new)]
   |           ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_const_vec_new)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_const_vec_new)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:267:16
    |
267 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:288:16
    |
288 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:325:16
    |
325 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:346:16
    |
346 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:1060:16
     |
1060 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/punctuated.rs:1071:16
     |
1071 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "printing")))]
     |                ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse_quote.rs:68:12
   |
68 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "printing"))))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse_quote.rs:100:12
    |
100 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "printing"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse_macro_input.rs:107:12
    |
107 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "parsing", feature = "proc-macro"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/lib.rs:579:16
    |
579 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "visit")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:1216:15
     |
1216 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:1905:15
     |
1905 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:2071:15
     |
2071 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:2207:15
     |
2207 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:2807:15
     |
2807 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:3263:15
     |
3263 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/visit.rs:3392:15
     |
3392 |         #[cfg(syn_no_non_exhaustive)]
     |               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:7:12
  |
7 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
  |            ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:17:12
   |
17 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:29:12
   |
29 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:43:12
   |
43 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:46:12
   |
46 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:53:12
   |
53 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:66:12
   |
66 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:77:12
   |
77 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:80:12
   |
80 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:87:12
   |
87 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:98:12
   |
98 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:108:12
    |
108 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:120:12
    |
120 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:135:12
    |
135 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:146:12
    |
146 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:157:12
    |
157 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:168:12
    |
168 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:179:12
    |
179 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:189:12
    |
189 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:202:12
    |
202 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:282:12
    |
282 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:293:12
    |
293 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:305:12
    |
305 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:317:12
    |
317 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:329:12
    |
329 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:341:12
    |
341 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:353:12
    |
353 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:364:12
    |
364 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `data-encoding` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:375:12
    |
375 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:387:12
    |
387 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:399:12
    |
399 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:411:12
    |
411 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:428:12
    |
428 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:439:12
    |
439 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:451:12
    |
451 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:466:12
    |
466 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:477:12
    |
477 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:490:12
    |
490 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:502:12
    |
502 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:515:12
    |
515 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:525:12
    |
525 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:537:12
    |
537 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:547:12
    |
547 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:560:12
    |
560 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:575:12
    |
575 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:586:12
    |
586 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:597:12
    |
597 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:609:12
    |
609 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:622:12
    |
622 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:635:12
    |
635 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:646:12
    |
646 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:660:12
    |
660 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:671:12
    |
671 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:682:12
    |
682 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:693:12
    |
693 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:705:12
    |
705 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:716:12
    |
716 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:727:12
    |
727 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:740:12
    |
740 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:751:12
    |
751 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:764:12
    |
764 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:776:12
    |
776 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:788:12
    |
788 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:799:12
    |
799 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:809:12
    |
809 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:819:12
    |
819 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:830:12
    |
830 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:840:12
    |
840 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:855:12
    |
855 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:867:12
    |
867 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:878:12
    |
878 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:894:12
    |
894 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:907:12
    |
907 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:920:12
    |
920 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:930:12
    |
930 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:941:12
    |
941 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:953:12
    |
953 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:968:12
    |
968 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:986:12
    |
986 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:997:12
    |
997 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1010:12
     |
1010 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1027:12
     |
1027 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1037:12
     |
1037 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1064:12
     |
1064 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1081:12
     |
1081 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1096:12
     |
1096 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1111:12
     |
1111 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1123:12
     |
1123 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1135:12
     |
1135 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1152:12
     |
1152 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1164:12
     |
1164 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1177:12
     |
1177 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1191:12
     |
1191 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1209:12
     |
1209 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1224:12
     |
1224 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1243:12
     |
1243 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1259:12
     |
1259 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1275:12
     |
1275 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1289:12
     |
1289 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1303:12
     |
1303 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1313:12
     |
1313 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1324:12
     |
1324 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1339:12
     |
1339 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1349:12
     |
1349 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1362:12
     |
1362 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1374:12
     |
1374 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1385:12
     |
1385 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1395:12
     |
1395 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1406:12
     |
1406 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1417:12
     |
1417 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1428:12
     |
1428 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1440:12
     |
1440 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1450:12
     |
1450 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1461:12
     |
1461 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1487:12
     |
1487 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1498:12
     |
1498 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1511:12
     |
1511 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1521:12
     |
1521 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1531:12
     |
1531 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1542:12
     |
1542 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1553:12
     |
1553 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1565:12
     |
1565 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1577:12
     |
1577 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1587:12
     |
1587 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1598:12
     |
1598 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1611:12
     |
1611 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1622:12
     |
1622 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1633:12
     |
1633 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1645:12
     |
1645 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1655:12
     |
1655 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1665:12
     |
1665 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1678:12
     |
1678 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1688:12
     |
1688 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1699:12
     |
1699 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1710:12
     |
1710 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1722:12
     |
1722 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1735:12
     |
1735 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1738:12
     |
1738 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1745:12
     |
1745 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1757:12
     |
1757 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1767:12
     |
1767 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1786:12
     |
1786 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1798:12
     |
1798 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1810:12
     |
1810 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1813:12
     |
1813 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1820:12
     |
1820 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1835:12
     |
1835 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1850:12
     |
1850 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1861:12
     |
1861 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1873:12
     |
1873 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1889:12
     |
1889 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1914:12
     |
1914 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1926:12
     |
1926 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1942:12
     |
1942 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1952:12
     |
1952 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1962:12
     |
1962 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1971:12
     |
1971 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1978:12
     |
1978 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1987:12
     |
1987 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2001:12
     |
2001 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2011:12
     |
2011 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2021:12
     |
2021 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2031:12
     |
2031 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2043:12
     |
2043 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2055:12
     |
2055 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2065:12
     |
2065 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2075:12
     |
2075 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2085:12
     |
2085 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2088:12
     |
2088 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2095:12
     |
2095 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2104:12
     |
2104 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2114:12
     |
2114 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2123:12
     |
2123 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2134:12
     |
2134 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2145:12
     |
2145 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2158:12
     |
2158 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2168:12
     |
2168 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2180:12
     |
2180 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2189:12
     |
2189 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2198:12
     |
2198 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2210:12
     |
2210 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2222:12
     |
2222 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:2232:12
     |
2232 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:276:23
    |
276 |             #[cfg(any(syn_no_non_exhaustive, not(feature = "full")))]
    |                       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:849:19
    |
849 |             #[cfg(syn_no_non_exhaustive)]
    |                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:962:19
    |
962 |             #[cfg(syn_no_non_exhaustive)]
    |                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1058:19
     |
1058 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1481:19
     |
1481 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1829:19
     |
1829 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/clone.rs:1908:19
     |
1908 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:8:12
  |
8 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
  |            ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:11:12
   |
11 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:18:12
   |
18 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:21:12
   |
21 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:28:12
   |
28 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:31:12
   |
31 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:39:12
   |
39 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:42:12
   |
42 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:53:12
   |
53 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:56:12
   |
56 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:64:12
   |
64 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:67:12
   |
67 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:74:12
   |
74 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:77:12
   |
77 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:114:12
    |
114 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:117:12
    |
117 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:124:12
    |
124 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:127:12
    |
127 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:134:12
    |
134 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:137:12
    |
137 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:144:12
    |
144 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:147:12
    |
147 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:155:12
    |
155 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:158:12
    |
158 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:165:12
    |
165 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:168:12
    |
168 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:180:12
    |
180 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:183:12
    |
183 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:190:12
    |
190 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:193:12
    |
193 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:200:12
    |
200 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:203:12
    |
203 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:210:12
    |
210 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:213:12
    |
213 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:221:12
    |
221 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:224:12
    |
224 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:305:12
    |
305 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:308:12
    |
308 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:315:12
    |
315 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:318:12
    |
318 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:325:12
    |
325 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:328:12
    |
328 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:336:12
    |
336 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:339:12
    |
339 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:347:12
    |
347 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:350:12
    |
350 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:357:12
    |
357 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:360:12
    |
360 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:368:12
    |
368 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:371:12
    |
371 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:379:12
    |
379 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:382:12
    |
382 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:389:12
    |
389 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:392:12
    |
392 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:399:12
    |
399 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:402:12
    |
402 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:409:12
    |
409 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:412:12
    |
412 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:419:12
    |
419 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:422:12
    |
422 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:432:12
    |
432 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:435:12
    |
435 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:442:12
    |
442 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:445:12
    |
445 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:453:12
    |
453 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:456:12
    |
456 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:464:12
    |
464 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:467:12
    |
467 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:474:12
    |
474 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:477:12
    |
477 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:486:12
    |
486 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:489:12
    |
489 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:496:12
    |
496 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:499:12
    |
499 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:506:12
    |
506 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:509:12
    |
509 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:516:12
    |
516 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:519:12
    |
519 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:526:12
    |
526 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:529:12
    |
529 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:536:12
    |
536 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:539:12
    |
539 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:546:12
    |
546 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:549:12
    |
549 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:558:12
    |
558 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:561:12
    |
561 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:568:12
    |
568 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:571:12
    |
571 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:578:12
    |
578 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:581:12
    |
581 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:589:12
    |
589 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:592:12
    |
592 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:600:12
    |
600 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:603:12
    |
603 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:610:12
    |
610 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:613:12
    |
613 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:620:12
    |
620 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:623:12
    |
623 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:632:12
    |
632 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:635:12
    |
635 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:642:12
    |
642 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:645:12
    |
645 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:652:12
    |
652 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:655:12
    |
655 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:662:12
    |
662 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:665:12
    |
665 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:672:12
    |
672 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:675:12
    |
675 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:682:12
    |
682 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:685:12
    |
685 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:692:12
    |
692 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:695:12
    |
695 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:703:12
    |
703 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:706:12
    |
706 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:713:12
    |
713 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:716:12
    |
716 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:724:12
    |
724 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:727:12
    |
727 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:735:12
    |
735 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:738:12
    |
738 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:746:12
    |
746 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:749:12
    |
749 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:761:12
    |
761 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:764:12
    |
764 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:771:12
    |
771 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:774:12
    |
774 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:781:12
    |
781 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:784:12
    |
784 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:792:12
    |
792 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:795:12
    |
795 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:806:12
    |
806 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:809:12
    |
809 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:825:12
    |
825 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:828:12
    |
828 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:835:12
    |
835 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:838:12
    |
838 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:846:12
    |
846 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:849:12
    |
849 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:858:12
    |
858 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:861:12
    |
861 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:868:12
    |
868 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:871:12
    |
871 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:895:12
    |
895 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:898:12
    |
898 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:914:12
    |
914 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:917:12
    |
917 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:931:12
    |
931 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:934:12
    |
934 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:942:12
    |
942 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:945:12
    |
945 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:961:12
    |
961 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:964:12
    |
964 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:973:12
    |
973 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:976:12
    |
976 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:984:12
    |
984 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:987:12
    |
987 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:996:12
    |
996 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:999:12
    |
999 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1008:12
     |
1008 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1011:12
     |
1011 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1039:12
     |
1039 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1042:12
     |
1042 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1050:12
     |
1050 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1053:12
     |
1053 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1061:12
     |
1061 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1064:12
     |
1064 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1072:12
     |
1072 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1075:12
     |
1075 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1083:12
     |
1083 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1086:12
     |
1086 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1093:12
     |
1093 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1096:12
     |
1096 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1106:12
     |
1106 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1109:12
     |
1109 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1117:12
     |
1117 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1120:12
     |
1120 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1128:12
     |
1128 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1131:12
     |
1131 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1139:12
     |
1139 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1142:12
     |
1142 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1151:12
     |
1151 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1154:12
     |
1154 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1163:12
     |
1163 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1166:12
     |
1166 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1177:12
     |
1177 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1180:12
     |
1180 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1188:12
     |
1188 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1191:12
     |
1191 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1199:12
     |
1199 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1202:12
     |
1202 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1210:12
     |
1210 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1213:12
     |
1213 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1221:12
     |
1221 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1224:12
     |
1224 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1231:12
     |
1231 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1234:12
     |
1234 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1241:12
     |
1241 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1243:12
     |
1243 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1261:12
     |
1261 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1263:12
     |
1263 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1269:12
     |
1269 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1271:12
     |
1271 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1273:12
     |
1273 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1275:12
     |
1275 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1277:12
     |
1277 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1279:12
     |
1279 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1282:12
     |
1282 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1285:12
     |
1285 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1292:12
     |
1292 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1295:12
     |
1295 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1303:12
     |
1303 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1306:12
     |
1306 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1318:12
     |
1318 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1321:12
     |
1321 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1333:12
     |
1333 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1336:12
     |
1336 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1343:12
     |
1343 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1346:12
     |
1346 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1353:12
     |
1353 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1356:12
     |
1356 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1363:12
     |
1363 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1366:12
     |
1366 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1377:12
     |
1377 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1380:12
     |
1380 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1387:12
     |
1387 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1390:12
     |
1390 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1417:12
     |
1417 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1420:12
     |
1420 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1427:12
     |
1427 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1430:12
     |
1430 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1439:12
     |
1439 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1442:12
     |
1442 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1449:12
     |
1449 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1452:12
     |
1452 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1459:12
     |
1459 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1462:12
     |
1462 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1470:12
     |
1470 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1473:12
     |
1473 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1480:12
     |
1480 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1483:12
     |
1483 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1491:12
     |
1491 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1494:12
     |
1494 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1502:12
     |
1502 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1505:12
     |
1505 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1512:12
     |
1512 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1515:12
     |
1515 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1522:12
     |
1522 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1525:12
     |
1525 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1533:12
     |
1533 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1536:12
     |
1536 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1543:12
     |
1543 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1546:12
     |
1546 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1553:12
     |
1553 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1556:12
     |
1556 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1563:12
     |
1563 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1566:12
     |
1566 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1573:12
     |
1573 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1576:12
     |
1576 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1583:12
     |
1583 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1586:12
     |
1586 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1604:12
     |
1604 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1607:12
     |
1607 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1614:12
     |
1614 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1617:12
     |
1617 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1624:12
     |
1624 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1627:12
     |
1627 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1634:12
     |
1634 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1637:12
     |
1637 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1645:12
     |
1645 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1648:12
     |
1648 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1656:12
     |
1656 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1659:12
     |
1659 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1670:12
     |
1670 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1673:12
     |
1673 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1681:12
     |
1681 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1684:12
     |
1684 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1695:12
     |
1695 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1698:12
     |
1698 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1709:12
     |
1709 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1712:12
     |
1712 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1725:12
     |
1725 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1728:12
     |
1728 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1736:12
     |
1736 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1739:12
     |
1739 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1750:12
     |
1750 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1753:12
     |
1753 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1769:12
     |
1769 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1772:12
     |
1772 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1780:12
     |
1780 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1783:12
     |
1783 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1791:12
     |
1791 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1794:12
     |
1794 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1802:12
     |
1802 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1805:12
     |
1805 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1814:12
     |
1814 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1817:12
     |
1817 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1843:12
     |
1843 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1846:12
     |
1846 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1853:12
     |
1853 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1856:12
     |
1856 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1865:12
     |
1865 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1868:12
     |
1868 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1875:12
     |
1875 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1878:12
     |
1878 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1885:12
     |
1885 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1888:12
     |
1888 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1895:12
     |
1895 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1898:12
     |
1898 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1905:12
     |
1905 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1908:12
     |
1908 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1915:12
     |
1915 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1918:12
     |
1918 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1927:12
     |
1927 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1930:12
     |
1930 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1945:12
     |
1945 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1948:12
     |
1948 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1955:12
     |
1955 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1958:12
     |
1958 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1965:12
     |
1965 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1968:12
     |
1968 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1976:12
     |
1976 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1979:12
     |
1979 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `flatbuffers` (build script) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1987:12
     |
1987 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1990:12
     |
1990 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:1997:12
     |
1997 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2000:12
     |
2000 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2007:12
     |
2007 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2010:12
     |
2010 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2017:12
     |
2017 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/Cargo.toml CARGO_PKG_AUTHORS='Robert Winslow <hello@rwinslow.com>:FlatBuffers Maintainers' CARGO_PKG_DESCRIPTION='Official FlatBuffers Rust runtime library.' CARGO_PKG_HOMEPAGE='https://google.github.io/flatbuffers/' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=flatbuffers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/flatbuffers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=25.2.10 CARGO_PKG_VERSION_MAJOR=25 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/flatbuffers-8ab3bfa69f8d3641/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/flatbuffers-78b78667d5b26334/build-script-build`
warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2020:12
     |
2020 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2032:12
     |
2032 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2035:12
     |
2035 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2042:12
     |
2042 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2045:12
     |
2045 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2052:12
     |
2052 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2055:12
     |
2055 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2062:12
     |
2062 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2065:12
     |
2065 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2072:12
     |
2072 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2075:12
     |
2075 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2082:12
     |
2082 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2085:12
     |
2085 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2099:12
     |
2099 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2102:12
     |
2102 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2109:12
     |
2109 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2112:12
     |
2112 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2120:12
     |
2120 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2123:12
     |
2123 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2130:12
     |
2130 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2133:12
     |
2133 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2140:12
     |
2140 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2143:12
     |
2143 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2150:12
     |
2150 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2153:12
     |
2153 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2168:12
     |
2168 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2171:12
     |
2171 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2178:12
     |
2178 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/eq.rs:2181:12
     |
2181 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:9:12
  |
9 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
  |            ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:19:12
   |
19 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:30:12
   |
30 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:44:12
   |
44 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:61:12
   |
61 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:73:12
   |
73 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:85:12
   |
85 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:180:12
    |
180 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:191:12
    |
191 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:201:12
    |
201 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:211:12
    |
211 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:225:12
    |
225 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:236:12
    |
236 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:259:12
    |
259 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:269:12
    |
269 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:280:12
    |
280 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:290:12
    |
290 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:304:12
    |
304 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:507:12
    |
507 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:518:12
    |
518 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:530:12
    |
530 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:543:12
    |
543 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:555:12
    |
555 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:566:12
    |
566 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:579:12
    |
579 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:591:12
    |
591 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:602:12
    |
602 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:614:12
    |
614 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:626:12
    |
626 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:638:12
    |
638 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:654:12
    |
654 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:665:12
    |
665 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:677:12
    |
677 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:691:12
    |
691 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:702:12
    |
702 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:715:12
    |
715 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:727:12
    |
727 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:739:12
    |
739 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:750:12
    |
750 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:762:12
    |
762 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:773:12
    |
773 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:785:12
    |
785 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:799:12
    |
799 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:810:12
    |
810 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:822:12
    |
822 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:835:12
    |
835 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:847:12
    |
847 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:859:12
    |
859 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:870:12
    |
870 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:884:12
    |
884 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:895:12
    |
895 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:906:12
    |
906 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:917:12
    |
917 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:929:12
    |
929 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:941:12
    |
941 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:952:12
    |
952 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:965:12
    |
965 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:976:12
    |
976 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:990:12
    |
990 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1003:12
     |
1003 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1016:12
     |
1016 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1038:12
     |
1038 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1048:12
     |
1048 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1058:12
     |
1058 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1070:12
     |
1070 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1089:12
     |
1089 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1122:12
     |
1122 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1134:12
     |
1134 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1146:12
     |
1146 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1160:12
     |
1160 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1172:12
     |
1172 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1203:12
     |
1203 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1222:12
     |
1222 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1245:12
     |
1245 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1258:12
     |
1258 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1291:12
     |
1291 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1306:12
     |
1306 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1318:12
     |
1318 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1332:12
     |
1332 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1347:12
     |
1347 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1428:12
     |
1428 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1442:12
     |
1442 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1456:12
     |
1456 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1469:12
     |
1469 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1482:12
     |
1482 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1494:12
     |
1494 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1510:12
     |
1510 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1523:12
     |
1523 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1536:12
     |
1536 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1550:12
     |
1550 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1565:12
     |
1565 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1580:12
     |
1580 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1598:12
     |
1598 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1612:12
     |
1612 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1626:12
     |
1626 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1640:12
     |
1640 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1653:12
     |
1653 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1663:12
     |
1663 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1675:12
     |
1675 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1717:12
     |
1717 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1727:12
     |
1727 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1739:12
     |
1739 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1751:12
     |
1751 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1771:12
     |
1771 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1794:12
     |
1794 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1805:12
     |
1805 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1816:12
     |
1816 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1826:12
     |
1826 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1845:12
     |
1845 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1856:12
     |
1856 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1933:12
     |
1933 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1944:12
     |
1944 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1958:12
     |
1958 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1969:12
     |
1969 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1980:12
     |
1980 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1992:12
     |
1992 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2004:12
     |
2004 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2017:12
     |
2017 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2029:12
     |
2029 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2039:12
     |
2039 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2050:12
     |
2050 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2063:12
     |
2063 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2074:12
     |
2074 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2086:12
     |
2086 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2098:12
     |
2098 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2108:12
     |
2108 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2119:12
     |
2119 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2141:12
     |
2141 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2152:12
     |
2152 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2163:12
     |
2163 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2174:12
     |
2174 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2186:12
     |
2186 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2198:12
     |
2198 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2215:12
     |
2215 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2227:12
     |
2227 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2245:12
     |
2245 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2263:12
     |
2263 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2290:12
     |
2290 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2303:12
     |
2303 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2320:12
     |
2320 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2353:12
     |
2353 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2366:12
     |
2366 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2378:12
     |
2378 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2391:12
     |
2391 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2406:12
     |
2406 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2479:12
     |
2479 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2490:12
     |
2490 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2505:12
     |
2505 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2515:12
     |
2515 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2525:12
     |
2525 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2533:12
     |
2533 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2543:12
     |
2543 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2551:12
     |
2551 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2566:12
     |
2566 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2585:12
     |
2585 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2595:12
     |
2595 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2606:12
     |
2606 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2618:12
     |
2618 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2630:12
     |
2630 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2640:12
     |
2640 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2651:12
     |
2651 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2661:12
     |
2661 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2681:12
     |
2681 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2689:12
     |
2689 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2699:12
     |
2699 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2709:12
     |
2709 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2720:12
     |
2720 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2731:12
     |
2731 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2762:12
     |
2762 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2772:12
     |
2772 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2785:12
     |
2785 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2793:12
     |
2793 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2801:12
     |
2801 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2812:12
     |
2812 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2838:12
     |
2838 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2848:12
     |
2848 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:501:23
    |
501 |             #[cfg(any(syn_no_non_exhaustive, not(feature = "full")))]
    |                       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1116:19
     |
1116 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1285:19
     |
1285 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1422:19
     |
1422 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:1927:19
     |
1927 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2347:19
     |
2347 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/hash.rs:2473:19
     |
2473 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:7:12
  |
7 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
  |            ^^^^^^^
  |
  = help: consider using a Cargo feature instead
  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
           [lints.rust]
           unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
  = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:17:12
   |
17 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:29:12
   |
29 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:43:12
   |
43 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:57:12
   |
57 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:70:12
   |
70 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:81:12
   |
81 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:229:12
    |
229 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:240:12
    |
240 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:250:12
    |
250 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:262:12
    |
262 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:277:12
    |
277 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:288:12
    |
288 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:311:12
    |
311 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:322:12
    |
322 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:333:12
    |
333 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:343:12
    |
343 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:356:12
    |
356 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:596:12
    |
596 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:607:12
    |
607 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:619:12
    |
619 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:631:12
    |
631 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:643:12
    |
643 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:655:12
    |
655 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:667:12
    |
667 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:678:12
    |
678 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:689:12
    |
689 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:701:12
    |
701 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:713:12
    |
713 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:725:12
    |
725 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:742:12
    |
742 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:753:12
    |
753 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:765:12
    |
765 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:780:12
    |
780 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:791:12
    |
791 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:804:12
    |
804 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:816:12
    |
816 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:829:12
    |
829 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:839:12
    |
839 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:851:12
    |
851 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:861:12
    |
861 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:874:12
    |
874 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:889:12
    |
889 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:900:12
    |
900 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:911:12
    |
911 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:923:12
    |
923 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:936:12
    |
936 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:949:12
    |
949 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:960:12
    |
960 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:974:12
    |
974 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:985:12
    |
985 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:996:12
    |
996 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1007:12
     |
1007 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1019:12
     |
1019 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1030:12
     |
1030 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1041:12
     |
1041 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1054:12
     |
1054 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1065:12
     |
1065 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1078:12
     |
1078 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1090:12
     |
1090 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1102:12
     |
1102 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `http` (lib) generated 5 warnings (5 duplicates)
   Compiling num-integer v0.1.46
warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1121:12
     |
1121 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1131:12
     |
1131 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1141:12
     |
1141 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1152:12
     |
1152 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1170:12
     |
1170 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1205:12
     |
1205 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1217:12
     |
1217 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1228:12
     |
1228 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1244:12
     |
1244 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1257:12
     |
1257 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1290:12
     |
1290 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1308:12
     |
1308 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1331:12
     |
1331 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1343:12
     |
1343 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1378:12
     |
1378 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1396:12
     |
1396 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1407:12
     |
1407 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1420:12
     |
1420 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1437:12
     |
1437 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1447:12
     |
1447 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1542:12
     |
1542 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1559:12
     |
1559 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1574:12
     |
1574 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1589:12
     |
1589 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1601:12
     |
1601 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1613:12
     |
1613 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1630:12
     |
1630 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1642:12
     |
1642 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1655:12
     |
1655 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1669:12
     |
1669 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1687:12
     |
1687 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1702:12
     |
1702 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1721:12
     |
1721 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1737:12
     |
1737 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1753:12
     |
1753 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1767:12
     |
1767 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1781:12
     |
1781 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1790:12
     |
1790 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1800:12
     |
1800 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1811:12
     |
1811 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1859:12
     |
1859 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1872:12
     |
1872 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1884:12
     |
1884 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1907:12
     |
1907 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1925:12
     |
1925 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1948:12
     |
1948 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1959:12
     |
1959 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1970:12
     |
1970 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1982:12
     |
1982 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2000:12
     |
2000 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2011:12
     |
2011 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2101:12
     |
2101 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2112:12
     |
2112 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2125:12
     |
2125 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2135:12
     |
2135 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2145:12
     |
2145 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2156:12
     |
2156 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2167:12
     |
2167 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2179:12
     |
2179 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2191:12
     |
2191 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2201:12
     |
2201 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2212:12
     |
2212 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2225:12
     |
2225 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2236:12
     |
2236 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2247:12
     |
2247 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2259:12
     |
2259 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2269:12
     |
2269 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2279:12
     |
2279 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2298:12
     |
2298 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2308:12
     |
2308 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2319:12
     |
2319 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2330:12
     |
2330 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2342:12
     |
2342 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2355:12
     |
2355 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2373:12
     |
2373 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2385:12
     |
2385 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2400:12
     |
2400 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2419:12
     |
2419 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2448:12
     |
2448 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2460:12
     |
2460 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2474:12
     |
2474 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2509:12
     |
2509 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2524:12
     |
2524 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2535:12
     |
2535 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2547:12
     |
2547 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2563:12
     |
2563 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2648:12
     |
2648 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2660:12
     |
2660 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2676:12
     |
2676 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2686:12
     |
2686 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2696:12
     |
2696 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2705:12
     |
2705 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2714:12
     |
2714 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2723:12
     |
2723 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2737:12
     |
2737 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `curve25519-dalek` (build script) generated 5 warnings (5 duplicates)
warning: `http` (lib) generated 6 warnings (5 duplicates)
warning: `quote` (lib) generated 5 warnings (5 duplicates)
warning: `unsafe-libyaml` (lib) generated 5 warnings (5 duplicates)
warning: `num-traits` (lib) generated 5 warnings (5 duplicates)
warning: `mime_guess` (build script) generated 11 warnings (5 duplicates)
   Compiling rusticata-macros v4.1.0
   Compiling regex-automata v0.4.9
   Compiling regex-automata v0.1.10
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=flatbuffers CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/Cargo.toml CARGO_PKG_AUTHORS='Robert Winslow <hello@rwinslow.com>:FlatBuffers Maintainers' CARGO_PKG_DESCRIPTION='Official FlatBuffers Rust runtime library.' CARGO_PKG_HOMEPAGE='https://google.github.io/flatbuffers/' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=flatbuffers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/flatbuffers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=25.2.10 CARGO_PKG_VERSION_MAJOR=25 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/flatbuffers-8ab3bfa69f8d3641/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name flatbuffers --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "serialize", "std"))' -C metadata=b9c6ccf27c3ab728 -C extra-filename=-90f856b3805ab66b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-e9ee1768cb8db9b9.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_integer CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Integer traits and functions' CARGO_PKG_HOMEPAGE='https://github.com/rust-num/num-integer' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-integer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-num/num-integer' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=0.1.46 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=46 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_integer --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-integer-0.1.46/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="i128"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "i128", "std"))' -C metadata=6f961876eb7d5d5f -C extra-filename=-faaaa2d7b1d17970 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2755:12
     |
2755 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: creating a shared reference to mutable static is discouraged
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:167:33
    |
167 |         .or_else(|err| unsafe { THE_REGISTRY.as_ref().ok_or(err) })
    |                                 ^^^^^^^^^^^^^^^^^^^^^ shared reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: shared references to mutable statics are dangerous; it's undefined behavior if the static is mutated or if a mutable reference is created for it while the shared reference lives
    = note: `#[warn(static_mut_refs)]` on by default

     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=flatbuffers CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/Cargo.toml CARGO_PKG_AUTHORS='Robert Winslow <hello@rwinslow.com>:FlatBuffers Maintainers' CARGO_PKG_DESCRIPTION='Official FlatBuffers Rust runtime library.' CARGO_PKG_HOMEPAGE='https://google.github.io/flatbuffers/' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=flatbuffers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/google/flatbuffers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=25.2.10 CARGO_PKG_VERSION_MAJOR=25 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/flatbuffers-8ab3bfa69f8d3641/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name flatbuffers --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "serialize", "std"))' -C metadata=06d26a4653bad05b -C extra-filename=-f1a4fdc8cb753882 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-e03d6ba3add70dfb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2765:12
     |
2765 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: creating a mutable reference to mutable static is discouraged
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-core-1.12.1/src/registry.rs:194:55
    |
194 |             .map(|registry: Arc<Registry>| unsafe { &*THE_REGISTRY.get_or_insert(registry) })
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ mutable reference to mutable static
    |
    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>
    = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2775:12
     |
2775 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2787:12
     |
2787 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2799:12
     |
2799 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2809:12
     |
2809 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2819:12
     |
2819 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2829:12
     |
2829 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2852:12
     |
2852 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2861:12
     |
2861 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2871:12
     |
2871 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2880:12
     |
2880 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2891:12
     |
2891 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2902:12
     |
2902 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2935:12
     |
2935 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2945:12
     |
2945 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2957:12
     |
2957 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2966:12
     |
2966 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2975:12
     |
2975 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2987:12
     |
2987 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:3011:12
     |
3011 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:3021:12
     |
3021 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:590:23
    |
590 |             #[cfg(any(syn_no_non_exhaustive, not(feature = "full")))]
    |                       ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1199:19
     |
1199 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1372:19
     |
1372 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:1536:19
     |
1536 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2095:19
     |
2095 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2503:19
     |
2503 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `syn_no_non_exhaustive`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/gen/debug.rs:2642:19
     |
2642 |             #[cfg(syn_no_non_exhaustive)]
     |                   ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(syn_no_non_exhaustive)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(syn_no_non_exhaustive)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1065:12
     |
1065 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1072:12
     |
1072 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1083:12
     |
1083 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1090:12
     |
1090 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1100:12
     |
1100 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1116:12
     |
1116 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1126:12
     |
1126 | #[cfg_attr(doc_cfg, doc(cfg(feature = "parsing")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1291:12
     |
1291 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1299:12
     |
1299 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1303:12
     |
1303 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/parse.rs:1311:12
     |
1311 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
     |            ^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/reserved.rs:29:12
   |
29 | #[cfg_attr(doc_cfg, doc(cfg(feature = "clone-impls")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/syn-1.0.109/src/reserved.rs:39:12
   |
39 | #[cfg_attr(doc_cfg, doc(cfg(feature = "extra-traits")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/src/lib.rs:32:17
   |
32 | #![cfg_attr(all(nightly, not(feature = "std")), feature(error_in_core))]
   |                 ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `nightly`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/src/verifier.rs:13:11
   |
13 | #[cfg(all(nightly, not(feature = "std")))]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `nightly`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/flatbuffers-25.2.10/src/verifier.rs:89:11
   |
89 | #[cfg(any(nightly, feature = "std"))]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `jobserver` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rusticata_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusticata-macros-4.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusticata-macros-4.1.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Helper macros for Rusticata' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/rusticata-macros' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rusticata-macros CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/rusticata-macros.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=4.1.0 CARGO_PKG_VERSION_MAJOR=4 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rusticata_macros --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rusticata-macros-4.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=59ac49eb64e5d3ba -C extra-filename=-6ed97a7d01d592bf --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling getrandom v0.2.16
   Compiling socket2 v0.5.10
   Compiling mio v1.0.4
   Compiling signal-hook-registry v1.4.5
   Compiling nix v0.26.4
   Compiling num_cpus v1.17.0
   Compiling quanta v0.12.5
   Compiling rayon v1.10.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default,rev-mappings CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_REV_MAPPINGS=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/Cargo.toml CARGO_PKG_AUTHORS='Austin Bonander <austin.bonander@gmail.com>' CARGO_PKG_DESCRIPTION='A simple crate for detection of a file'\''s MIME type by its extension.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=mime_guess CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/abonander/mime_guess' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.0.5 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/mime_guess-134741cbb0f22b91/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/mime_guess-ffeb2d9824e1f8be/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=regex_automata CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='Automata construction and matching using regular expressions.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=regex-automata CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/regex/tree/master/regex-automata' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.4.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name regex_automata --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.4.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="dfa-onepass"' --cfg 'feature="hybrid"' --cfg 'feature="meta"' --cfg 'feature="nfa-backtrack"' --cfg 'feature="nfa-pikevm"' --cfg 'feature="nfa-thompson"' --cfg 'feature="perf-inline"' --cfg 'feature="perf-literal"' --cfg 'feature="perf-literal-multisubstring"' --cfg 'feature="perf-literal-substring"' --cfg 'feature="std"' --cfg 'feature="syntax"' --cfg 'feature="unicode"' --cfg 'feature="unicode-age"' --cfg 'feature="unicode-bool"' --cfg 'feature="unicode-case"' --cfg 'feature="unicode-gencat"' --cfg 'feature="unicode-perl"' --cfg 'feature="unicode-script"' --cfg 'feature="unicode-segment"' --cfg 'feature="unicode-word-boundary"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "dfa", "dfa-build", "dfa-onepass", "dfa-search", "hybrid", "internal-instrument", "internal-instrument-pikevm", "logging", "meta", "nfa", "nfa-backtrack", "nfa-pikevm", "nfa-thompson", "perf", "perf-inline", "perf-literal", "perf-literal-multisubstring", "perf-literal-substring", "std", "syntax", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unicode-word-boundary"))' -C metadata=e720ac5f8afe75c2 -C extra-filename=-3a4b2eb7b51ba0c9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aho_corasick=/home/ivo/massive_game_server/target/release/deps/libaho_corasick-a0239b3850ef4fef.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern regex_syntax=/home/ivo/massive_game_server/target/release/deps/libregex_syntax-222491375154f6c7.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=regex_automata CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.1.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.1.10/Cargo.toml CARGO_PKG_AUTHORS='Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='Automata construction and matching using regular expressions.' CARGO_PKG_HOMEPAGE='https://github.com/BurntSushi/regex-automata' CARGO_PKG_LICENSE=Unlicense/MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=regex-automata CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/BurntSushi/regex-automata' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.10 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name regex_automata --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-automata-0.1.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="regex-syntax"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "fst", "regex-syntax", "std", "transducer"))' -C metadata=8d253fe9d079f5d3 -C extra-filename=-f4b3db71684dbc68 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern regex_syntax=/home/ivo/massive_game_server/target/release/deps/libregex_syntax-3daa3f8c99f08e1b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=alloc,precomputed-tables,zeroize CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ALLOC=1 CARGO_FEATURE_PRECOMPUTED_TABLES=1 CARGO_FEATURE_ZEROIZE=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml CARGO_PKG_AUTHORS='Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>' CARGO_PKG_DESCRIPTION='A pure-Rust implementation of group operations on ristretto255 and Curve25519' CARGO_PKG_HOMEPAGE='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_LICENSE=BSD-3-Clause CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=curve25519-dalek CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=4.1.3 CARGO_PKG_VERSION_MAJOR=4 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/curve25519-dalek-6b2b0510b9d6b0b0/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/curve25519-dalek-001a76714bbb2991/build-script-build`
warning: `nom` (lib) generated 18 warnings (5 duplicates)
[mime_guess 2.0.5] cargo:rustc-env=MIME_TYPES_GENERATED_PATH=/home/ivo/massive_game_server/target/release/build/mime_guess-134741cbb0f22b91/out/mime_types_generated.rs
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=getrandom CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.16 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=16 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name getrandom --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.2.16/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiler_builtins", "core", "custom", "js", "js-sys", "linux_disable_fallback", "rdrand", "rustc-dep-of-std", "std", "test-in-browser", "wasm-bindgen"))' -C metadata=9fb3f2591b405374 -C extra-filename=-5933baa136ce4554 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=parking_lot_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='An advanced API for creating custom synchronization primitives.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=parking_lot_core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64.0 CARGO_PKG_VERSION=0.9.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/parking_lot_core-a7aac1b702259a5e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name parking_lot_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot_core-0.9.11/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("backtrace", "deadlock_detection", "nightly", "petgraph", "thread-id"))' -C metadata=f60b6e29a351903c -C extra-filename=-5ff78276c1804731 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(tsan_enabled)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=socket2 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.10/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>' CARGO_PKG_DESCRIPTION='Utilities for handling networking sockets with a maximal amount of configuration
possible intended.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/socket2' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=socket2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/socket2' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.5.10 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name socket2 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/socket2-0.5.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="all"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("all"))' -C metadata=b369baef2695fd13 -C extra-filename=-4f205d40749fb3ef --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=mio CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-1.0.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-1.0.4/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>:Thomas de Zeeuw <thomasdezeeuw@gmail.com>:Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Lightweight non-blocking I/O.' CARGO_PKG_HOMEPAGE='https://github.com/tokio-rs/mio' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=mio CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/mio' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=1.0.4 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name mio --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mio-1.0.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(mio_unsupported_force_poll_poll)' --check-cfg 'cfg(mio_unsupported_force_waker_pipe)' --cfg 'feature="net"' --cfg 'feature="os-ext"' --cfg 'feature="os-poll"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "log", "net", "os-ext", "os-poll"))' -C metadata=6bc4a4bb5df663ab -C extra-filename=-f9d8c3cbe426bebc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=signal_hook_registry CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.5/Cargo.toml CARGO_PKG_AUTHORS='Michal '\''vorner'\'' Vaner <vorner@vorner.cz>:Masaki Hara <ackie.h.gmai@gmail.com>' CARGO_PKG_DESCRIPTION='Backend crate for signal-hook' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Apache-2.0/MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=signal-hook-registry CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/vorner/signal-hook' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.4.5 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name signal_hook_registry --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signal-hook-registry-1.4.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=7a1ebfc19eec8fa2 -C extra-filename=-f17024dfbfb75e6f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[curve25519-dalek 4.1.3] cargo:rustc-cfg=curve25519_dalek_bits="64"
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=nix CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/Cargo.toml CARGO_PKG_AUTHORS='The nix-rust Project Developers' CARGO_PKG_DESCRIPTION='Rust friendly bindings to *nix APIs' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=nix CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/nix-rust/nix' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.26.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=26 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name nix --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="acct"' --cfg 'feature="aio"' --cfg 'feature="default"' --cfg 'feature="dir"' --cfg 'feature="env"' --cfg 'feature="event"' --cfg 'feature="feature"' --cfg 'feature="fs"' --cfg 'feature="hostname"' --cfg 'feature="inotify"' --cfg 'feature="ioctl"' --cfg 'feature="kmod"' --cfg 'feature="memoffset"' --cfg 'feature="mman"' --cfg 'feature="mount"' --cfg 'feature="mqueue"' --cfg 'feature="net"' --cfg 'feature="personality"' --cfg 'feature="pin-utils"' --cfg 'feature="poll"' --cfg 'feature="process"' --cfg 'feature="pthread"' --cfg 'feature="ptrace"' --cfg 'feature="quota"' --cfg 'feature="reboot"' --cfg 'feature="resource"' --cfg 'feature="sched"' --cfg 'feature="signal"' --cfg 'feature="socket"' --cfg 'feature="term"' --cfg 'feature="time"' --cfg 'feature="ucontext"' --cfg 'feature="uio"' --cfg 'feature="user"' --cfg 'feature="zerocopy"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("acct", "aio", "default", "dir", "env", "event", "feature", "fs", "hostname", "inotify", "ioctl", "kmod", "memoffset", "mman", "mount", "mqueue", "net", "personality", "pin-utils", "poll", "process", "pthread", "ptrace", "quota", "reboot", "resource", "sched", "signal", "socket", "term", "time", "ucontext", "uio", "user", "zerocopy"))' -C metadata=a59b068c1bf3fe72 -C extra-filename=-abbe4b0048e8198f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-46a4504de37150bd.rmeta --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern memoffset=/home/ivo/massive_game_server/target/release/deps/libmemoffset-b9e6ff57317d4e5c.rmeta --extern pin_utils=/home/ivo/massive_game_server/target/release/deps/libpin_utils-b3851b467213096d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=getrandom CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers' CARGO_PKG_DESCRIPTION='A small cross-platform library for retrieving random data from system source' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=getrandom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/getrandom' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.3.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/getrandom-fa31edf456f23575/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name getrandom --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/getrandom-0.3.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(getrandom_backend, values("custom", "efi_rng", "rdrand", "rndr", "linux_getrandom", "linux_raw", "wasm_js"))' --check-cfg 'cfg(getrandom_msan)' --check-cfg 'cfg(getrandom_windows_legacy)' --check-cfg 'cfg(getrandom_test_linux_fallback)' --check-cfg 'cfg(getrandom_test_linux_without_fallback)' --check-cfg 'cfg(getrandom_test_netbsd_fallback)' --check-cfg 'cfg(target_os, values("cygwin"))' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("rustc-dep-of-std", "std", "wasm_js"))' -C metadata=de5e1a436f90ef5c -C extra-filename=-a159d97e6385c319 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_cpus CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Get the number of CPUs on a machine.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num_cpus CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/num_cpus' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.17.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_cpus --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num_cpus-1.17.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=3a6d8a31997374fd -C extra-filename=-0fcdabc4a86ed45f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=quanta CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quanta-0.12.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quanta-0.12.5/Cargo.toml CARGO_PKG_AUTHORS='Toby Lawrence <toby@nuclearfurnace.com>' CARGO_PKG_DESCRIPTION='high-speed timing library' CARGO_PKG_HOMEPAGE='https://github.com/metrics-rs/quanta' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=quanta CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/metrics-rs/quanta' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=0.12.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name quanta --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quanta-0.12.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "flaky_tests", "prost", "prost-types"))' -C metadata=06013fab64d41a48 -C extra-filename=-5cdf0ce099c6eaf5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern raw_cpuid=/home/ivo/massive_game_server/target/release/deps/libraw_cpuid-2de6822feda370e3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rayon CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.10.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.10.0/Cargo.toml CARGO_PKG_AUTHORS='Niko Matsakis <niko@alum.mit.edu>:Josh Stone <cuviper@gmail.com>' CARGO_PKG_DESCRIPTION='Simple work-stealing parallelism for Rust' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rayon CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rayon-rs/rayon' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=1.10.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rayon --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rayon-1.10.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("web_spin_lock"))' -C metadata=b11f098514f3ba7e -C extra-filename=-022a1067a421e5f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern either=/home/ivo/massive_game_server/target/release/deps/libeither-9299886be813588b.rmeta --extern rayon_core=/home/ivo/massive_game_server/target/release/deps/librayon_core-83d8e9a071be9eff.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
[curve25519-dalek 4.1.3] cargo:rustc-cfg=curve25519_dalek_backend="simd"
warning: `raw-cpuid` (lib) generated 5 warnings (5 duplicates)
warning: `libc` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=mime_guess CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/Cargo.toml CARGO_PKG_AUTHORS='Austin Bonander <austin.bonander@gmail.com>' CARGO_PKG_DESCRIPTION='A simple crate for detection of a file'\''s MIME type by its extension.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=mime_guess CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/abonander/mime_guess' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.0.5 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' MIME_TYPES_GENERATED_PATH=/home/ivo/massive_game_server/target/release/build/mime_guess-134741cbb0f22b91/out/mime_types_generated.rs OUT_DIR=/home/ivo/massive_game_server/target/release/build/mime_guess-134741cbb0f22b91/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name mime_guess --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="rev-mappings"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "rev-mappings"))' -C metadata=df4b372d2ce19d92 -C extra-filename=-72fa0796967c2a53 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern mime=/home/ivo/massive_game_server/target/release/deps/libmime-727c609573810913.rmeta --extern unicase=/home/ivo/massive_game_server/target/release/deps/libunicase-ffee3c732d4bff6b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling num-bigint v0.4.6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=num_bigint CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers' CARGO_PKG_DESCRIPTION='Big integer implementation for Rust' CARGO_PKG_HOMEPAGE='https://github.com/rust-num/num-bigint' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=num-bigint CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-num/num-bigint' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=0.4.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name num_bigint --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-bigint-0.4.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "default", "quickcheck", "rand", "serde", "std"))' -C metadata=d58347227c50b999 -C extra-filename=-8249117f26190267 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern num_integer=/home/ivo/massive_game_server/target/release/deps/libnum_integer-faaaa2d7b1d17970.rmeta --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling rand_core v0.6.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rand_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers:The Rust Project Developers' CARGO_PKG_DESCRIPTION='Core random number generator traits and tools for implementation.
' CARGO_PKG_HOMEPAGE='https://rust-random.github.io/book' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rand_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/rand' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.6.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rand_core --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="getrandom"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "getrandom", "serde", "serde1", "std"))' -C metadata=2bef879d4dc3086f -C extra-filename=-0331ccada710acdc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern getrandom=/home/ivo/massive_game_server/target/release/deps/libgetrandom-5933baa136ce4554.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling ppv-lite86 v0.2.21
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ppv_lite86 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/Cargo.toml CARGO_PKG_AUTHORS='The CryptoCorrosion Contributors' CARGO_PKG_DESCRIPTION='Cross-platform cryptography-oriented low-level SIMD library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ppv-lite86 CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/cryptocorrosion/cryptocorrosion' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.2.21 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=21 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ppv_lite86 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ppv-lite86-0.2.21/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="simd"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "no_simd", "simd", "std"))' -C metadata=3b23cebccddd3b43 -C extra-filename=-117ab89ff8919d09 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zerocopy=/home/ivo/massive_game_server/target/release/deps/libzerocopy-6e80bc33090eee8d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ahash CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/Cargo.toml CARGO_PKG_AUTHORS='Tom Kaitchuck <Tom.Kaitchuck@gmail.com>' CARGO_PKG_DESCRIPTION='A non-cryptographic hash function using AES-NI for high performance' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ahash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tkaitchuck/ahash' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=0.8.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/ahash-a2343e8a4c7b2bd3/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ahash --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="getrandom"' --cfg 'feature="runtime-rng"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("atomic-polyfill", "compile-time-rng", "const-random", "default", "getrandom", "nightly-arm-aes", "no-rng", "runtime-rng", "serde", "std"))' -C metadata=a0738d75bfd01ff7 -C extra-filename=-d1cbaf2032fc975d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern getrandom=/home/ivo/massive_game_server/target/release/deps/libgetrandom-a159d97e6385c319.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern zerocopy=/home/ivo/massive_game_server/target/release/deps/libzerocopy-6e80bc33090eee8d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg folded_multiply --check-cfg 'cfg(specialize)' --check-cfg 'cfg(folded_multiply)'`
warning: `rusticata-macros` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/src/lib.rs:32:7
   |
32 | #[cfg(feature = "phf")]
   |       ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `phf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/mime_guess-2.0.5/src/lib.rs:36:11
   |
36 | #[cfg(not(feature = "phf"))]
   |           ^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `default` and `rev-mappings`
   = help: consider adding `phf` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs:38:13
   |
38 | #![cfg_attr(doc_cfg, feature(doc_cfg))]
   |             ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/error.rs:50:16
   |
50 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/error.rs:64:16
   |
64 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/error.rs:75:16
   |
75 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
   |                ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/os.rs:46:12
   |
46 | #[cfg_attr(doc_cfg, doc(cfg(feature = "getrandom")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_core-0.6.4/src/lib.rs:411:16
    |
411 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "getrandom")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `getrandom` (lib) generated 5 warnings (5 duplicates)
warning: `getrandom` (lib) generated 5 warnings (5 duplicates)
   Compiling parking_lot v0.12.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=parking_lot CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.4/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='More compact and efficient implementations of the standard synchronization primitives.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=parking_lot CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Amanieu/parking_lot' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=0.12.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name parking_lot --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/parking_lot-0.12.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arc_lock", "deadlock_detection", "default", "hardware-lock-elision", "nightly", "owning_ref", "send_guard", "serde"))' -C metadata=c03745f87e2e1481 -C extra-filename=-9dabc6c29380194b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern lock_api=/home/ivo/massive_game_server/target/release/deps/liblock_api-d02ec6c849e4aa3c.rmeta --extern parking_lot_core=/home/ivo/massive_game_server/target/release/deps/libparking_lot_core-5ff78276c1804731.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `zerocopy` (lib) generated 5 warnings (5 duplicates)
   Compiling core_affinity v0.8.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=core_affinity CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core_affinity-0.8.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core_affinity-0.8.3/Cargo.toml CARGO_PKG_AUTHORS='Philip Woods <elzairthesorcerer@gmail.com>' CARGO_PKG_DESCRIPTION='Manages CPU affinities' CARGO_PKG_HOMEPAGE='https://github.com/Elzair/core_affinity_rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=core_affinity CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/Elzair/core_affinity_rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.8.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name core_affinity --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/core_affinity-0.8.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=9fd06696e3e961e0 -C extra-filename=-72ac57d5ed019a5c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern num_cpus=/home/ivo/massive_game_server/target/release/deps/libnum_cpus-0fcdabc4a86ed45f.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition value: `128`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/fallback_hash.rs:164:11
    |
164 |     #[cfg(target_pointer_width = "128")]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `target_pointer_width` are: `16`, `32`, and `64`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `128`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/aes_hash.rs:140:11
    |
140 |     #[cfg(target_pointer_width = "128")]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `target_pointer_width` are: `16`, `32`, and `64`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/random_state.rs:48:58
   |
48 |     if #[cfg(all(feature = "compile-time-rng", any(test, fuzzing)))] {
   |                                                          ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, `folded_multiply`, `specialize`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/random_state.rs:68:54
   |
68 |     } else if #[cfg(all(feature = "runtime-rng", not(fuzzing)))] {
   |                                                      ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `num-integer` (lib) generated 5 warnings (5 duplicates)
warning: `parking_lot_core` (lib) generated 5 warnings (5 duplicates)
   Compiling ff v0.13.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ff CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-0.13.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-0.13.1/Cargo.toml CARGO_PKG_AUTHORS='Sean Bowe <ewillbefull@gmail.com>:Jack Grigg <thestr4d@gmail.com>' CARGO_PKG_DESCRIPTION='Library for building and interfacing with finite fields' CARGO_PKG_HOMEPAGE='https://github.com/zkcrypto/ff' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ff CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/zkcrypto/ff' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.13.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ff --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ff-0.13.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "bits", "bitvec", "byteorder", "default", "derive", "derive_bits", "ff_derive", "std"))' -C metadata=a6da2dec61e08d21 -C extra-filename=-83fdbb1068b3cec4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `flatbuffers` (lib) generated 8 warnings (8 duplicates)
warning: `core_affinity` (lib) generated 5 warnings (5 duplicates)
warning: `rand_core` (lib) generated 11 warnings (5 duplicates)
warning: `flatbuffers` (lib) generated 8 warnings (5 duplicates)
warning: method `read_last_u16` is never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/convert.rs:71:8
   |
64 | pub(crate) trait ReadFromSlice {
   |                  ------------- method in this trait
...
71 |     fn read_last_u16(&self) -> u16;
   |        ^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function `new_with_keys` is never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ahash-0.8.12/src/aes_hash.rs:51:19
   |
25 | impl AHasher {
   | ------------ associated function in this implementation
...
51 |     pub(crate) fn new_with_keys(key1: u128, key2: u128) -> Self {
   |                   ^^^^^^^^^^^^^

   Compiling hashbrown v0.14.5
   Compiling metrics v0.22.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hashbrown CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/Cargo.toml CARGO_PKG_AUTHORS='Amanieu d'\''Antras <amanieu@gmail.com>' CARGO_PKG_DESCRIPTION='A Rust port of Google'\''s SwissTable hash map' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hashbrown CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/hashbrown' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.14.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=14 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hashbrown --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hashbrown-0.14.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="ahash"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("ahash", "alloc", "allocator-api2", "compiler_builtins", "core", "default", "equivalent", "inline-more", "nightly", "raw", "rayon", "rkyv", "rustc-dep-of-std", "rustc-internal-api", "serde"))' -C metadata=867af83e041931ba -C extra-filename=-10f702311d3a7bba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ahash=/home/ivo/massive_game_server/target/release/deps/libahash-d1cbaf2032fc975d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=metrics CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-0.22.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-0.22.4/Cargo.toml CARGO_PKG_AUTHORS='Toby Lawrence <toby@nuclearfurnace.com>' CARGO_PKG_DESCRIPTION='A lightweight metrics facade.' CARGO_PKG_HOMEPAGE='https://github.com/metrics-rs/metrics' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=metrics CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/metrics-rs/metrics' CARGO_PKG_RUST_VERSION=1.65.0 CARGO_PKG_VERSION=0.22.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=22 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name metrics --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-0.22.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=9b4a1a0d03fadbb6 -C extra-filename=-22ab11988786effe --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ahash=/home/ivo/massive_game_server/target/release/deps/libahash-d1cbaf2032fc975d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling group v0.13.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=group CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/group-0.13.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/group-0.13.0/Cargo.toml CARGO_PKG_AUTHORS='Sean Bowe <ewillbefull@gmail.com>:Jack Grigg <jack@z.cash>' CARGO_PKG_DESCRIPTION='Elliptic curve group traits and utilities' CARGO_PKG_HOMEPAGE='https://github.com/zkcrypto/group' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=group CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/zkcrypto/group' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name group --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/group-0.13.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "memuse", "rand", "rand_xorshift", "tests", "wnaf-memuse"))' -C metadata=697a4034eecfddbb -C extra-filename=-6a38cdc30ddbdaf2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ff=/home/ivo/massive_game_server/target/release/deps/libff-83fdbb1068b3cec4.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `rayon-core` (lib) generated 7 warnings (5 duplicates)
warning: `quanta` (lib) generated 5 warnings (5 duplicates)
warning: `ff` (lib) generated 5 warnings (5 duplicates)
warning: `ahash` (lib) generated 11 warnings (5 duplicates)
   Compiling rand_chacha v0.3.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rand_chacha CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers:The Rust Project Developers:The CryptoCorrosion Contributors' CARGO_PKG_DESCRIPTION='ChaCha random number generator
' CARGO_PKG_HOMEPAGE='https://rust-random.github.io/book' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rand_chacha CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/rand' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rand_chacha --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand_chacha-0.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "serde", "serde1", "simd", "std"))' -C metadata=ce0ce86f0baf003e -C extra-filename=-06aa14a6bee69baf --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ppv_lite86=/home/ivo/massive_game_server/target/release/deps/libppv_lite86-117ab89ff8919d09.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `signal-hook-registry` (lib) generated 5 warnings (5 duplicates)
warning: `vcpkg` (lib) generated 5 warnings (5 duplicates)
warning: `ppv-lite86` (lib) generated 5 warnings (5 duplicates)
warning: `mio` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/fcntl.rs:738:12
    |
738 | #[cfg_attr(fbsd14, doc = " ```")]
    |            ^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/fcntl.rs:739:16
    |
739 | #[cfg_attr(not(fbsd14), doc = " ```no_run")]
    |                ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/fcntl.rs:784:12
    |
784 | #[cfg_attr(fbsd14, doc = " ```")]
    |            ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/fcntl.rs:785:16
    |
785 | #[cfg_attr(not(fbsd14), doc = " ```no_run")]
    |                ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/aio.rs:627:12
    |
627 | #[cfg_attr(fbsd14, doc = " ```")]
    |            ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/aio.rs:628:16
    |
628 | #[cfg_attr(not(fbsd14), doc = " ```no_run")]
    |                ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/aio.rs:862:12
    |
862 | #[cfg_attr(fbsd14, doc = " ```")]
    |            ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fbsd14`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/aio.rs:863:16
    |
863 | #[cfg_attr(not(fbsd14), doc = " ```no_run")]
    |                ^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fbsd14)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fbsd14)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:652:13
    |
652 |     Handler(extern fn(libc::c_int)),
    |             ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`
    |
    = note: `#[warn(missing_abi)]` on by default

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:657:15
    |
657 |     SigAction(extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void))
    |               ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:677:55
    |
677 |                 SigHandler::Handler(f) => f as *const extern fn(libc::c_int) as usize,
    |                                                       ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:679:57
    |
679 |                 SigHandler::SigAction(f) => f as *const extern fn(libc::c_int, *mut libc::siginfo_t, *mut libc::c_void) as usize,
    |                                                         ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:725:36
    |
725 |                          as *const extern fn(_, _, _))
    |                                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:727:20
    |
727 |                 as extern fn(_, _, _)),
    |                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:737:36
    |
737 |                          as *const extern fn(libc::c_int))
    |                                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:739:20
    |
739 |                 as extern fn(libc::c_int)),
    |                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:841:32
    |
841 |                      as *const extern fn(libc::c_int))
    |                                ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/signal.rs:842:20
    |
842 |                 as extern fn(libc::c_int)),
    |                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: elided lifetime has a name
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/socket/sockopt.rs:1332:34
     |
1331 | impl<'a> Set<'a, OsString> for SetOsString<'a> {
     |      -- lifetime `'a` declared here
1332 |     fn new(val: &'a OsString) -> SetOsString {
     |                                  ^^^^^^^^^^^ this elided lifetime gets resolved as `'a`
     |
     = note: `#[warn(elided_named_lifetimes)]` on by default

warning: extern declarations without an explicit ABI are deprecated
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/statfs.rs:39:36
   |
39 |         const LIBC_FSTATFS: unsafe extern fn
   |                                    ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: extern declarations without an explicit ABI are deprecated
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/nix-0.26.4/src/sys/statfs.rs:42:35
   |
42 |         const LIBC_STATFS: unsafe extern fn
   |                                   ^^^^^^ help: explicitly specify the "C" ABI: `extern "C"`

warning: `group` (lib) generated 5 warnings (5 duplicates)
warning: `proc-macro2` (lib) generated 5 warnings (5 duplicates)
warning: field `1` is never read
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/coded_output_stream.rs:69:30
   |
69 |     Write(&'a mut dyn Write, Vec<u8>),
   |     -----                    ^^^^^^^
   |     |
   |     field in this variant
   |
   = note: `#[warn(dead_code)]` on by default
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
   |
69 -     Write(&'a mut dyn Write, Vec<u8>),
69 +     Write(&'a mut dyn Write, ()),
   |

warning: trait `GetRepeatedMessage` is never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:75:7
   |
75 | trait GetRepeatedMessage<M>: Sync {
   |       ^^^^^^^^^^^^^^^^^^

warning: trait `GetRepeatedEnum` is never used
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:81:7
   |
81 | trait GetRepeatedEnum<M: Message + 'static>: Sync {
   |       ^^^^^^^^^^^^^^^

warning: field `1` is never read
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:104:42
    |
104 |     String(for<'a> fn(&'a M) -> &'a str, fn(&mut M, String)),
    |     ------ field in this variant         ^^^^^^^^^^^^^^^^^^
    |
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
    |
104 -     String(for<'a> fn(&'a M) -> &'a str, fn(&mut M, String)),
104 +     String(for<'a> fn(&'a M) -> &'a str, ()),
    |

warning: field `1` is never read
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:105:42
    |
105 |     Bytes(for<'a> fn(&'a M) -> &'a [u8], fn(&mut M, Vec<u8>)),
    |     ----- field in this variant          ^^^^^^^^^^^^^^^^^^^
    |
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
    |
105 -     Bytes(for<'a> fn(&'a M) -> &'a [u8], fn(&mut M, Vec<u8>)),
105 +     Bytes(for<'a> fn(&'a M) -> &'a [u8], ()),
    |

warning: method `mut_field` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:127:8
    |
122 | pub(crate) trait FieldAccessor2<M, R: ?Sized>: Sync
    |                  -------------- method in this trait
...
127 |     fn mut_field<'a>(&self, _: &'a mut M) -> &'a mut R;
    |        ^^^^^^^^^

warning: field `mut_field` is never read
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/acc/v1.rs:135:5
    |
130 | struct MessageGetMut<M, L>
    |        ------------- field in this struct
...
135 |     mut_field: for<'a> fn(&'a mut M) -> &'a mut L,
    |     ^^^^^^^^^

warning: method `set_value` is never used
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/reflect/optional.rs:9:8
  |
6 | pub trait ReflectOptional: 'static {
  |           --------------- method in this trait
...
9 |     fn set_value(&mut self, value: &dyn ProtobufValue);
  |        ^^^^^^^^^

warning: field `0` is never read
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/protobuf-2.28.0/src/buf_read_iter.rs:37:11
   |
37 |     Slice(&'a [u8]),
   |     ----- ^^^^^^^^
   |     |
   |     field in this variant
   |
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
   |
37 -     Slice(&'a [u8]),
37 +     Slice(()),
   |

warning: `socket2` (lib) generated 5 warnings (5 duplicates)
   Compiling rand v0.8.5
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rand CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/Cargo.toml CARGO_PKG_AUTHORS='The Rand Project Developers:The Rust Project Developers' CARGO_PKG_DESCRIPTION='Random number generators and other randomness functionality.
' CARGO_PKG_HOMEPAGE='https://rust-random.github.io/book' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rand CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-random/rand' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.8.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rand --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="getrandom"' --cfg 'feature="libc"' --cfg 'feature="rand_chacha"' --cfg 'feature="std"' --cfg 'feature="std_rng"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "getrandom", "libc", "log", "min_const_gen", "nightly", "packed_simd", "rand_chacha", "serde", "serde1", "simd_support", "small_rng", "std", "std_rng"))' -C metadata=784a4e3b697fb704 -C extra-filename=-b531e8d485ff4b84 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern rand_chacha=/home/ivo/massive_game_server/target/release/deps/librand_chacha-06aa14a6bee69baf.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `num_cpus` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs:53:13
   |
53 | #![cfg_attr(doc_cfg, feature(doc_cfg))]
   |             ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/lib.rs:181:12
    |
181 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "std", feature = "std_rng"))))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/mod.rs:116:12
    |
116 | #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `features`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/distribution.rs:162:7
    |
162 | #[cfg(features = "nightly")]
    |       ^^^^^^^^^^^^^^^^^^^^
    |
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
help: there is a config with a similar name and value
    |
162 - #[cfg(features = "nightly")]
162 + #[cfg(feature = "nightly")]
    |

warning: unexpected `cfg` condition name: `std`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:235:11
    |
235 | #[cfg(not(std))]
    |           ^^^ help: found config with similar value: `feature = "std"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(std)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(std)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `std`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:291:19
    |
291 |         #[cfg(not(std))]
    |                   ^^^ help: found config with similar value: `feature = "std"`
...
359 | scalar_float_impl!(f32, u32);
    | ---------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(std)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(std)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `scalar_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `std`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:291:19
    |
291 |         #[cfg(not(std))]
    |                   ^^^ help: found config with similar value: `feature = "std"`
...
360 | scalar_float_impl!(f64, u64);
    | ---------------------------- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(std)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(std)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `scalar_float_impl` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/weighted_index.rs:80:12
   |
80 | #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/weighted_index.rs:429:12
    |
429 | #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rng.rs:395:12
    |
395 | #[cfg_attr(doc_cfg, doc(cfg(feature = "min_const_gen")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rngs/mod.rs:99:12
   |
99 | #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rngs/mod.rs:118:12
    |
118 | #[cfg_attr(doc_cfg, doc(cfg(feature = "getrandom")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rngs/std.rs:32:12
   |
32 | #[cfg_attr(doc_cfg, doc(cfg(feature = "std_rng")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rngs/thread.rs:60:12
   |
60 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "std", feature = "std_rng"))))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/rngs/thread.rs:87:12
   |
87 | #[cfg_attr(doc_cfg, doc(cfg(all(feature = "std", feature = "std_rng"))))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:29:12
   |
29 | #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
   |            ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:623:12
    |
623 | #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/index.rs:276:12
    |
276 | #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
    |            ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:114:16
    |
114 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:142:16
    |
142 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:170:16
    |
170 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:219:16
    |
219 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "std")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `doc_cfg`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/seq/mod.rs:465:16
    |
465 |     #[cfg_attr(doc_cfg, doc(cfg(feature = "alloc")))]
    |                ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(doc_cfg)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(doc_cfg)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

   Compiling matchers v0.1.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=matchers CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matchers-0.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matchers-0.1.0/Cargo.toml CARGO_PKG_AUTHORS='Eliza Weisman <eliza@buoyant.io>' CARGO_PKG_DESCRIPTION='Regex matching on character and byte streams.
' CARGO_PKG_HOMEPAGE='https://github.com/hawkw/matchers' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=matchers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hawkw/matchers' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name matchers --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/matchers-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=ec450618cf31af22 -C extra-filename=-658983ec4ae35d30 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern regex_automata=/home/ivo/massive_game_server/target/release/deps/libregex_automata-f4b3db71684dbc68.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `parking_lot` (lib) generated 5 warnings (5 duplicates)
warning: `metrics` (lib) generated 5 warnings (5 duplicates)
warning: `rand_chacha` (lib) generated 5 warnings (5 duplicates)
warning: `mime_guess` (lib) generated 7 warnings (5 duplicates)
warning: `matchers` (lib) generated 5 warnings (5 duplicates)
   Compiling metrics-util v0.16.3
   Compiling dashmap v5.5.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=metrics_util CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-util-0.16.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-util-0.16.3/Cargo.toml CARGO_PKG_AUTHORS='Toby Lawrence <toby@nuclearfurnace.com>' CARGO_PKG_DESCRIPTION='Helper types/functions used by the metrics ecosystem.' CARGO_PKG_HOMEPAGE='https://github.com/metrics-rs/metrics' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=metrics-util CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/metrics-rs/metrics' CARGO_PKG_RUST_VERSION=1.65.0 CARGO_PKG_VERSION=0.16.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name metrics_util --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-util-0.16.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="crossbeam-epoch"' --cfg 'feature="crossbeam-utils"' --cfg 'feature="handles"' --cfg 'feature="hashbrown"' --cfg 'feature="num_cpus"' --cfg 'feature="quanta"' --cfg 'feature="recency"' --cfg 'feature="registry"' --cfg 'feature="sketches-ddsketch"' --cfg 'feature="summary"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("ahash", "aho-corasick", "crossbeam-epoch", "crossbeam-utils", "debugging", "default", "handles", "hashbrown", "indexmap", "layer-filter", "layer-router", "layers", "num_cpus", "ordered-float", "quanta", "radix_trie", "recency", "registry", "sketches-ddsketch", "summary"))' -C metadata=ab6592799a89ec9f -C extra-filename=-4269cf480ee2ec4e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crossbeam_epoch=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_epoch-d0658ce18407787c.rmeta --extern crossbeam_utils=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_utils-ad1a605bff336aad.rmeta --extern hashbrown=/home/ivo/massive_game_server/target/release/deps/libhashbrown-10f702311d3a7bba.rmeta --extern metrics=/home/ivo/massive_game_server/target/release/deps/libmetrics-22ab11988786effe.rmeta --extern num_cpus=/home/ivo/massive_game_server/target/release/deps/libnum_cpus-0fcdabc4a86ed45f.rmeta --extern quanta=/home/ivo/massive_game_server/target/release/deps/libquanta-5cdf0ce099c6eaf5.rmeta --extern sketches_ddsketch=/home/ivo/massive_game_server/target/release/deps/libsketches_ddsketch-958fd49d4523466f.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=dashmap CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-5.5.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-5.5.3/Cargo.toml CARGO_PKG_AUTHORS='Acrimon <joel.wejdenstal@gmail.com>' CARGO_PKG_DESCRIPTION='Blazing fast concurrent HashMap for Rust.' CARGO_PKG_HOMEPAGE='https://github.com/xacrimon/dashmap' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=dashmap CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/xacrimon/dashmap' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=5.5.3 CARGO_PKG_VERSION_MAJOR=5 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name dashmap --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/dashmap-5.5.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "inline", "raw-api", "rayon", "serde"))' -C metadata=8d62b558d2500a0f -C extra-filename=-fc2e0b90c94b2be7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern hashbrown=/home/ivo/massive_game_server/target/release/deps/libhashbrown-10f702311d3a7bba.rmeta --extern lock_api=/home/ivo/massive_game_server/target/release/deps/liblock_api-d02ec6c849e4aa3c.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern parking_lot_core=/home/ivo/massive_game_server/target/release/deps/libparking_lot_core-5ff78276c1804731.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `hashbrown` (lib) generated 5 warnings (5 duplicates)
warning: trait `Float` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:238:18
    |
238 | pub(crate) trait Float: Sized {
    |                  ^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated items `lanes`, `extract`, and `replace` are never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:247:8
    |
245 | pub(crate) trait FloatAsSIMD: Sized {
    |                  ----------- associated items in this trait
246 |     #[inline(always)]
247 |     fn lanes() -> usize {
    |        ^^^^^
...
255 |     fn extract(self, index: usize) -> Self {
    |        ^^^^^^^
...
260 |     fn replace(self, index: usize, new_value: Self) -> Self {
    |        ^^^^^^^

warning: method `all` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rand-0.8.5/src/distributions/utils.rs:268:8
    |
266 | pub(crate) trait BoolAsSIMD: Sized {
    |                  ---------- method in this trait
267 |     fn any(self) -> bool;
268 |     fn all(self) -> bool;
    |        ^^^

warning: `rand` (lib) generated 31 warnings (5 duplicates)
warning: `dashmap` (lib) generated 5 warnings (5 duplicates)
warning: `metrics-util` (lib) generated 5 warnings (5 duplicates)
warning: `encoding_rs` (lib) generated 32 warnings (7 duplicates)
warning: `aho-corasick` (lib) generated 5 warnings (5 duplicates)
warning: `regex-syntax` (lib) generated 7 warnings (5 duplicates)
warning: `regex-automata` (lib) generated 5 warnings (5 duplicates)
   Compiling regex v1.11.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=regex CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.11.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.11.1/Cargo.toml CARGO_PKG_AUTHORS='The Rust Project Developers:Andrew Gallant <jamslam@gmail.com>' CARGO_PKG_DESCRIPTION='An implementation of regular expressions for Rust. This implementation uses
finite automata and guarantees linear time matching on all inputs.
' CARGO_PKG_HOMEPAGE='https://github.com/rust-lang/regex' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=regex CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/regex' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=1.11.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name regex --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/regex-1.11.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="perf"' --cfg 'feature="perf-backtrack"' --cfg 'feature="perf-cache"' --cfg 'feature="perf-dfa"' --cfg 'feature="perf-inline"' --cfg 'feature="perf-literal"' --cfg 'feature="perf-onepass"' --cfg 'feature="std"' --cfg 'feature="unicode"' --cfg 'feature="unicode-age"' --cfg 'feature="unicode-bool"' --cfg 'feature="unicode-case"' --cfg 'feature="unicode-gencat"' --cfg 'feature="unicode-perl"' --cfg 'feature="unicode-script"' --cfg 'feature="unicode-segment"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "logging", "pattern", "perf", "perf-backtrack", "perf-cache", "perf-dfa", "perf-dfa-full", "perf-inline", "perf-literal", "perf-onepass", "std", "unicode", "unicode-age", "unicode-bool", "unicode-case", "unicode-gencat", "unicode-perl", "unicode-script", "unicode-segment", "unstable", "use_std"))' -C metadata=be901557825d4096 -C extra-filename=-0cc93e0834632b17 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aho_corasick=/home/ivo/massive_game_server/target/release/deps/libaho_corasick-a0239b3850ef4fef.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern regex_automata=/home/ivo/massive_game_server/target/release/deps/libregex_automata-3a4b2eb7b51ba0c9.rmeta --extern regex_syntax=/home/ivo/massive_game_server/target/release/deps/libregex_syntax-222491375154f6c7.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `num-bigint` (lib) generated 5 warnings (5 duplicates)
warning: `rayon` (lib) generated 5 warnings (5 duplicates)
warning: `regex-syntax` (lib) generated 5 warnings (5 duplicates)
warning: `time-macros` (lib) generated 5 warnings (5 duplicates)
   Compiling time v0.3.41
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=time CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-0.3.41 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-0.3.41/Cargo.toml CARGO_PKG_AUTHORS='Jacob Pratt <open-source@jhpratt.dev>:Time contributors' CARGO_PKG_DESCRIPTION='Date and time library. Fully interoperable with the standard library. Mostly compatible with #'\!'[no_std].' CARGO_PKG_HOMEPAGE='https://time-rs.github.io' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=time CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/time-rs/time' CARGO_PKG_RUST_VERSION=1.67.1 CARGO_PKG_VERSION=0.3.41 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=41 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name time --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/time-0.3.41/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unused '--warn=clippy::nursery' '--warn=clippy::all' --warn=variant-size-differences '--warn=clippy::use-debug' '--warn=clippy::unwrap-used' '--warn=clippy::unwrap-in-result' --warn=unused-qualifications --warn=unused-lifetimes --warn=unused-import-braces --deny=unstable-syntax-pre-expansion --deny=unsafe-op-in-unsafe-fn --warn=unreachable-pub '--warn=clippy::unnested-or-patterns' --deny=unnameable-test-items '--warn=clippy::uninlined-format-args' '--warn=clippy::unimplemented' --deny=unexpected_cfgs '--warn=rustdoc::unescaped-backticks' '--deny=clippy::undocumented-unsafe-blocks' --deny=unconditional-recursion --warn=trivial-numeric-casts --warn=trivial-casts '--warn=clippy::todo' --deny=suspicious-double-ref-op '--deny=clippy::std-instead-of-core' --warn=single-use-lifetimes '--warn=clippy::semicolon-outside-block' '--warn=rustdoc::private-doc-tests' '--warn=clippy::print-stdout' --deny=overlapping-range-endpoints --deny=opaque-hidden-inferred-bound '--warn=clippy::obfuscated-if-else' --warn=noop-method-call --deny=non-ascii-idents --deny=named-arguments-used-positionally '--warn=clippy::missing-enforced-import-renames' '--warn=clippy::missing-docs-in-private-items' --warn=missing-docs --warn=missing-debug-implementations --warn=missing-copy-implementations --warn=missing-abi --warn=meta-variable-misuse '--warn=clippy::manual-let-else' --warn=macro-use-extern-crate --warn=let-underscore --warn=keyword-idents --deny=invalid-value --deny=invalid-reference-casting --deny=invalid-nan-comparisons --deny=invalid-macro-export-arguments --deny=invalid-from-utf8 --deny=improper-ctypes-definitions --deny=improper-ctypes --deny=hidden-glob-reexports '--warn=clippy::get-unwrap' --deny=future-incompatible '--warn=clippy::explicit-auto-deref' --deny=drop-bounds --deny=deref-nullptr '--warn=clippy::decimal-literal-representation' '--warn=clippy::dbg-macro' --deny=dangling-pointers-from-temporaries --deny=const-item-mutation --deny=clashing-extern-declarations '--warn=clippy::as-underscore' --deny=ambiguous-glob-reexports '--deny=clippy::alloc-instead-of-core' --allow=unstable-name-collisions '--allow=clippy::uninhabited-references' '--allow=clippy::redundant-pub-crate' '--allow=clippy::option-if-let-else' --check-cfg 'cfg(__ui_tests)' --check-cfg 'cfg(bench)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="formatting"' --cfg 'feature="macros"' --cfg 'feature="parsing"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "formatting", "large-dates", "local-offset", "macros", "parsing", "quickcheck", "rand", "serde", "serde-human-readable", "serde-well-known", "std", "wasm-bindgen"))' -C metadata=4b39b1bced6f3672 -C extra-filename=-423f613bbccab165 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern deranged=/home/ivo/massive_game_server/target/release/deps/libderanged-c6aeb1454adcbb7e.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --extern num_conv=/home/ivo/massive_game_server/target/release/deps/libnum_conv-a05ddb3da68e16d1.rmeta --extern powerfmt=/home/ivo/massive_game_server/target/release/deps/libpowerfmt-e2f1d8d69a62852e.rmeta --extern time_core=/home/ivo/massive_game_server/target/release/deps/libtime_core-6a9b06cae416a169.rmeta --extern time_macros=/home/ivo/massive_game_server/target/release/deps/libtime_macros-fcdad37d5abab3b5.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling env_filter v0.1.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=env_filter CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_filter-0.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_filter-0.1.3/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Filter log events using environment variables
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=env_filter CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/env_logger' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.1.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name env_filter --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_filter-0.1.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--allow=clippy::result_large_err' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="regex"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "regex"))' -C metadata=d3971fb9a0a7780d -C extra-filename=-122b06c2235b01f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern regex=/home/ivo/massive_game_server/target/release/deps/libregex-0cc93e0834632b17.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling env_logger v0.11.8
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=env_logger CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_logger-0.11.8 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_logger-0.11.8/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A logging implementation for `log` which is configured via an environment
variable.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=env_logger CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-cli/env_logger' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.11.8 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=8 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name env_logger --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/env_logger-0.11.8/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms '--warn=clippy::zero_sized_map_values' '--warn=clippy::wildcard_imports' '--warn=clippy::verbose_file_reads' --warn=unused_qualifications --warn=unused_macro_rules --warn=unused_lifetimes --warn=unsafe_op_in_unsafe_fn --warn=unreachable_pub '--warn=clippy::uninlined_format_args' '--warn=clippy::trait_duplication_in_bounds' '--warn=clippy::todo' '--warn=clippy::string_to_string' '--warn=clippy::string_lit_as_bytes' '--warn=clippy::string_add_assign' '--warn=clippy::string_add' '--warn=clippy::str_to_string' '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::self_named_module_files' '--warn=clippy::same_functions_in_if_condition' '--allow=clippy::result_large_err' '--warn=clippy::rest_pat_in_fully_bound_structs' '--warn=clippy::ref_option_ref' '--warn=clippy::redundant_feature_names' '--warn=clippy::rc_mutex' '--warn=clippy::ptr_as_ptr' '--warn=clippy::path_buf_push_overwrite' '--warn=clippy::negative_feature_names' '--warn=clippy::needless_for_each' '--warn=clippy::needless_continue' '--warn=clippy::mutex_integer' '--warn=clippy::mem_forget' '--warn=clippy::macro_use_imports' '--warn=clippy::lossy_float_literal' '--warn=clippy::linkedlist' '--allow=clippy::let_and_return' '--warn=clippy::large_types_passed_by_value' '--warn=clippy::large_stack_arrays' '--warn=clippy::large_digit_groups' '--warn=clippy::invalid_upcast_comparisons' '--warn=clippy::infinite_loop' '--warn=clippy::inefficient_to_string' '--warn=clippy::inconsistent_struct_constructor' '--warn=clippy::imprecise_flops' '--warn=clippy::implicit_clone' '--allow=clippy::if_same_then_else' '--warn=clippy::from_iter_instead_of_collect' '--warn=clippy::fn_params_excessive_bools' '--warn=clippy::float_cmp_const' '--warn=clippy::flat_map_option' '--warn=clippy::filter_map_next' '--warn=clippy::fallible_impl_from' '--warn=clippy::explicit_into_iter_loop' '--warn=clippy::explicit_deref_methods' '--warn=clippy::expl_impl_clone_on_copy' '--warn=clippy::enum_glob_use' '--warn=clippy::empty_enum' '--warn=clippy::doc_markdown' '--warn=clippy::debug_assert_with_mut_call' '--warn=clippy::dbg_macro' '--warn=clippy::create_dir' '--allow=clippy::collapsible_else_if' '--warn=clippy::checked_conversions' '--allow=clippy::branches_sharing_code' '--allow=clippy::bool_assert_comparison' --cfg 'feature="auto-color"' --cfg 'feature="color"' --cfg 'feature="default"' --cfg 'feature="humantime"' --cfg 'feature="regex"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("auto-color", "color", "default", "humantime", "kv", "regex", "unstable-kv"))' -C metadata=0d43a035ad925602 -C extra-filename=-c9012cd947353b60 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern anstream=/home/ivo/massive_game_server/target/release/deps/libanstream-32d8c66d21767dd8.rmeta --extern anstyle=/home/ivo/massive_game_server/target/release/deps/libanstyle-89b6f415f092c9e2.rmeta --extern env_filter=/home/ivo/massive_game_server/target/release/deps/libenv_filter-122b06c2235b01f2.rmeta --extern jiff=/home/ivo/massive_game_server/target/release/deps/libjiff-27d689b01f2cf06d.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `regex` (lib) generated 5 warnings (5 duplicates)
warning: `env_filter` (lib) generated 5 warnings (5 duplicates)
   Compiling synstructure v0.12.6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=synstructure CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.12.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.12.6/Cargo.toml CARGO_PKG_AUTHORS='Nika Layzell <nika@thelayzells.com>' CARGO_PKG_DESCRIPTION='Helper methods and macros for custom derives' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=synstructure CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mystor/synstructure' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.12.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name synstructure --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.12.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="proc-macro"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "proc-macro"))' -C metadata=9ff475a9775ceffa -C extra-filename=-d3c93528f9770f52 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rmeta --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-8f2f288754ae8cd8.rmeta --extern unicode_xid=/home/ivo/massive_game_server/target/release/deps/libunicode_xid-47f904d4b6836050.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `env_logger` (lib) generated 5 warnings (5 duplicates)
   Compiling synstructure v0.13.2
   Compiling darling_core v0.20.11
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=synstructure CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.13.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.13.2/Cargo.toml CARGO_PKG_AUTHORS='Nika Layzell <nika@thelayzells.com>' CARGO_PKG_DESCRIPTION='Helper methods and macros for custom derives' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=synstructure CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/mystor/synstructure' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name synstructure --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/synstructure-0.13.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="proc-macro"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "proc-macro"))' -C metadata=35a53ef9d01c0623 -C extra-filename=-0c7bb2930f813343 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rmeta --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=darling_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_core-0.20.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_core-0.20.11/Cargo.toml CARGO_PKG_AUTHORS='Ted Driggs <ted.driggs@outlook.com>' CARGO_PKG_DESCRIPTION='Helper crate for proc-macro library for reading attributes into structs when
implementing custom derives. Use https://crates.io/crates/darling in your code.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=darling_core CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/TedDriggs/darling' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.20.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=20 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name darling_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_core-0.20.11/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="strsim"' --cfg 'feature="suggestions"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("diagnostics", "strsim", "suggestions"))' -C metadata=451ce13c899f93a3 -C extra-filename=-cdf6c195821cafb8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern fnv=/home/ivo/massive_game_server/target/release/deps/libfnv-e21eb3332409182c.rmeta --extern ident_case=/home/ivo/massive_game_server/target/release/deps/libident_case-f6160353c9350937.rmeta --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rmeta --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rmeta --extern strsim=/home/ivo/massive_game_server/target/release/deps/libstrsim-15288e39fe80c4a8.rmeta --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `nix` (lib) generated 26 warnings (5 duplicates)
   Compiling yasna v0.5.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=yasna CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yasna-0.5.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yasna-0.5.2/Cargo.toml CARGO_PKG_AUTHORS='Masaki Hara <ackie.h.gmai@gmail.com>' CARGO_PKG_DESCRIPTION='ASN.1 library for Rust' CARGO_PKG_HOMEPAGE='https://github.com/qnighy/yasna.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=yasna CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/qnighy/yasna.rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.5.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name yasna --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yasna-0.5.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --cfg 'feature="time"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bit-vec", "default", "num-bigint", "std", "time"))' -C metadata=62ab8c38f3d86a00 -C extra-filename=-b3f17670b84203bb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern time=/home/ivo/massive_game_server/target/release/deps/libtime-423f613bbccab165.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `yasna` (lib) generated 5 warnings (5 duplicates)
warning: `cc` (lib) generated 5 warnings (5 duplicates)
   Compiling ring v0.17.14
   Compiling openssl-sys v0.9.109
   Compiling libz-sys v1.1.22
   Compiling libgit2-sys v0.18.1+1.9.0
   Compiling zstd-sys v2.0.15+zstd.1.5.7
   Compiling ring v0.16.20
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='An experiment.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 AND ISC' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=0.17.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="dev_urandom_fallback"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "less-safe-getrandom-custom-or-rdrand", "less-safe-getrandom-espidf", "slow_tests", "std", "test_logging", "unstable-testing-arm-no-hw", "unstable-testing-arm-no-neon", "wasm32_unknown_unknown_js"))' -C metadata=5a927464cb81a11f -C extra-filename=-c5eaa5a39d200e7c --out-dir /home/ivo/massive_game_server/target/release/build/ring-c5eaa5a39d200e7c -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_main CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='FFI bindings to OpenSSL' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.9.109 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_main --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109/build/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc", "bindgen", "bssl-sys", "openssl-src", "unstable_boringssl", "vendored"))' -C metadata=e216b423b497cfff -C extra-filename=-89e9eb4956f64b20 --out-dir /home/ivo/massive_game_server/target/release/build/openssl-sys-89e9eb4956f64b20 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --extern pkg_config=/home/ivo/massive_game_server/target/release/deps/libpkg_config-84c8eb8b5e55f551.rlib --extern vcpkg=/home/ivo/massive_game_server/target/release/deps/libvcpkg-5db52f9f832f1b0d.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-sys CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=2.0.15+zstd.1.5.7 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --allow=non_upper_case_globals --cfg 'feature="legacy"' --cfg 'feature="std"' --cfg 'feature="zdict_builder"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bindgen", "debug", "default", "experimental", "fat-lto", "legacy", "no_asm", "no_wasm_shim", "non-cargo", "pkg-config", "seekable", "std", "thin", "thin-lto", "zdict_builder", "zstdmt"))' -C metadata=1ebfd19de5989a91 -C extra-filename=-c07dc60360f24797 --out-dir /home/ivo/massive_game_server/target/release/build/zstd-sys-c07dc60360f24797 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --extern pkg_config=/home/ivo/massive_game_server/target/release/deps/libpkg_config-84c8eb8b5e55f551.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Josh Triplett <josh@joshtriplett.org>:Sebastian Thiel <sebastian.thiel@icloud.com>' CARGO_PKG_DESCRIPTION='Low-level bindings to the system libz library (also known as zlib).' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libz-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libz-sys' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.1.22 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=22 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(zng)' --cfg 'feature="libc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("asm", "cmake", "default", "libc", "static", "stock-zlib", "zlib-ng", "zlib-ng-no-cmake-experimental-community-maintained"))' -C metadata=1304cf041f6353ed -C extra-filename=-85911a9f561da4d9 --out-dir /home/ivo/massive_game_server/target/release/build/libz-sys-85911a9f561da4d9 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --extern pkg_config=/home/ivo/massive_game_server/target/release/deps/libpkg_config-84c8eb8b5e55f551.rlib --extern vcpkg=/home/ivo/massive_game_server/target/release/deps/libvcpkg-5db52f9f832f1b0d.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0/Cargo.toml CARGO_PKG_AUTHORS='Josh Triplett <josh@joshtriplett.org>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Native bindings to the libgit2 library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libgit2-sys CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rust-lang/git2-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.18.1+1.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("https", "libssh2-sys", "openssl-sys", "ssh", "vendored", "vendored-openssl", "zlib-ng-compat"))' -C metadata=127c502d72367d77 -C extra-filename=-e30712dfd7673ea9 --out-dir /home/ivo/massive_game_server/target/release/build/libgit2-sys-e30712dfd7673ea9 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --extern pkg_config=/home/ivo/massive_game_server/target/release/deps/libpkg_config-84c8eb8b5e55f551.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/Cargo.toml CARGO_PKG_AUTHORS='Brian Smith <brian@briansmith.org>' CARGO_PKG_DESCRIPTION='Safe, fast, small crypto using Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='' CARGO_PKG_LICENSE_FILE=LICENSE CARGO_PKG_NAME=ring CARGO_PKG_README=doc/link-to-readme.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.16.20 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=20 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="dev_urandom_fallback"' --cfg 'feature="once_cell"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "internal_benches", "once_cell", "slow_tests", "std", "test_logging", "wasm32_c"))' -C metadata=13d55287cc232ca2 -C extra-filename=-64d55714e55bdc42 --out-dir /home/ivo/massive_game_server/target/release/build/ring-64d55714e55bdc42 -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cc=/home/ivo/massive_game_server/target/release/deps/libcc-244de555707e0652.rlib --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary parentheses around match arm expression
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/build.rs:625:21
    |
625 |         "x86_64" => ("win64"),
    |                     ^       ^
    |
    = note: `#[warn(unused_parens)]` on by default
help: remove these parentheses
    |
625 -         "x86_64" => ("win64"),
625 +         "x86_64" => "win64",
    |

warning: unnecessary parentheses around match arm expression
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/build.rs:626:18
    |
626 |         "x86" => ("win32"),
    |                  ^       ^
    |
help: remove these parentheses
    |
626 -         "x86" => ("win32"),
626 +         "x86" => "win32",
    |

warning: `jiff` (lib) generated 5 warnings (5 duplicates)
warning: `time` (lib) generated 5 warnings (5 duplicates)
warning: `libz-sys` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=libc CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_LIBC=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22 CARGO_MANIFEST_LINKS=z CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Josh Triplett <josh@joshtriplett.org>:Sebastian Thiel <sebastian.thiel@icloud.com>' CARGO_PKG_DESCRIPTION='Low-level bindings to the system libz library (also known as zlib).' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libz-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libz-sys' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.1.22 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=22 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/libz-sys-fbdca53caba07d37/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/libz-sys-85911a9f561da4d9/build-script-build`
[libz-sys 1.1.22] cargo:rerun-if-env-changed=LIBZ_SYS_STATIC
[libz-sys 1.1.22] cargo:rerun-if-changed=build.rs
[libz-sys 1.1.22] cargo:rerun-if-changed=zng/cmake.rs
[libz-sys 1.1.22] cargo:rerun-if-changed=zng/cc.rs
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_NO_PKG_CONFIG
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_DYNAMIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=SYSROOT
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_DYNAMIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[libz-sys 1.1.22] cargo:rustc-link-lib=z
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=ZLIB_DYNAMIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_PATH
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
[libz-sys 1.1.22] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[libz-sys 1.1.22] cargo:include=/usr/include
[libz-sys 1.1.22] OPT_LEVEL = Some(3)
[libz-sys 1.1.22] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/libz-sys-fbdca53caba07d37/out)
[libz-sys 1.1.22] TARGET = Some(x86_64-unknown-linux-gnu)
[libz-sys 1.1.22] HOST = Some(x86_64-unknown-linux-gnu)
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] CC_x86_64-unknown-linux-gnu = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] CC_x86_64_unknown_linux_gnu = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_CC
[libz-sys 1.1.22] HOST_CC = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CC
[libz-sys 1.1.22] CC = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[libz-sys 1.1.22] RUSTC_WRAPPER = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[libz-sys 1.1.22] CRATE_CC_NO_DEFAULTS = None
[libz-sys 1.1.22] DEBUG = Some(false)
[libz-sys 1.1.22] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CFLAGS
[libz-sys 1.1.22] CFLAGS = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=HOST_CFLAGS
[libz-sys 1.1.22] HOST_CFLAGS = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[libz-sys 1.1.22] CFLAGS_x86_64_unknown_linux_gnu = None
[libz-sys 1.1.22] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[libz-sys 1.1.22] CFLAGS_x86_64-unknown-linux-gnu = None
[libz-sys 1.1.22] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[libz-sys 1.1.22] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-Wall" "-Wextra" "src/smoke.c" "-g0" "-o" "/dev/null" "-lz"
warning: `zstd-sys` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=legacy,std,zdict_builder CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_LEGACY=1 CARGO_FEATURE_STD=1 CARGO_FEATURE_ZDICT_BUILDER=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7 CARGO_MANIFEST_LINKS=zstd CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-sys CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=2.0.15+zstd.1.5.7 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/zstd-sys-c07dc60360f24797/build-script-build`
[libz-sys 1.1.22] src/smoke.c: In function 'main':
[libz-sys 1.1.22] src/smoke.c:4:10: warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
[libz-sys 1.1.22]     4 |   return (int) adler32;
[libz-sys 1.1.22]       |          ^
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=ZSTD_SYS_USE_PKG_CONFIG
[zstd-sys 2.0.15+zstd.1.5.7] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out)
[zstd-sys 2.0.15+zstd.1.5.7] OPT_LEVEL = Some(3)
[zstd-sys 2.0.15+zstd.1.5.7] TARGET = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] HOST = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] CC_x86_64-unknown-linux-gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] CC_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_CC
[zstd-sys 2.0.15+zstd.1.5.7] HOST_CC = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC
[zstd-sys 2.0.15+zstd.1.5.7] CC = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[zstd-sys 2.0.15+zstd.1.5.7] RUSTC_WRAPPER = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[zstd-sys 2.0.15+zstd.1.5.7] CRATE_CC_NO_DEFAULTS = None
[zstd-sys 2.0.15+zstd.1.5.7] DEBUG = Some(false)
[zstd-sys 2.0.15+zstd.1.5.7] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] HOST_CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64-unknown-linux-gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[zstd-sys 2.0.15+zstd.1.5.7] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[zstd-sys 2.0.15+zstd.1.5.7] CRATE_CC_NO_DEFAULTS = None
[zstd-sys 2.0.15+zstd.1.5.7] TARGET = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[zstd-sys 2.0.15+zstd.1.5.7] HOST = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] HOST_CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64-unknown-linux-gnu = None
[libz-sys 1.1.22] cargo:rustc-link-lib=z
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=libz_sys CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Josh Triplett <josh@joshtriplett.org>:Sebastian Thiel <sebastian.thiel@icloud.com>' CARGO_PKG_DESCRIPTION='Low-level bindings to the system libz library (also known as zlib).' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libz-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/libz-sys' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.1.22 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=22 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/libz-sys-fbdca53caba07d37/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name libz_sys --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libz-sys-1.1.22/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(zng)' --cfg 'feature="libc"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("asm", "cmake", "default", "libc", "static", "stock-zlib", "zlib-ng", "zlib-ng-no-cmake-experimental-community-maintained"))' -C metadata=ceeb1f9f1cb40d7c -C extra-filename=-78bd199b537ed7c9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-b1f6962553262e28.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -l z -l z`
[zstd-sys 2.0.15+zstd.1.5.7] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[zstd-sys 2.0.15+zstd.1.5.7] CRATE_CC_NO_DEFAULTS = None
[zstd-sys 2.0.15+zstd.1.5.7] TARGET = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[zstd-sys 2.0.15+zstd.1.5.7] HOST = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] HOST_CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64-unknown-linux-gnu = None
warning: `libgit2-sys` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0 CARGO_MANIFEST_LINKS=git2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0/Cargo.toml CARGO_PKG_AUTHORS='Josh Triplett <josh@joshtriplett.org>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Native bindings to the libgit2 library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libgit2-sys CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rust-lang/git2-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.18.1+1.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' DEBUG=false DEP_Z_INCLUDE=/usr/include HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/libgit2-sys-e30712dfd7673ea9/build-script-build`
[libgit2-sys 0.18.1+1.9.0] cargo:rustc-check-cfg=cfg(libgit2_vendored,)
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=LIBGIT2_NO_VENDOR
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=LIBGIT2_NO_PKG_CONFIG
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_PKG_CONFIG
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=LIBGIT2_STATIC
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=LIBGIT2_DYNAMIC
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_PATH
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[zstd-sys 2.0.15+zstd.1.5.7] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[libgit2-sys 0.18.1+1.9.0] cargo:warning=failed to probe system libgit2: 
[libgit2-sys 0.18.1+1.9.0] pkg-config exited with status code 1
[libgit2-sys 0.18.1+1.9.0] > PKG_CONFIG_ALLOW_SYSTEM_LIBS=1 PKG_CONFIG_ALLOW_SYSTEM_CFLAGS=1 pkg-config --libs --cflags libgit2 'libgit2 >= 1.9.0' 'libgit2 < 1.10.0'
[libgit2-sys 0.18.1+1.9.0] 
[libgit2-sys 0.18.1+1.9.0] The system library `libgit2` required by crate `libgit2-sys` was not found.
[libgit2-sys 0.18.1+1.9.0] The file `libgit2.pc` needs to be installed and the PKG_CONFIG_PATH environment variable must contain its parent directory.
[libgit2-sys 0.18.1+1.9.0] The PKG_CONFIG_PATH environment variable is not set.
[libgit2-sys 0.18.1+1.9.0] 
[libgit2-sys 0.18.1+1.9.0] HINT: if you have installed the library, try setting PKG_CONFIG_PATH to the directory containing `libgit2.pc`.
[libgit2-sys 0.18.1+1.9.0] 
[libgit2-sys 0.18.1+1.9.0] cargo:rustc-cfg=libgit2_vendored
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/config.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/config.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/revwalk.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/revwalk.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/trace.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/trace.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/blame.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/blame.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/transaction.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/transaction.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/cert.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/cert.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/email.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/email.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/credential_helpers.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/credential_helpers.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/tree.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/tree.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/message.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/message.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/ignore.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/ignore.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/object.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/object.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/filter.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/filter.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/revert.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/revert.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/remote.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/remote.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/index.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/index.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/branch.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/branch.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/apply.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/apply.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/diff.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/diff.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/common.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/common.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/reset.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/reset.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/attr.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/attr.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/cred_helpers.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/cred_helpers.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/repository.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/repository.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/odb_backend.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/odb_backend.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/checkout.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/checkout.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/odb.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/odb.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/submodule.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/submodule.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/merge.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/merge.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/oidarray.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/oidarray.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/pathspec.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/pathspec.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/net.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/net.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/worktree.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/worktree.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/deprecated.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/deprecated.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/mailmap.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/mailmap.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/reflog.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/reflog.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/blob.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/blob.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/pack.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/pack.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/experimental.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/experimental.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/graph.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/graph.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/revparse.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/revparse.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/tag.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/tag.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/strarray.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/strarray.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/clone.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/clone.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/status.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/status.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/refdb.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/refdb.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/types.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/types.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/stdint.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/stdint.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/describe.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/describe.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/notes.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/notes.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/patch.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/patch.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/annotated_commit.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/annotated_commit.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/oid.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/oid.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/refspec.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/refspec.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/cherrypick.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/cherrypick.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/version.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/version.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/buffer.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/buffer.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/transport.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/transport.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/indexer.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/indexer.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/commit.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/commit.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/signature.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/signature.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/stash.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/stash.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/credential.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/credential.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/config.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/config.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/openssl.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/openssl.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/stream.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/stream.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/email.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/email.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/filter.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/filter.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/remote.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/remote.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/index.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/index.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/commit_graph.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/commit_graph.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/diff.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/diff.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/hashsig.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/hashsig.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/repository.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/repository.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/odb_backend.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/odb_backend.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/refdb_backend.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/refdb_backend.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/merge.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/merge.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/mempack.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/mempack.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/alloc.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/alloc.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/cred.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/cred.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/path.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/path.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/transport.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/transport.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/commit.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/commit.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/credential.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/credential.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/midx.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/midx.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/refs.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/refs.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/sys/errors.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/sys/errors.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/global.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/global.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/proxy.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/proxy.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/rebase.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/rebase.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/refs.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/refs.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2/errors.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2/errors.h
[libgit2-sys 0.18.1+1.9.0] libgit2/include/git2.h => /home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/include/git2.h
[libgit2-sys 0.18.1+1.9.0] OPT_LEVEL = Some(3)
[libgit2-sys 0.18.1+1.9.0] TARGET = Some(x86_64-unknown-linux-gnu)
[libgit2-sys 0.18.1+1.9.0] HOST = Some(x86_64-unknown-linux-gnu)
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] CC_x86_64-unknown-linux-gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] CC_x86_64_unknown_linux_gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_CC
[libgit2-sys 0.18.1+1.9.0] HOST_CC = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CC
[libgit2-sys 0.18.1+1.9.0] CC = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[zstd-sys 2.0.15+zstd.1.5.7] CRATE_CC_NO_DEFAULTS = None
[zstd-sys 2.0.15+zstd.1.5.7] TARGET = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[zstd-sys 2.0.15+zstd.1.5.7] HOST = Some(x86_64-unknown-linux-gnu)
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_CFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] HOST_CFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] CFLAGS_x86_64-unknown-linux-gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
warning: `libz-sys` (lib) generated 5 warnings (5 duplicates)
[libgit2-sys 0.18.1+1.9.0] RUSTC_WRAPPER = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[libgit2-sys 0.18.1+1.9.0] CRATE_CC_NO_DEFAULTS = None
[libgit2-sys 0.18.1+1.9.0] DEBUG = Some(false)
[libgit2-sys 0.18.1+1.9.0] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CFLAGS
[libgit2-sys 0.18.1+1.9.0] CFLAGS = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_CFLAGS
[libgit2-sys 0.18.1+1.9.0] HOST_CFLAGS = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] CFLAGS_x86_64_unknown_linux_gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] CFLAGS_x86_64-unknown-linux-gnu = None
[libgit2-sys 0.18.1+1.9.0] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
warning: `ring` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=alloc,default,dev_urandom_fallback CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ALLOC=1 CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_DEV_URANDOM_FALLBACK=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14 CARGO_MANIFEST_LINKS=ring_core_0_17_14_ CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='An experiment.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 AND ISC' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=0.17.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/ring-c5eaa5a39d200e7c/build-script-build`
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_MANIFEST_DIR
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_PKG_NAME
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_PKG_VERSION_MAJOR
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_PKG_VERSION_MINOR
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_PKG_VERSION_PATCH
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_PKG_VERSION_PRE
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_MANIFEST_LINKS
[ring 0.17.14] cargo:rerun-if-env-changed=RING_PREGENERATE_ASM
[ring 0.17.14] cargo:rerun-if-env-changed=OUT_DIR
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_CFG_TARGET_ARCH
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_CFG_TARGET_OS
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_CFG_TARGET_ENV
[ring 0.17.14] cargo:rerun-if-env-changed=CARGO_CFG_TARGET_ENDIAN
[ring 0.17.14] OPT_LEVEL = Some(3)
[ring 0.17.14] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out)
[ring 0.17.14] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.17.14] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.17.14] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.17.14] CC_x86_64-unknown-linux-gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.17.14] CC_x86_64_unknown_linux_gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=HOST_CC
[ring 0.17.14] HOST_CC = None
[ring 0.17.14] cargo:rerun-if-env-changed=CC
[ring 0.17.14] CC = None
warning: `ring` (build script) generated 7 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=alloc,default,dev_urandom_fallback,once_cell CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ALLOC=1 CARGO_FEATURE_DEFAULT=1 CARGO_FEATURE_DEV_URANDOM_FALLBACK=1 CARGO_FEATURE_ONCE_CELL=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20 CARGO_MANIFEST_LINKS=ring-asm CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/Cargo.toml CARGO_PKG_AUTHORS='Brian Smith <brian@briansmith.org>' CARGO_PKG_DESCRIPTION='Safe, fast, small crypto using Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='' CARGO_PKG_LICENSE_FILE=LICENSE CARGO_PKG_NAME=ring CARGO_PKG_README=doc/link-to-readme.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.16.20 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=20 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/ring-64d55714e55bdc42/build-script-build`
[ring 0.17.14] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.17.14] RUSTC_WRAPPER = None
[ring 0.17.14] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.17.14] CRATE_CC_NO_DEFAULTS = None
[ring 0.17.14] DEBUG = Some(false)
[ring 0.17.14] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS
[ring 0.17.14] CFLAGS = None
[ring 0.17.14] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.17.14] HOST_CFLAGS = None
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.17.14] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.17.14] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.17.14] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/aesni-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/aesni-x86_64-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/vpaes-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/vpaes-x86_64-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/x86_64-mont-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/x86_64-mont-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/x86_64-mont5-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/x86_64-mont5-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/chacha-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/chacha-x86_64-elf.S"
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/p256-x86_64-asm-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/p256-x86_64-asm-elf.S"
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/aesni-gcm-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/aesni-gcm-x86_64-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/ghash-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/ghash-x86_64-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/sha512-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/sha512-x86_64-elf.S"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/chacha20_poly1305_x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/chacha20_poly1305_x86_64-elf.S"
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
warning: `openssl-sys` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109 CARGO_MANIFEST_LINKS=openssl CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='FFI bindings to OpenSSL' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.9.109 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/openssl-sys-30ed37db3720d2ac/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/openssl-sys-89e9eb4956f64b20/build-script-main`
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(osslconf, values("OPENSSL_NO_OCB", "OPENSSL_NO_SM4", "OPENSSL_NO_SEED", "OPENSSL_NO_CHACHA", "OPENSSL_NO_CAST", "OPENSSL_NO_IDEA", "OPENSSL_NO_CAMELLIA", "OPENSSL_NO_RC4", "OPENSSL_NO_BF", "OPENSSL_NO_PSK", "OPENSSL_NO_DEPRECATED_3_0", "OPENSSL_NO_SCRYPT", "OPENSSL_NO_SM3", "OPENSSL_NO_RMD160", "OPENSSL_NO_EC2M", "OPENSSL_NO_OCSP", "OPENSSL_NO_CMS", "OPENSSL_NO_COMP", "OPENSSL_NO_SOCK", "OPENSSL_NO_STDIO", "OPENSSL_NO_EC", "OPENSSL_NO_SSL3_METHOD", "OPENSSL_NO_KRB5", "OPENSSL_NO_TLSEXT", "OPENSSL_NO_SRP", "OPENSSL_NO_RFC3779", "OPENSSL_NO_SHA", "OPENSSL_NO_NEXTPROTONEG", "OPENSSL_NO_ENGINE", "OPENSSL_NO_BUF_FREELISTS", "OPENSSL_NO_RC2"))
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(openssl)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(boringssl)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(awslc)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl250)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl251)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl252)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl261)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl270)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl271)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl273)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl280)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl281)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl291)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl310)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl321)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl332)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl340)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl350)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl360)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl361)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl370)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl380)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl381)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl382)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl390)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl400)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(libressl410)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl101)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl102)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl102f)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl102h)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl110)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl110f)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl110g)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl110h)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl111)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl111b)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl111c)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl111d)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl300)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl310)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl320)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl330)
[openssl-sys 0.9.109] cargo:rustc-check-cfg=cfg(ossl340)
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=X86_64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR
[openssl-sys 0.9.109] X86_64_UNKNOWN_LINUX_GNU_OPENSSL_LIB_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_LIB_DIR
[openssl-sys 0.9.109] OPENSSL_LIB_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=X86_64_UNKNOWN_LINUX_GNU_OPENSSL_INCLUDE_DIR
[openssl-sys 0.9.109] X86_64_UNKNOWN_LINUX_GNU_OPENSSL_INCLUDE_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_INCLUDE_DIR
[openssl-sys 0.9.109] OPENSSL_INCLUDE_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR
[openssl-sys 0.9.109] X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_DIR
[openssl-sys 0.9.109] OPENSSL_DIR unset
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_NO_PKG_CONFIG
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_DYNAMIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=SYSROOT
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_DYNAMIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[openssl-sys 0.9.109] cargo:rustc-link-lib=ssl
[openssl-sys 0.9.109] cargo:rustc-link-lib=crypto
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=OPENSSL_DYNAMIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_STATIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_ALL_DYNAMIC
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_PATH
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_PATH
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_LIBDIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_LIBDIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_PKG_CONFIG_SYSROOT_DIR
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=PKG_CONFIG_SYSROOT_DIR
[openssl-sys 0.9.109] cargo:rerun-if-changed=build/expando.c
[openssl-sys 0.9.109] OPT_LEVEL = Some(3)
[openssl-sys 0.9.109] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/openssl-sys-30ed37db3720d2ac/out)
[openssl-sys 0.9.109] TARGET = Some(x86_64-unknown-linux-gnu)
[openssl-sys 0.9.109] HOST = Some(x86_64-unknown-linux-gnu)
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] CC_x86_64-unknown-linux-gnu = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] CC_x86_64_unknown_linux_gnu = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_CC
[openssl-sys 0.9.109] HOST_CC = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CC
[openssl-sys 0.9.109] CC = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/sha256-x86_64-elf.o" "/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/pregenerated/sha256-x86_64-elf.S"
[openssl-sys 0.9.109] RUSTC_WRAPPER = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[openssl-sys 0.9.109] CRATE_CC_NO_DEFAULTS = None
[openssl-sys 0.9.109] DEBUG = Some(false)
[openssl-sys 0.9.109] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CFLAGS
[openssl-sys 0.9.109] CFLAGS = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=HOST_CFLAGS
[openssl-sys 0.9.109] HOST_CFLAGS = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[openssl-sys 0.9.109] CFLAGS_x86_64_unknown_linux_gnu = None
[openssl-sys 0.9.109] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[openssl-sys 0.9.109] CFLAGS_x86_64-unknown-linux-gnu = None
[openssl-sys 0.9.109] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[openssl-sys 0.9.109] version: 3_0_13
[openssl-sys 0.9.109] cargo:rustc-cfg=osslconf="OPENSSL_NO_IDEA"
[openssl-sys 0.9.109] cargo:rustc-cfg=osslconf="OPENSSL_NO_SSL3_METHOD"
[openssl-sys 0.9.109] cargo:conf=OPENSSL_NO_IDEA,OPENSSL_NO_SSL3_METHOD
[openssl-sys 0.9.109] cargo:rustc-cfg=openssl
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl300
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl101
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl102
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl102f
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl102h
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl110
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl110f
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl110g
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl110h
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl111
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl111b
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl111c
[openssl-sys 0.9.109] cargo:rustc-cfg=ossl111d
[openssl-sys 0.9.109] cargo:version_number=300000d0
[openssl-sys 0.9.109] cargo:include=/usr/include
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=openssl_sys CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109/Cargo.toml CARGO_PKG_AUTHORS='Alex Crichton <alex@alexcrichton.com>:Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='FFI bindings to OpenSSL' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl-sys CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.9.109 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=109 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/openssl-sys-30ed37db3720d2ac/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name openssl_sys --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-sys-0.9.109/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc", "bindgen", "bssl-sys", "openssl-src", "unstable_boringssl", "vendored"))' -C metadata=b5977196338aafed -C extra-filename=-3045693d67023084 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -l ssl -l crypto --cfg 'osslconf="OPENSSL_NO_IDEA"' --cfg 'osslconf="OPENSSL_NO_SSL3_METHOD"' --cfg openssl --cfg ossl300 --cfg ossl101 --cfg ossl102 --cfg ossl102f --cfg ossl102h --cfg ossl110 --cfg ossl110f --cfg ossl110g --cfg ossl110h --cfg ossl111 --cfg ossl111b --cfg ossl111c --cfg ossl111d --check-cfg 'cfg(osslconf, values("OPENSSL_NO_OCB", "OPENSSL_NO_SM4", "OPENSSL_NO_SEED", "OPENSSL_NO_CHACHA", "OPENSSL_NO_CAST", "OPENSSL_NO_IDEA", "OPENSSL_NO_CAMELLIA", "OPENSSL_NO_RC4", "OPENSSL_NO_BF", "OPENSSL_NO_PSK", "OPENSSL_NO_DEPRECATED_3_0", "OPENSSL_NO_SCRYPT", "OPENSSL_NO_SM3", "OPENSSL_NO_RMD160", "OPENSSL_NO_EC2M", "OPENSSL_NO_OCSP", "OPENSSL_NO_CMS", "OPENSSL_NO_COMP", "OPENSSL_NO_SOCK", "OPENSSL_NO_STDIO", "OPENSSL_NO_EC", "OPENSSL_NO_SSL3_METHOD", "OPENSSL_NO_KRB5", "OPENSSL_NO_TLSEXT", "OPENSSL_NO_SRP", "OPENSSL_NO_RFC3779", "OPENSSL_NO_SHA", "OPENSSL_NO_NEXTPROTONEG", "OPENSSL_NO_ENGINE", "OPENSSL_NO_BUF_FREELISTS", "OPENSSL_NO_RC2"))' --check-cfg 'cfg(openssl)' --check-cfg 'cfg(libressl)' --check-cfg 'cfg(boringssl)' --check-cfg 'cfg(awslc)' --check-cfg 'cfg(libressl250)' --check-cfg 'cfg(libressl251)' --check-cfg 'cfg(libressl252)' --check-cfg 'cfg(libressl261)' --check-cfg 'cfg(libressl270)' --check-cfg 'cfg(libressl271)' --check-cfg 'cfg(libressl273)' --check-cfg 'cfg(libressl280)' --check-cfg 'cfg(libressl281)' --check-cfg 'cfg(libressl291)' --check-cfg 'cfg(libressl310)' --check-cfg 'cfg(libressl321)' --check-cfg 'cfg(libressl332)' --check-cfg 'cfg(libressl340)' --check-cfg 'cfg(libressl350)' --check-cfg 'cfg(libressl360)' --check-cfg 'cfg(libressl361)' --check-cfg 'cfg(libressl370)' --check-cfg 'cfg(libressl380)' --check-cfg 'cfg(libressl381)' --check-cfg 'cfg(libressl382)' --check-cfg 'cfg(libressl390)' --check-cfg 'cfg(libressl400)' --check-cfg 'cfg(libressl410)' --check-cfg 'cfg(ossl101)' --check-cfg 'cfg(ossl102)' --check-cfg 'cfg(ossl102f)' --check-cfg 'cfg(ossl102h)' --check-cfg 'cfg(ossl110)' --check-cfg 'cfg(ossl110f)' --check-cfg 'cfg(ossl110g)' --check-cfg 'cfg(ossl110h)' --check-cfg 'cfg(ossl111)' --check-cfg 'cfg(ossl111b)' --check-cfg 'cfg(ossl111c)' --check-cfg 'cfg(ossl111d)' --check-cfg 'cfg(ossl300)' --check-cfg 'cfg(ossl310)' --check-cfg 'cfg(ossl320)' --check-cfg 'cfg(ossl330)' --check-cfg 'cfg(ossl340)'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='OpenSSL bindings' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.10.73 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=73 CARGO_PKG_VERSION_PRE='' DEBUG=false DEP_OPENSSL_CONF=OPENSSL_NO_IDEA,OPENSSL_NO_SSL3_METHOD DEP_OPENSSL_INCLUDE=/usr/include DEP_OPENSSL_VERSION_NUMBER=300000d0 HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/openssl-4fd860b0c4a6dd01/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/openssl-218e9df45f7a9a07/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE='' CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='A wrapper over a platform'\''s native TLS implementation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=native-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-native-tls' CARGO_PKG_RUST_VERSION=1.80.0 CARGO_PKG_VERSION=0.2.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' DEBUG=false DEP_OPENSSL_CONF=OPENSSL_NO_IDEA,OPENSSL_NO_SSL3_METHOD DEP_OPENSSL_INCLUDE=/usr/include DEP_OPENSSL_VERSION_NUMBER=300000d0 HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/native-tls-c469c8b10057081c/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/native-tls-157eae7b5c6bd417/build-script-build`
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/aes_nohw.o" "crypto/fipsmodule/aes/aes_nohw.c"
[native-tls 0.2.14] cargo:rustc-cfg=have_min_max_version
[native-tls 0.2.14] cargo::rustc-check-cfg=cfg(have_min_max_version)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(osslconf, values("OPENSSL_NO_OCB", "OPENSSL_NO_SM4", "OPENSSL_NO_SEED", "OPENSSL_NO_CHACHA", "OPENSSL_NO_CAST", "OPENSSL_NO_IDEA", "OPENSSL_NO_CAMELLIA", "OPENSSL_NO_RC4", "OPENSSL_NO_BF", "OPENSSL_NO_PSK", "OPENSSL_NO_DEPRECATED_3_0", "OPENSSL_NO_SCRYPT", "OPENSSL_NO_SM3", "OPENSSL_NO_RMD160", "OPENSSL_NO_EC2M", "OPENSSL_NO_OCSP", "OPENSSL_NO_CMS", "OPENSSL_NO_EC", "OPENSSL_NO_ARGON2", "OPENSSL_NO_RC2"))
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(boringssl)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(awslc)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl250)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl251)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl261)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl270)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl271)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl273)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl280)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl291)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl310)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl321)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl332)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl340)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl350)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl360)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl361)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl370)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl380)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl382)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl390)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl400)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(libressl410)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl101)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl102)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl110)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl110g)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl110h)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl111)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl111d)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl300)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl310)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl320)
[openssl 0.10.73] cargo:rustc-check-cfg=cfg(ossl330)
[openssl 0.10.73] cargo:rustc-cfg=osslconf="OPENSSL_NO_IDEA"
[openssl 0.10.73] cargo:rustc-cfg=osslconf="OPENSSL_NO_SSL3_METHOD"
[openssl 0.10.73] cargo:rustc-cfg=ossl101
[openssl 0.10.73] cargo:rustc-cfg=ossl102
[openssl 0.10.73] cargo:rustc-cfg=ossl110
[openssl 0.10.73] cargo:rustc-cfg=ossl110g
[openssl 0.10.73] cargo:rustc-cfg=ossl110h
[openssl 0.10.73] cargo:rustc-cfg=ossl111
[openssl 0.10.73] cargo:rustc-cfg=ossl111d
[openssl 0.10.73] cargo:rustc-cfg=ossl300
warning: `regex-automata` (lib) generated 5 warnings (5 duplicates)
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
warning: `synstructure` (lib) generated 5 warnings (5 duplicates)
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/montgomery.o" "crypto/fipsmodule/bn/montgomery.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/montgomery_inv.o" "crypto/fipsmodule/bn/montgomery_inv.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/limbs.o" "crypto/limbs/limbs.c"
warning: `openssl-sys` (lib) generated 5 warnings (5 duplicates)
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/mem.o" "crypto/mem.c"
warning: `synstructure` (lib) generated 5 warnings (5 duplicates)
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/poly1305.o" "crypto/poly1305/poly1305.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/crypto.o" "crypto/crypto.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/curve25519.o" "crypto/curve25519/curve25519.c"
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] exit status: 0
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=AR_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] AR_x86_64-unknown-linux-gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=AR_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] AR_x86_64_unknown_linux_gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_AR
[libgit2-sys 0.18.1+1.9.0] HOST_AR = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=AR
[libgit2-sys 0.18.1+1.9.0] AR = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=ARFLAGS
[libgit2-sys 0.18.1+1.9.0] ARFLAGS = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=HOST_ARFLAGS
[libgit2-sys 0.18.1+1.9.0] HOST_ARFLAGS = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=ARFLAGS_x86_64_unknown_linux_gnu
[libgit2-sys 0.18.1+1.9.0] ARFLAGS_x86_64_unknown_linux_gnu = None
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-env-changed=ARFLAGS_x86_64-unknown-linux-gnu
[libgit2-sys 0.18.1+1.9.0] ARFLAGS_x86_64-unknown-linux-gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/ecp_nistz.o" "crypto/fipsmodule/ec/ecp_nistz.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/ecp_nistz256.o" "crypto/fipsmodule/ec/ecp_nistz256.c"
[libgit2-sys 0.18.1+1.9.0] cargo:rustc-link-lib=static=git2
[libgit2-sys 0.18.1+1.9.0] cargo:rustc-link-search=native=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build
[libgit2-sys 0.18.1+1.9.0] cargo:root=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-changed=libgit2/include
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-changed=libgit2/src
[libgit2-sys 0.18.1+1.9.0] cargo:rerun-if-changed=libgit2/deps
warning: libgit2-sys@0.18.1+1.9.0: failed to probe system libgit2:
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=libgit2_sys CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0/Cargo.toml CARGO_PKG_AUTHORS='Josh Triplett <josh@joshtriplett.org>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Native bindings to the libgit2 library' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=libgit2-sys CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rust-lang/git2-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.18.1+1.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=18 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name libgit2_sys --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/libgit2-sys-0.18.1+1.9.0/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("https", "libssh2-sys", "openssl-sys", "ssh", "vendored", "vendored-openssl", "zlib-ng-compat"))' -C metadata=b18576783157fc75 -C extra-filename=-1bb783763c4dfdb4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-b1f6962553262e28.rmeta --extern libz_sys=/home/ivo/massive_game_server/target/release/deps/liblibz_sys-78bd199b537ed7c9.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build -l static=git2 --cfg libgit2_vendored --check-cfg 'cfg(libgit2_vendored,)'`
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/gfp_p256.o" "crypto/fipsmodule/ec/gfp_p256.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/gfp_p384.o" "crypto/fipsmodule/ec/gfp_p384.c"
warning: `libgit2-sys` (lib) generated 5 warnings (5 duplicates)
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/cpu-intel.o" "crypto/cpu-intel.c"
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/poly1305_vec.o" "crypto/poly1305/poly1305_vec.c"
[ring 0.16.20] cargo:rustc-link-lib=static=ring-core
[ring 0.16.20] OPT_LEVEL = Some(3)
[ring 0.16.20] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out)
[ring 0.16.20] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.16.20] CC_x86_64-unknown-linux-gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.16.20] CC_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CC
[ring 0.16.20] HOST_CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC
[ring 0.16.20] CC = None
[ring 0.16.20] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.17.14] exit status: 0
[ring 0.16.20] RUSTC_WRAPPER = None
[ring 0.16.20] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.16.20] CRATE_CC_NO_DEFAULTS = None
[ring 0.16.20] DEBUG = Some(false)
[ring 0.16.20] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS
[ring 0.16.20] CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.16.20] HOST_CFLAGS = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.16.20] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.16.20] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.16.20] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.16.20] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
[ring 0.16.20] running LC_ALL="C" "cc" "-O3" "-ffunction-sections" "-fdata-sections" "-fPIC" "-m64" "-I" "include" "-Wall" "-Wextra" "-std=c1x" "-Wbad-function-cast" "-Wnested-externs" "-Wstrict-prototypes" "-pedantic" "-pedantic-errors" "-Wall" "-Wextra" "-Wcast-align" "-Wcast-qual" "-Wconversion" "-Wenum-compare" "-Wfloat-equal" "-Wformat=2" "-Winline" "-Winvalid-pch" "-Wmissing-field-initializers" "-Wmissing-include-dirs" "-Wredundant-decls" "-Wshadow" "-Wsign-compare" "-Wsign-conversion" "-Wundef" "-Wuninitialized" "-Wwrite-strings" "-fno-strict-aliasing" "-fvisibility=hidden" "-fstack-protector" "-g3" "-DNDEBUG" "-c" "-o/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out/constant_time_test.o" "crypto/constant_time_test.c"
[ring 0.17.14] cargo:rustc-link-lib=static=ring_core_0_17_14_
[ring 0.17.14] OPT_LEVEL = Some(3)
[ring 0.17.14] OUT_DIR = Some(/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out)
[ring 0.17.14] TARGET = Some(x86_64-unknown-linux-gnu)
[ring 0.17.14] HOST = Some(x86_64-unknown-linux-gnu)
[ring 0.17.14] cargo:rerun-if-env-changed=CC_x86_64-unknown-linux-gnu
[ring 0.17.14] CC_x86_64-unknown-linux-gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=CC_x86_64_unknown_linux_gnu
[ring 0.17.14] CC_x86_64_unknown_linux_gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=HOST_CC
[ring 0.17.14] HOST_CC = None
[ring 0.17.14] cargo:rerun-if-env-changed=CC
[ring 0.17.14] CC = None
[ring 0.17.14] cargo:rerun-if-env-changed=CC_ENABLE_DEBUG_OUTPUT
[ring 0.16.20] cargo:rustc-link-lib=static=ring-test
[ring 0.16.20] cargo:rustc-link-search=native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ring CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/Cargo.toml CARGO_PKG_AUTHORS='Brian Smith <brian@briansmith.org>' CARGO_PKG_DESCRIPTION='Safe, fast, small crypto using Rust.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='' CARGO_PKG_LICENSE_FILE=LICENSE CARGO_PKG_NAME=ring CARGO_PKG_README=doc/link-to-readme.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.16.20 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=20 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ring --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="dev_urandom_fallback"' --cfg 'feature="once_cell"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "internal_benches", "once_cell", "slow_tests", "std", "test_logging", "wasm32_c"))' -C metadata=fedd3fdd17f3c8cb -C extra-filename=-b814a3e37653cdaa --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern spin=/home/ivo/massive_game_server/target/release/deps/libspin-3e06e0d1a23dfa8d.rmeta --extern untrusted=/home/ivo/massive_game_server/target/release/deps/libuntrusted-de2bfbb5082988b2.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out -l static=ring-core -l static=ring-test`
[ring 0.17.14] RUSTC_WRAPPER = None
[ring 0.17.14] cargo:rerun-if-env-changed=CRATE_CC_NO_DEFAULTS
[ring 0.17.14] CRATE_CC_NO_DEFAULTS = None
[ring 0.17.14] DEBUG = Some(false)
[ring 0.17.14] CARGO_CFG_TARGET_FEATURE = Some(adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves)
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS
[ring 0.17.14] CFLAGS = None
[ring 0.17.14] cargo:rerun-if-env-changed=HOST_CFLAGS
[ring 0.17.14] HOST_CFLAGS = None
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS_x86_64_unknown_linux_gnu
[ring 0.17.14] CFLAGS_x86_64_unknown_linux_gnu = None
[ring 0.17.14] cargo:rerun-if-env-changed=CFLAGS_x86_64-unknown-linux-gnu
[ring 0.17.14] CFLAGS_x86_64-unknown-linux-gnu = None
[ring 0.17.14] CARGO_ENCODED_RUSTFLAGS = Some(-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl)
warning: unused doc comment
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/aead/chacha.rs:110:9
    |
110 | /         /// XXX: Although this takes an `Iv`, this actually uses it like a
111 | |         /// `Counter`.
    | |______________________^
112 | /         extern "C" {
113 | |             fn GFp_ChaCha20_ctr32(
114 | |                 out: *mut u8,
115 | |                 in_: *const u8,
...   |
119 | |             );
120 | |         }
    | |_________- rustdoc does not generate documentation for extern blocks
    |
    = help: use `//` for a plain comment
    = note: `#[warn(unused_doc_comments)]` on by default

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/digest.rs:447:38
    |
447 |     as64: [BigEndian<u64>; 512 / 8 / core::mem::size_of::<BigEndian<u64>>()],
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/lib.rs:72:23
    |
72  | #![deny(missing_docs, unused_qualifications, variant_size_differences)]
    |                       ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
447 -     as64: [BigEndian<u64>; 512 / 8 / core::mem::size_of::<BigEndian<u64>>()],
447 +     as64: [BigEndian<u64>; 512 / 8 / size_of::<BigEndian<u64>>()],
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/digest.rs:448:38
    |
448 |     as32: [BigEndian<u32>; 256 / 8 / core::mem::size_of::<BigEndian<u32>>()],
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
448 -     as32: [BigEndian<u32>; 256 / 8 / core::mem::size_of::<BigEndian<u32>>()],
448 +     as32: [BigEndian<u32>; 256 / 8 / size_of::<BigEndian<u32>>()],
    |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/endian.rs:17:72
   |
17 |         core::slice::from_raw_parts(x.as_ptr() as *const u8, x.len() * core::mem::size_of::<E>())
   |                                                                        ^^^^^^^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
17 -         core::slice::from_raw_parts(x.as_ptr() as *const u8, x.len() * core::mem::size_of::<E>())
17 +         core::slice::from_raw_parts(x.as_ptr() as *const u8, x.len() * size_of::<E>())
   |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/rand.rs:104:34
    |
104 | pub trait RandomlyConstructable: self::sealed::RandomlyConstructable {}
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
104 - pub trait RandomlyConstructable: self::sealed::RandomlyConstructable {}
104 + pub trait RandomlyConstructable: sealed::RandomlyConstructable {}
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/rand.rs:105:46
    |
105 | impl<T> RandomlyConstructable for T where T: self::sealed::RandomlyConstructable {}
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
105 - impl<T> RandomlyConstructable for T where T: self::sealed::RandomlyConstructable {}
105 + impl<T> RandomlyConstructable for T where T: sealed::RandomlyConstructable {}
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/rsa/signing.rs:169:17
    |
169 |                 error::KeyRejected::invalid_encoding(),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
169 -                 error::KeyRejected::invalid_encoding(),
169 +                 KeyRejected::invalid_encoding(),
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/rsa/signing.rs:316:26
    |
316 |             .map_err(|_| error::KeyRejected::invalid_encoding())?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
316 -             .map_err(|_| error::KeyRejected::invalid_encoding())?;
316 +             .map_err(|_| KeyRejected::invalid_encoding())?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/rsa/signing.rs:445:24
    |
445 |             return Err(error::KeyRejected::private_modulus_len_not_multiple_of_512_bits());
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
445 -             return Err(error::KeyRejected::private_modulus_len_not_multiple_of_512_bits());
445 +             return Err(KeyRejected::private_modulus_len_not_multiple_of_512_bits());
    |

[ring 0.17.14] cargo:rustc-link-lib=static=ring_core_0_17_14__test
[ring 0.17.14] cargo:rustc-link-search=native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/montgomery.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/asm/x86_64-mont.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/asm/armv8-mont.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/asm/armv4-mont.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/asm/x86-mont.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/asm/x86_64-mont5.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/internal.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/bn/montgomery_inv.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/aes_nohw.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/ghash-armv4.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/ghash-neon-armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/ghash-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/vpaes-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/vpaes-x86.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/ghashv8-armx.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aes-gcm-avx2-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aesni-x86.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/vpaes-armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aesni-gcm-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/vpaes-armv7.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aesni-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aesv8-armx.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/aesv8-gcm-armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/ghash-x86.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/aes/asm/bsaes-armv7.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256_table.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256_shared.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256-nistz.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/gfp_p384.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/ecp_nistz384.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256-nistz.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/ecp_nistz.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/util.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/asm/p256-armv8-asm.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/asm/p256-x86_64-asm.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/p256-nistz-table.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/ecp_nistz.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/ecp_nistz384.inl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/ec/gfp_p256.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/sha/asm/sha512-armv4.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/sha/asm/sha512-armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/sha/asm/sha512-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/fipsmodule/sha/asm/sha256-armv4.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/cipher/asm/chacha20_poly1305_x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/cipher/asm/chacha20_poly1305_armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/constant_time_test.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/mem.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/cpu_intel.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/curve25519/curve25519.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/curve25519/asm/x25519-asm-arm.S
[ring 0.17.14] cargo:rerun-if-changed=crypto/curve25519/curve25519_64_adx.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/curve25519/curve25519_tables.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/curve25519/internal.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/crypto.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/perlasm/x86gas.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/perlasm/x86asm.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/perlasm/x86_64-xlate.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/perlasm/arm-xlate.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/perlasm/x86nasm.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/chacha/asm/chacha-armv4.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/chacha/asm/chacha-x86.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/chacha/asm/chacha-armv8.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/chacha/asm/chacha-x86_64.pl
[ring 0.17.14] cargo:rerun-if-changed=crypto/poly1305/poly1305_arm_asm.S
[ring 0.17.14] cargo:rerun-if-changed=crypto/poly1305/poly1305_arm.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/poly1305/poly1305.c
[ring 0.17.14] cargo:rerun-if-changed=crypto/internal.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/limbs/limbs.h
[ring 0.17.14] cargo:rerun-if-changed=crypto/limbs/limbs.inl
[ring 0.17.14] cargo:rerun-if-changed=crypto/limbs/limbs.c
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/aes.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/check.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/target.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/mem.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/type_check.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/asm_base.h
[ring 0.17.14] cargo:rerun-if-changed=include/ring-core/base.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/curve25519_64.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/p256_64_msvc.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/curve25519_64_adx.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/asm/fiat_curve25519_adx_square.S
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/asm/fiat_curve25519_adx_mul.S
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/p256_32.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/LICENSE
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/curve25519_64_msvc.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/p256_64.h
[ring 0.17.14] cargo:rerun-if-changed=third_party/fiat/curve25519_32.h
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ring CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='An experiment.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 AND ISC' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ring CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/briansmith/ring' CARGO_PKG_RUST_VERSION=1.66.0 CARGO_PKG_VERSION=0.17.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ring --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.17.14/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="dev_urandom_fallback"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "dev_urandom_fallback", "less-safe-getrandom-custom-or-rdrand", "less-safe-getrandom-espidf", "slow_tests", "std", "test_logging", "unstable-testing-arm-no-hw", "unstable-testing-arm-no-neon", "wasm32_unknown_unknown_js"))' -C metadata=e39508ede6a4672f -C extra-filename=-e999c3608ec36466 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern getrandom=/home/ivo/massive_game_server/target/release/deps/libgetrandom-5933baa136ce4554.rmeta --extern untrusted=/home/ivo/massive_game_server/target/release/deps/libuntrusted-9c8402ccffd23cf8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out -l static=ring_core_0_17_14_ -l static=ring_core_0_17_14__test`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=ring,std CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_RING=1 CARGO_FEATURE_STD=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.23.27 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=23 CARGO_PKG_VERSION_PATCH=27 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/rustls-b6319a2991bc9b46/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/rustls-00497ae92884ab9c/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=quic CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_QUIC=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.21.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/rustls-9ae26234da86988c/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/rustls-c6f93f1b583916ca/build-script-build`
warning: field `cpu_features` is never read
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ring-0.16.20/src/digest.rs:49:5
   |
38 | pub(crate) struct BlockContext {
   |                   ------------ field in this struct
...
49 |     cpu_features: cpu::Features,
   |     ^^^^^^^^^^^^
   |
   = note: `BlockContext` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

   Compiling rustls-webpki v0.101.7
   Compiling sct v0.7.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webpki CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Web PKI X.509 Certificate Verification.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=ISC CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls-webpki CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/webpki' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.101.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=101 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webpki --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std"))' -C metadata=7dc3cf3060b63044 -C extra-filename=-75e13c560e8d3554 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern untrusted=/home/ivo/massive_game_server/target/release/deps/libuntrusted-9c8402ccffd23cf8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sct CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sct-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sct-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Joseph Birr-Pixton <jpixton@gmail.com>' CARGO_PKG_DESCRIPTION='Certificate transparency SCT verification library' CARGO_PKG_HOMEPAGE='https://github.com/rustls/sct.rs' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sct CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/sct.rs' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sct --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sct-0.7.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=58a69b00d910417e -C extra-filename=-7dfb94cdca0c319b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern untrusted=/home/ivo/massive_game_server/target/release/deps/libuntrusted-9c8402ccffd23cf8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7/src/subject_name/name.rs:67:42
   |
66 | impl<'a> From<DnsNameRef<'a>> for SubjectNameRef<'a> {
   |      -- lifetime `'a` declared here
67 |     fn from(dns_name: DnsNameRef<'a>) -> SubjectNameRef {
   |                                          ^^^^^^^^^^^^^^ this elided lifetime gets resolved as `'a`
   |
note: the lint level is defined here
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7/src/lib.rs:29:9
   |
29 | #![deny(warnings, missing_docs, clippy::as_conversions)]
   |         ^^^^^^^^
   = note: `#[warn(elided_named_lifetimes)]` implied by `#[warn(warnings)]`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.101.7/src/subject_name/name.rs:73:41
   |
72 | impl<'a> From<IpAddrRef<'a>> for SubjectNameRef<'a> {
   |      -- lifetime `'a` declared here
73 |     fn from(dns_name: IpAddrRef<'a>) -> SubjectNameRef {
   |                                         ^^^^^^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: `sct` (lib) generated 5 warnings (5 duplicates)
warning: `protobuf` (lib) generated 30 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.21.12 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=12 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/rustls-9ae26234da86988c/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustls --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="quic"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("dangerous_configuration", "default", "log", "logging", "quic", "read_buf", "rustversion", "secret_extraction", "tls12"))' -C metadata=501dd79f14571f04 -C extra-filename=-51fa3669b784e5ff --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern webpki=/home/ivo/massive_game_server/target/release/deps/libwebpki-75e13c560e8d3554.rmeta --extern sct=/home/ivo/massive_game_server/target/release/deps/libsct-7dfb94cdca0c319b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:268:21
    |
268 | #![cfg_attr(not(any(read_buf, bench)), forbid(unstable_features))]
    |                     ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `bench`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:268:31
    |
268 | #![cfg_attr(not(any(read_buf, bench)), forbid(unstable_features))]
    |                               ^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(bench)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(bench)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:307:13
    |
307 | #![cfg_attr(read_buf, feature(read_buf))]
    |             ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:308:13
    |
308 | #![cfg_attr(read_buf, feature(core_io_borrowed_buf))]
    |             ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `bench`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:309:13
    |
309 | #![cfg_attr(bench, feature(test))]
    |             ^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(bench)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(bench)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `bench`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/lib.rs:312:7
    |
312 | #[cfg(bench)]
    |       ^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(bench)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(bench)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/conn.rs:199:11
    |
199 |     #[cfg(read_buf)]
    |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/stream.rs:68:11
   |
68 |     #[cfg(read_buf)]
   |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/stream.rs:196:11
    |
196 |     #[cfg(read_buf)]
    |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `bench`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/tls13/key_schedule.rs:1005:7
     |
1005 | #[cfg(bench)]
     |       ^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(bench)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(bench)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/vecbuf.rs:108:11
    |
108 |     #[cfg(read_buf)]
    |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/server_conn.rs:749:7
    |
749 | #[cfg(read_buf)]
    |       ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/server_conn.rs:360:11
    |
360 |     #[cfg(read_buf)]
    |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `read_buf`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/server_conn.rs:720:11
    |
720 |     #[cfg(read_buf)]
    |           ^^^^^^^^ help: found config with similar value: `feature = "read_buf"`
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(read_buf)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(read_buf)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `ring` (lib) generated 15 warnings (5 duplicates)
warning: use of deprecated module `ring::deprecated_constant_time`: Will be removed. Internal module not intended for external use, with no promises regarding side channels.
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/client/tls13.rs:44:11
   |
44 | use ring::constant_time;
   |           ^^^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: use of deprecated function `ring::deprecated_constant_time::verify_slices_are_equal`: To be removed. Internal function not intended for external use with no promises regarding side channels.
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/client/tls13.rs:851:34
    |
851 |         let fin = constant_time::verify_slices_are_equal(expect_verify_data.as_ref(), &finished.0)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated module `ring::deprecated_constant_time`: Will be removed. Internal module not intended for external use, with no promises regarding side channels.
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/tls13.rs:38:11
   |
38 | use ring::constant_time;
   |           ^^^^^^^^^^^^^

warning: use of deprecated function `ring::deprecated_constant_time::verify_slices_are_equal`: To be removed. Internal function not intended for external use with no promises regarding side channels.
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/tls13.rs:1182:34
     |
1182 |         let fin = constant_time::verify_slices_are_equal(expect_verify_data.as_ref(), &finished.0)
     |                                  ^^^^^^^^^^^^^^^^^^^^^^^

warning: use of deprecated function `ring::deprecated_constant_time::verify_slices_are_equal`: To be removed. Internal function not intended for external use with no promises regarding side channels.
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/server/tls13.rs:127:28
    |
127 |             constant_time::verify_slices_are_equal(real_binder.as_ref(), binder).is_ok()
    |                            ^^^^^^^^^^^^^^^^^^^^^^^

warning: `rustls-webpki` (lib) generated 7 warnings (5 duplicates)
warning: `ring` (lib) generated 5 warnings (5 duplicates)
warning: method `verify_tls12_signature` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.21.12/src/verify.rs:145:8
    |
101 | pub trait ServerCertVerifier: Send + Sync {
    |           ------------------ method in this trait
...
145 |     fn verify_tls12_signature(
    |        ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: `darling_core` (lib) generated 5 warnings (5 duplicates)
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] exit status: 0
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=AR_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] AR_x86_64-unknown-linux-gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=AR_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] AR_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_AR
[zstd-sys 2.0.15+zstd.1.5.7] HOST_AR = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=AR
[zstd-sys 2.0.15+zstd.1.5.7] AR = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=ARFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] ARFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=HOST_ARFLAGS
[zstd-sys 2.0.15+zstd.1.5.7] HOST_ARFLAGS = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=ARFLAGS_x86_64_unknown_linux_gnu
[zstd-sys 2.0.15+zstd.1.5.7] ARFLAGS_x86_64_unknown_linux_gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rerun-if-env-changed=ARFLAGS_x86_64-unknown-linux-gnu
[zstd-sys 2.0.15+zstd.1.5.7] ARFLAGS_x86_64-unknown-linux-gnu = None
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rustc-link-lib=static=zstd
[zstd-sys 2.0.15+zstd.1.5.7] cargo:rustc-link-search=native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out
[zstd-sys 2.0.15+zstd.1.5.7] cargo:root=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out
[zstd-sys 2.0.15+zstd.1.5.7] cargo:include=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/zstd/lib
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zstd_sys CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-sys CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=2.0.15+zstd.1.5.7 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zstd_sys --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --allow=non_upper_case_globals --cfg 'feature="legacy"' --cfg 'feature="std"' --cfg 'feature="zdict_builder"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bindgen", "debug", "default", "experimental", "fat-lto", "legacy", "no_asm", "no_wasm_shim", "non-cargo", "pkg-config", "seekable", "std", "thin", "thin-lto", "zdict_builder", "zstdmt"))' -C metadata=c44bbeda6fd6396a -C extra-filename=-44e6d6916a5fe805 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out -l static=zstd`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=arrays,legacy,std,zdict_builder CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_ARRAYS=1 CARGO_FEATURE_LEGACY=1 CARGO_FEATURE_STD=1 CARGO_FEATURE_ZDICT_BUILDER=1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Safe low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-safe CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=7.2.4 CARGO_PKG_VERSION_MAJOR=7 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' DEBUG=false DEP_ZSTD_INCLUDE=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-sys-2.0.15+zstd.1.5.7/zstd/lib DEP_ZSTD_ROOT=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/zstd-safe-1167ae4d23a4a633/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/zstd-safe-049845a2e9942d54/build-script-build`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zstd_safe CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Safe low-level bindings for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd-safe CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=7.2.4 CARGO_PKG_VERSION_MAJOR=7 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/zstd-safe-1167ae4d23a4a633/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zstd_safe --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-safe-7.2.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --allow=non_upper_case_globals --cfg 'feature="arrays"' --cfg 'feature="legacy"' --cfg 'feature="std"' --cfg 'feature="zdict_builder"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arrays", "bindgen", "debug", "default", "doc-cfg", "experimental", "fat-lto", "legacy", "no_asm", "pkg-config", "seekable", "std", "thin", "thin-lto", "zdict_builder", "zstdmt"))' -C metadata=6e365e76c36fc9e6 -C extra-filename=-a1d4eddfacd5c914 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zstd_sys=/home/ivo/massive_game_server/target/release/deps/libzstd_sys-44e6d6916a5fe805.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out`
warning: `zstd-sys` (lib) generated 5 warnings (5 duplicates)
   Compiling zstd v0.13.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zstd CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-0.13.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-0.13.3/Cargo.toml CARGO_PKG_AUTHORS='Alexandre Bury <alexandre.bury@gmail.com>' CARGO_PKG_DESCRIPTION='Binding for the zstd compression library.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zstd CARGO_PKG_README=Readme.md CARGO_PKG_REPOSITORY='https://github.com/gyscos/zstd-rs' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=0.13.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zstd --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zstd-0.13.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="arrays"' --cfg 'feature="default"' --cfg 'feature="legacy"' --cfg 'feature="zdict_builder"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arrays", "bindgen", "debug", "default", "doc-cfg", "experimental", "fat-lto", "legacy", "no_asm", "pkg-config", "thin", "thin-lto", "wasm", "zdict_builder", "zstdmt"))' -C metadata=1311f8c1256fd53a -C extra-filename=-4de81615094d21d3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zstd_safe=/home/ivo/massive_game_server/target/release/deps/libzstd_safe-a1d4eddfacd5c914.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out`
warning: `zstd-safe` (lib) generated 5 warnings (5 duplicates)
warning: `zstd` (lib) generated 5 warnings (5 duplicates)
warning: `rustls` (lib) generated 25 warnings (5 duplicates)
warning: `syn` (lib) generated 1856 warnings (275 duplicates)
   Compiling asn1-rs-impl v0.1.0
   Compiling asn1-rs-derive v0.4.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs_impl CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.1.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Implementation details for the `asn1-rs` crate' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs-impl CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs_impl --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=866c08891b5867fa -C extra-filename=-adda378060190b2a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-8f2f288754ae8cd8.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.4.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.4.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Derive macros for the `asn1-rs` crate' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs-derive CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.4.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs_derive --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=8512adcd57f56872 -C extra-filename=-c505324628838407 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-8f2f288754ae8cd8.rlib --extern synstructure=/home/ivo/massive_game_server/target/release/deps/libsynstructure-d3c93528f9770f52.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `syn` (lib) generated 5 warnings (5 duplicates)
   Compiling zeroize_derive v1.4.2
   Compiling displaydoc v0.2.5
   Compiling zerofrom-derive v0.1.6
   Compiling yoke-derive v0.8.0
   Compiling zerovec-derive v0.11.1
   Compiling thiserror-impl v1.0.69
   Compiling tokio-macros v2.5.0
   Compiling serde_derive v1.0.219
   Compiling async-trait v0.1.88
   Compiling futures-macro v0.3.31
   Compiling tracing-attributes v0.1.28
   Compiling asn1-rs-derive v0.5.1
   Compiling asn1-rs-impl v0.2.0
   Compiling openssl-macros v0.1.1
   Compiling curve25519-dalek-derive v0.1.1
   Compiling darling_macro v0.20.11
   Compiling pin-project-internal v1.1.10
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zeroize_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/Cargo.toml CARGO_PKG_AUTHORS='The RustCrypto Project Developers' CARGO_PKG_DESCRIPTION='Custom derive support for zeroize' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zeroize_derive CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils/tree/master/zeroize/derive' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.4.2 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zeroize_derive --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c926b124ddddd7a3 -C extra-filename=-bd08ebbc603c1378 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=displaydoc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/displaydoc-0.2.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/displaydoc-0.2.5/Cargo.toml CARGO_PKG_AUTHORS='Jane Lusby <jlusby@yaah.dev>' CARGO_PKG_DESCRIPTION='A derive macro for implementing the display Trait via a doc comment and string interpolation
' CARGO_PKG_HOMEPAGE='https://github.com/yaahc/displaydoc' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=displaydoc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/yaahc/displaydoc' CARGO_PKG_RUST_VERSION=1.56.0 CARGO_PKG_VERSION=0.2.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name displaydoc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/displaydoc-0.2.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "std"))' -C metadata=f2675e30f1af1273 -C extra-filename=-44554dbcf91ac445 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerofrom_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-derive-0.1.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-derive-0.1.6/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Custom derive for the zerofrom crate' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerofrom-derive CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerofrom_derive --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-derive-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=e656fabfa079739b -C extra-filename=-ff77953f0a75f884 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern synstructure=/home/ivo/massive_game_server/target/release/deps/libsynstructure-0c7bb2930f813343.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=thiserror_impl CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Implementation detail of the `thiserror` crate' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=thiserror-impl CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/dtolnay/thiserror' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=1.0.69 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=69 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name thiserror_impl --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-impl-1.0.69/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=28ec55ab6d34e419 -C extra-filename=-3d6c498fc48a51d6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=yoke_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-derive-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-derive-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Custom derive for the yoke crate' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=yoke-derive CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name yoke_derive --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-derive-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=11bfdc9f88fe4056 -C extra-filename=-4d01b5a2132b0455 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern synstructure=/home/ivo/massive_game_server/target/release/deps/libsynstructure-0c7bb2930f813343.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerovec_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-derive-0.11.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-derive-0.11.1/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Custom derive for the zerovec crate' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerovec-derive CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.11.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerovec_derive --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-derive-0.11.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=f5b4b23476056f39 -C extra-filename=-1762bb0d58ab5ad5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tokio_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.5.0/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Tokio'\''s proc macros.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tokio-macros CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tokio' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=2.5.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tokio_macros --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-macros-2.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=78b52f7423c52bb3 -C extra-filename=-9ad331e5117404fa --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Macros 1.1 implementation of #[derive(Serialize, Deserialize)]' CARGO_PKG_HOMEPAGE='https://serde.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_derive CARGO_PKG_README=crates-io.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/serde' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=1.0.219 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=219 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_derive --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_derive-1.0.219/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "deserialize_in_place"))' -C metadata=fc84c6f2c203d09a -C extra-filename=-025b8efea33993b2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=async_trait CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='Type erasure for async trait methods' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=async-trait CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/async-trait' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.1.88 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=88 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name async_trait --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/async-trait-0.1.88/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=1d769168e976c377 -C extra-filename=-2f1052b0b3e50a76 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_macro CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-macro-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-macro-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='The futures-rs procedural macro implementations.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-macro CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_macro --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-macro-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=6481711806177a75 -C extra-filename=-e863e6eb490907e6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing_attributes CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-attributes-0.1.28 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-attributes-0.1.28/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>:Eliza Weisman <eliza@buoyant.io>:David Barsky <dbarsky@amazon.com>' CARGO_PKG_DESCRIPTION='Procedural macro attributes for automatically instrumenting functions.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing-attributes CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.1.28 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=28 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing_attributes --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-attributes-0.1.28/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(flaky_tests)' --check-cfg 'cfg(tracing_unstable)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("async-await"))' -C metadata=c8f18043fe7a23ba -C extra-filename=-707ca32e046297ff --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.5.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.5.1/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Derive macros for the `asn1-rs` crate' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs-derive CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.5.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs_derive --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-derive-0.5.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=5197e8c8210773a1 -C extra-filename=-3a7b403e96fe1a3f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern synstructure=/home/ivo/massive_game_server/target/release/deps/libsynstructure-0c7bb2930f813343.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs_impl CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Implementation details for the `asn1-rs` crate' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs-impl CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs_impl --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-impl-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=de122a978a06b9cc -C extra-filename=-6906cabc9558c5e0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=openssl_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-macros-0.1.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-macros-0.1.1/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Internal macros used by the openssl crate.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl-macros CARGO_PKG_README='' CARGO_PKG_REPOSITORY='' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name openssl_macros --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-macros-0.1.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=05ca495805427898 -C extra-filename=-3bc5096e7d7acd86 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=curve25519_dalek_derive CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-derive-0.1.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-derive-0.1.1/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='curve25519-dalek Derives' CARGO_PKG_HOMEPAGE='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=curve25519-dalek-derive CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name curve25519_dalek_derive --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-derive-0.1.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=23b662b22511176b -C extra-filename=-9c527247ba08deda --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=darling_macro CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_macro-0.20.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_macro-0.20.11/Cargo.toml CARGO_PKG_AUTHORS='Ted Driggs <ted.driggs@outlook.com>' CARGO_PKG_DESCRIPTION='Internal support for a proc-macro library for reading attributes into structs when
implementing custom derives. Use https://crates.io/crates/darling in your code.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=darling_macro CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/TedDriggs/darling' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.20.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=20 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name darling_macro --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling_macro-0.20.11/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=0608c3989344ccb4 -C extra-filename=-2ac775ae2dd1cb09 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern darling_core=/home/ivo/massive_game_server/target/release/deps/libdarling_core-cdf6c195821cafb8.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pin_project_internal CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-internal-1.1.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-internal-1.1.10/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Implementation detail of the `pin-project` crate.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pin-project-internal CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/taiki-e/pin-project' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.1.10 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pin_project_internal --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-internal-1.1.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 '--warn=clippy::unused_trait_names' --warn=unreachable_pub --warn=unnameable_types --warn=unexpected_cfgs '--warn=clippy::undocumented_unsafe_blocks' '--warn=clippy::transmute_undefined_repr' '--warn=clippy::trailing_empty_array' --warn=single_use_lifetimes --warn=rust_2018_idioms '--warn=clippy::pedantic' --warn=non_ascii_idents '--warn=clippy::inline_asm_x86_att_syntax' --warn=improper_ctypes_definitions --warn=improper_ctypes --warn=deprecated_safe '--warn=clippy::default_union_representation' '--warn=clippy::as_underscore' '--warn=clippy::as_ptr_cast_mut' '--warn=clippy::all' '--allow=clippy::unreadable_literal' '--allow=clippy::type_complexity' '--allow=clippy::too_many_lines' '--allow=clippy::too_many_arguments' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::single_match_else' '--allow=clippy::single_match' '--allow=clippy::similar_names' '--allow=clippy::range_plus_one' '--allow=clippy::nonminimal_bool' '--allow=clippy::naive_bytecount' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_errors_doc' '--allow=clippy::manual_range_contains' '--allow=clippy::manual_assert' '--allow=clippy::lint_groups_priority' '--allow=clippy::incompatible_msrv' '--allow=clippy::float_cmp' '--allow=clippy::doc_markdown' '--allow=clippy::declare_interior_mutable_const' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=e50066ac027b9263 -C extra-filename=-c59aba606748085e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs:179:13
    |
179 |             syn::Data::Enum(enum_) => {
    |             ^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs:5:42
    |
5   | #![warn(rust_2018_idioms, trivial_casts, unused_qualifications)]
    |                                          ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
179 -             syn::Data::Enum(enum_) => {
179 +             Data::Enum(enum_) => {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs:194:13
    |
194 |             syn::Data::Struct(struct_) => {
    |             ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
194 -             syn::Data::Struct(struct_) => {
194 +             Data::Struct(struct_) => {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize_derive-1.4.2/src/lib.rs:204:13
    |
204 |             syn::Data::Union(union_) => panic!("Unsupported untagged union {:?}", union_),
    |             ^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
204 -             syn::Data::Union(union_) => panic!("Unsupported untagged union {:?}", union_),
204 +             Data::Union(union_) => panic!("Unsupported untagged union {:?}", union_),
    |

warning: `asn1-rs-impl` (lib) generated 5 warnings (5 duplicates)
warning: `asn1-rs-impl` (lib) generated 5 warnings (5 duplicates)
warning: `darling_macro` (lib) generated 5 warnings (5 duplicates)
   Compiling darling v0.20.11
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=darling CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling-0.20.11 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling-0.20.11/Cargo.toml CARGO_PKG_AUTHORS='Ted Driggs <ted.driggs@outlook.com>' CARGO_PKG_DESCRIPTION='A proc-macro library for reading attributes into structs when
implementing custom derives.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=darling CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TedDriggs/darling' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.20.11 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=20 CARGO_PKG_VERSION_PATCH=11 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name darling --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/darling-0.20.11/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(compiletests)' --cfg 'feature="default"' --cfg 'feature="suggestions"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "diagnostics", "suggestions"))' -C metadata=70dd6f3292963cbe -C extra-filename=-91e8de9a5df6b437 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern darling_core=/home/ivo/massive_game_server/target/release/deps/libdarling_core-cdf6c195821cafb8.rmeta --extern darling_macro=/home/ivo/massive_game_server/target/release/deps/libdarling_macro-2ac775ae2dd1cb09.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `openssl-macros` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=openssl CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='OpenSSL bindings' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=openssl CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-openssl' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.10.73 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=73 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/openssl-4fd860b0c4a6dd01/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name openssl --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/openssl-0.10.73/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc", "bindgen", "default", "unstable_boringssl", "v101", "v102", "v110", "v111", "vendored"))' -C metadata=20abf452b7f07335 -C extra-filename=-06a480cd544ceb8c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-e03d6ba3add70dfb.rmeta --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern foreign_types=/home/ivo/massive_game_server/target/release/deps/libforeign_types-59ff5f5b07df7c0e.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern openssl_macros=/home/ivo/massive_game_server/target/release/deps/libopenssl_macros-3bc5096e7d7acd86.so --extern ffi=/home/ivo/massive_game_server/target/release/deps/libopenssl_sys-3045693d67023084.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg 'osslconf="OPENSSL_NO_IDEA"' --cfg 'osslconf="OPENSSL_NO_SSL3_METHOD"' --cfg ossl101 --cfg ossl102 --cfg ossl110 --cfg ossl110g --cfg ossl110h --cfg ossl111 --cfg ossl111d --cfg ossl300 --check-cfg 'cfg(osslconf, values("OPENSSL_NO_OCB", "OPENSSL_NO_SM4", "OPENSSL_NO_SEED", "OPENSSL_NO_CHACHA", "OPENSSL_NO_CAST", "OPENSSL_NO_IDEA", "OPENSSL_NO_CAMELLIA", "OPENSSL_NO_RC4", "OPENSSL_NO_BF", "OPENSSL_NO_PSK", "OPENSSL_NO_DEPRECATED_3_0", "OPENSSL_NO_SCRYPT", "OPENSSL_NO_SM3", "OPENSSL_NO_RMD160", "OPENSSL_NO_EC2M", "OPENSSL_NO_OCSP", "OPENSSL_NO_CMS", "OPENSSL_NO_EC", "OPENSSL_NO_ARGON2", "OPENSSL_NO_RC2"))' --check-cfg 'cfg(libressl)' --check-cfg 'cfg(boringssl)' --check-cfg 'cfg(awslc)' --check-cfg 'cfg(libressl250)' --check-cfg 'cfg(libressl251)' --check-cfg 'cfg(libressl261)' --check-cfg 'cfg(libressl270)' --check-cfg 'cfg(libressl271)' --check-cfg 'cfg(libressl273)' --check-cfg 'cfg(libressl280)' --check-cfg 'cfg(libressl291)' --check-cfg 'cfg(libressl310)' --check-cfg 'cfg(libressl321)' --check-cfg 'cfg(libressl332)' --check-cfg 'cfg(libressl340)' --check-cfg 'cfg(libressl350)' --check-cfg 'cfg(libressl360)' --check-cfg 'cfg(libressl361)' --check-cfg 'cfg(libressl370)' --check-cfg 'cfg(libressl380)' --check-cfg 'cfg(libressl382)' --check-cfg 'cfg(libressl390)' --check-cfg 'cfg(libressl400)' --check-cfg 'cfg(libressl410)' --check-cfg 'cfg(ossl101)' --check-cfg 'cfg(ossl102)' --check-cfg 'cfg(ossl110)' --check-cfg 'cfg(ossl110g)' --check-cfg 'cfg(ossl110h)' --check-cfg 'cfg(ossl111)' --check-cfg 'cfg(ossl111d)' --check-cfg 'cfg(ossl300)' --check-cfg 'cfg(ossl310)' --check-cfg 'cfg(ossl320)' --check-cfg 'cfg(ossl330)'`
warning: `darling` (lib) generated 5 warnings (5 duplicates)
   Compiling serde_with_macros v3.12.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_with_macros CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with_macros-3.12.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with_macros-3.12.0/Cargo.toml CARGO_PKG_AUTHORS='Jonas Bushart' CARGO_PKG_DESCRIPTION='proc-macro library for serde_with' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_with_macros CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jonasbb/serde_with/' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=3.12.0 CARGO_PKG_VERSION_MAJOR=3 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_with_macros --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with_macros-3.12.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type proc-macro --emit=dep-info,link -C prefer-dynamic -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --warn=rust_2018_idioms --warn=variant_size_differences --warn=unused_import_braces --warn=unused_extern_crates --warn=unexpected_cfgs --warn=trivial_numeric_casts --warn=trivial_casts '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::redundant_closure_for_method_calls' --warn=missing_docs '--warn=rustdoc::missing_crate_level_docs' '--allow=clippy::manual-unwrap-or-default' '--allow=clippy::explicit_auto_deref' '--warn=clippy::doc_markdown' '--warn=clippy::default_trait_access' '--warn=clippy::cloned_instead_of_copied' --check-cfg 'cfg(tarpaulin)' --check-cfg 'cfg(tarpaulin_include)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("schemars_0_8"))' -C metadata=8c2a42c5fa6a5cbe -C extra-filename=-4128cdef7ae517cc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern darling=/home/ivo/massive_game_server/target/release/deps/libdarling-91e8de9a5df6b437.rlib --extern proc_macro2=/home/ivo/massive_game_server/target/release/deps/libproc_macro2-c5da71e4551bf919.rlib --extern quote=/home/ivo/massive_game_server/target/release/deps/libquote-7692427ea321e115.rlib --extern syn=/home/ivo/massive_game_server/target/release/deps/libsyn-a0df0d8428bd1779.rlib --extern proc_macro --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `asn1-rs-derive` (lib) generated 5 warnings (5 duplicates)
warning: `curve25519-dalek-derive` (lib) generated 5 warnings (5 duplicates)
warning: `tokio-macros` (lib) generated 5 warnings (5 duplicates)
   Compiling tokio v1.45.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tokio CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.1/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='An event-driven, non-blocking I/O platform for writing asynchronous I/O
backed applications.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tokio CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tokio' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=1.45.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=45 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tokio --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-1.45.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(fuzzing)' --check-cfg 'cfg(loom)' --check-cfg 'cfg(mio_unsupported_force_poll_poll)' --check-cfg 'cfg(tokio_allow_from_blocking_fd)' --check-cfg 'cfg(tokio_internal_mt_counters)' --check-cfg 'cfg(tokio_no_parking_lot)' --check-cfg 'cfg(tokio_no_tuning_tests)' --check-cfg 'cfg(tokio_taskdump)' --check-cfg 'cfg(tokio_unstable)' --cfg 'feature="bytes"' --cfg 'feature="default"' --cfg 'feature="fs"' --cfg 'feature="full"' --cfg 'feature="io-std"' --cfg 'feature="io-util"' --cfg 'feature="libc"' --cfg 'feature="macros"' --cfg 'feature="mio"' --cfg 'feature="net"' --cfg 'feature="parking_lot"' --cfg 'feature="process"' --cfg 'feature="rt"' --cfg 'feature="rt-multi-thread"' --cfg 'feature="signal"' --cfg 'feature="signal-hook-registry"' --cfg 'feature="socket2"' --cfg 'feature="sync"' --cfg 'feature="time"' --cfg 'feature="tokio-macros"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bytes", "default", "fs", "full", "io-std", "io-util", "libc", "macros", "mio", "net", "parking_lot", "process", "rt", "rt-multi-thread", "signal", "signal-hook-registry", "socket2", "sync", "test-util", "time", "tokio-macros", "tracing", "windows-sys"))' -C metadata=573eb209800ab9b4 -C extra-filename=-6cdaf2866e6d85a3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern mio=/home/ivo/massive_game_server/target/release/deps/libmio-f9d8c3cbe426bebc.rmeta --extern parking_lot=/home/ivo/massive_game_server/target/release/deps/libparking_lot-9dabc6c29380194b.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern signal_hook_registry=/home/ivo/massive_game_server/target/release/deps/libsignal_hook_registry-f17024dfbfb75e6f.rmeta --extern socket2=/home/ivo/massive_game_server/target/release/deps/libsocket2-4f205d40749fb3ef.rmeta --extern tokio_macros=/home/ivo/massive_game_server/target/release/deps/libtokio_macros-9ad331e5117404fa.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `displaydoc` (lib) generated 5 warnings (5 duplicates)
warning: `asn1-rs-derive` (lib) generated 5 warnings (5 duplicates)
warning: `zeroize_derive` (lib) generated 8 warnings (5 duplicates)
   Compiling zeroize v1.8.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zeroize CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/Cargo.toml CARGO_PKG_AUTHORS='The RustCrypto Project Developers' CARGO_PKG_DESCRIPTION='Securely clear secrets from memory with a simple trait built on
stable Rust primitives which guarantee memory is zeroed using an
operation will not be '\''optimized away'\'' by the compiler.
Uses a portable pure Rust implementation that works everywhere,
even WASM'\!'
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zeroize CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils/tree/master/zeroize' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=1.8.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zeroize --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="zeroize_derive"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aarch64", "alloc", "default", "derive", "serde", "simd", "std", "zeroize_derive"))' -C metadata=b3b487521d372343 -C extra-filename=-666037ec4c16c843 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zeroize_derive=/home/ivo/massive_game_server/target/release/deps/libzeroize_derive-bd08ebbc603c1378.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs:415:63
    |
415 |             volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());
    |                                                               ^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs:7:41
    |
7   | #![warn(missing_docs, rust_2018_idioms, unused_qualifications)]
    |                                         ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
415 -             volatile_set((self as *mut Self).cast::<u8>(), 0, mem::size_of::<Self>());
415 +             volatile_set((self as *mut Self).cast::<u8>(), 0, size_of::<Self>());
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs:460:43
    |
460 |         let size = self.len().checked_mul(mem::size_of::<Z>()).unwrap();
    |                                           ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
460 -         let size = self.len().checked_mul(mem::size_of::<Z>()).unwrap();
460 +         let size = self.len().checked_mul(size_of::<Z>()).unwrap();
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zeroize-1.8.1/src/lib.rs:840:16
    |
840 |     let size = mem::size_of::<F>();
    |                ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
840 -     let size = mem::size_of::<F>();
840 +     let size = size_of::<F>();
    |

   Compiling der v0.7.10
   Compiling rustls-pki-types v1.12.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=generic_array CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/Cargo.toml CARGO_PKG_AUTHORS='Bartłomiej Kamiński <fizyk20@gmail.com>:Aaron Trent <novacrazy@gmail.com>' CARGO_PKG_DESCRIPTION='Generic types implementing functionality of arrays' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=generic-array CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/fizyk20/generic-array.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.14.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=14 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/generic-array-137e5fbc1d774a8f/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name generic_array --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="more_lengths"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("more_lengths", "serde", "zeroize"))' -C metadata=db48332ed4507bad -C extra-filename=-be0d83be17096f2a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern typenum=/home/ivo/massive_game_server/target/release/deps/libtypenum-ec08e63d6ae28cdf.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg relaxed_coherence`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustls_pki_types CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pki-types-1.12.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pki-types-1.12.0/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Shared types for the rustls PKI ecosystem' CARGO_PKG_HOMEPAGE='https://github.com/rustls/pki-types' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls-pki-types CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/pki-types' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=1.12.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustls_pki_types --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-pki-types-1.12.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "std", "web", "web-time"))' -C metadata=2dabb30857e8c75e -C extra-filename=-9904dc4fb64ea0b1 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=der CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules
(DER) for Abstract Syntax Notation One (ASN.1) as described in ITU X.690 with
full support for heapless no_std targets
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=der CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/der' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.7.10 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name der --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="oid"' --cfg 'feature="pem"' --cfg 'feature="std"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arbitrary", "bytes", "derive", "flagset", "oid", "pem", "real", "std", "time", "zeroize"))' -C metadata=1c3484f43476d55d -C extra-filename=-c2f719c2a0cced22 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern const_oid=/home/ivo/massive_game_server/target/release/deps/libconst_oid-a09718e5d2d70093.rmeta --extern pem_rfc7468=/home/ivo/massive_game_server/target/release/deps/libpem_rfc7468-14195eae82e6a7d2.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=curve25519_dalek CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/Cargo.toml CARGO_PKG_AUTHORS='Isis Lovecruft <isis@patternsinthevoid.net>:Henry de Valence <hdevalence@hdevalence.ca>' CARGO_PKG_DESCRIPTION='A pure-Rust implementation of group operations on ristretto255 and Curve25519' CARGO_PKG_HOMEPAGE='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_LICENSE=BSD-3-Clause CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=curve25519-dalek CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek' CARGO_PKG_RUST_VERSION=1.60.0 CARGO_PKG_VERSION=4.1.3 CARGO_PKG_VERSION_MAJOR=4 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/curve25519-dalek-6b2b0510b9d6b0b0/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name curve25519_dalek --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/curve25519-dalek-4.1.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="precomputed-tables"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "digest", "ff", "group", "group-bits", "legacy_compatibility", "precomputed-tables", "rand_core", "serde", "zeroize"))' -C metadata=c7f2c26232e339c6 -C extra-filename=-741cc2b0935cbaf5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern cpufeatures=/home/ivo/massive_game_server/target/release/deps/libcpufeatures-f8f5bc6ced230a73.rmeta --extern curve25519_dalek_derive=/home/ivo/massive_game_server/target/release/deps/libcurve25519_dalek_derive-9c527247ba08deda.so --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg 'curve25519_dalek_bits="64"' --cfg 'curve25519_dalek_backend="simd"'`
warning: `zeroize` (lib) generated 8 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `relaxed_coherence`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs:136:19
    |
136 |               #[cfg(relaxed_coherence)]
    |                     ^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(relaxed_coherence)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(relaxed_coherence)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `relaxed_coherence`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs:158:23
    |
158 |               #[cfg(not(relaxed_coherence))]
    |                         ^^^^^^^^^^^^^^^^^
...
183 | / impl_from! {
184 | |     1  => ::typenum::U1,
185 | |     2  => ::typenum::U2,
186 | |     3  => ::typenum::U3,
...   |
215 | |     32 => ::typenum::U32
216 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(relaxed_coherence)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(relaxed_coherence)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `relaxed_coherence`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs:136:19
    |
136 |               #[cfg(relaxed_coherence)]
    |                     ^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(relaxed_coherence)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(relaxed_coherence)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition name: `relaxed_coherence`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/generic-array-0.14.7/src/impls.rs:158:23
    |
158 |               #[cfg(not(relaxed_coherence))]
    |                         ^^^^^^^^^^^^^^^^^
...
219 | / impl_from! {
220 | |     33 => ::typenum::U33,
221 | |     34 => ::typenum::U34,
222 | |     35 => ::typenum::U35,
...   |
268 | |     1024 => ::typenum::U1024
269 | | }
    | |_- in this macro invocation
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(relaxed_coherence)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(relaxed_coherence)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: this warning originates in the macro `impl_from` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unexpected `cfg` condition value: `bigint`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10/src/lib.rs:373:7
    |
373 | #[cfg(feature = "bigint")]
    |       ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `alloc`, `arbitrary`, `bytes`, `derive`, `flagset`, `oid`, `pem`, `real`, `std`, `time`, and `zeroize`
    = help: consider adding `bigint` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10/src/asn1/integer.rs:25:19
   |
25 |     debug_assert!(mem::size_of::<T>() <= MAX_INT_SIZE);
   |                   ^^^^^^^^^^^^^^^^^
   |
note: the lint level is defined here
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-0.7.10/src/lib.rs:25:5
   |
25 |     unused_qualifications
   |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
   |
25 -     debug_assert!(mem::size_of::<T>() <= MAX_INT_SIZE);
25 +     debug_assert!(size_of::<T>() <= MAX_INT_SIZE);
   |

   Compiling rustls-webpki v0.103.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webpki CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.103.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.103.3/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Web PKI X.509 Certificate Verification.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=ISC CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls-webpki CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/webpki' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.103.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=103 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webpki --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-webpki-0.103.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="ring"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "aws-lc-rs", "aws-lc-rs-fips", "default", "ring", "std"))' -C metadata=feb68b7d03a9b122 -C extra-filename=-c667a1c4eb0e8787 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern pki_types=/home/ivo/massive_game_server/target/release/deps/librustls_pki_types-9904dc4fb64ea0b1.rmeta --extern untrusted=/home/ivo/massive_game_server/target/release/deps/libuntrusted-9c8402ccffd23cf8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: `futures-macro` (lib) generated 5 warnings (5 duplicates)
   Compiling futures-util v0.3.31
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_util CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Common utilities and extension traits for the futures-rs library.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-util CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_util --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-util-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="async-await"' --cfg 'feature="async-await-macro"' --cfg 'feature="channel"' --cfg 'feature="default"' --cfg 'feature="futures-channel"' --cfg 'feature="futures-io"' --cfg 'feature="futures-macro"' --cfg 'feature="futures-sink"' --cfg 'feature="io"' --cfg 'feature="memchr"' --cfg 'feature="sink"' --cfg 'feature="slab"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "async-await", "async-await-macro", "bilock", "cfg-target-has-atomic", "channel", "compat", "default", "futures-channel", "futures-io", "futures-macro", "futures-sink", "futures_01", "io", "io-compat", "memchr", "portable-atomic", "sink", "slab", "std", "tokio-io", "unstable", "write-all-vectored"))' -C metadata=e20c19886194e09c -C extra-filename=-1f569e2a6d812a59 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern futures_channel=/home/ivo/massive_game_server/target/release/deps/libfutures_channel-f9d05d7240e9556c.rmeta --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_io=/home/ivo/massive_game_server/target/release/deps/libfutures_io-63be57cdc0e7ba7b.rmeta --extern futures_macro=/home/ivo/massive_game_server/target/release/deps/libfutures_macro-e863e6eb490907e6.so --extern futures_sink=/home/ivo/massive_game_server/target/release/deps/libfutures_sink-f80d8fdd34ee7a48.rmeta --extern futures_task=/home/ivo/massive_game_server/target/release/deps/libfutures_task-81c5a2831674e59e.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern pin_utils=/home/ivo/massive_game_server/target/release/deps/libpin_utils-b3851b467213096d.rmeta --extern slab=/home/ivo/massive_game_server/target/release/deps/libslab-62cea3ce9179a499.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling crypto-common v0.1.6
   Compiling block-buffer v0.10.4
   Compiling block-padding v0.3.3
   Compiling crypto-bigint v0.5.5
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=block_padding CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-padding-0.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-padding-0.3.3/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Padding and unpadding of messages divided into blocks.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=block-padding CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name block_padding --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-padding-0.3.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("std"))' -C metadata=c66216093af6a6c8 -C extra-filename=-fcdc69be6fe29a54 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=block_buffer CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Buffer type for block processing of data' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=block-buffer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name block_buffer --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/block-buffer-0.10.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=5800471ed5fe8615 -C extra-filename=-ec517cb0e426c85b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crypto_common CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Common cryptographic traits' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crypto-common CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crypto_common --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-common-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="getrandom"' --cfg 'feature="rand_core"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("getrandom", "rand_core", "std"))' -C metadata=c0799adb7925cef3 -C extra-filename=-36348a5779ed142a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern typenum=/home/ivo/massive_game_server/target/release/deps/libtypenum-ec08e63d6ae28cdf.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=crypto_bigint CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-bigint-0.5.5 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-bigint-0.5.5/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of a big integer library which has been designed from
the ground-up for use in cryptographic applications. Provides constant-time,
no_std-friendly implementations of modern formulas using const generics.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=crypto-bigint CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/crypto-bigint' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.5.5 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=5 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name crypto_bigint --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-bigint-0.5.5/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="generic-array"' --cfg 'feature="rand_core"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "der", "extra-sizes", "generic-array", "rand", "rand_core", "rlp", "serde", "zeroize"))' -C metadata=fc85685c330fdfed -C extra-filename=-f3a20c4bad6229c9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `generic-array` (lib) generated 9 warnings (5 duplicates)
warning: `rustls-pki-types` (lib) generated 5 warnings (5 duplicates)
   Compiling inout v0.1.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=inout CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=inout CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/utils' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.1.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name inout --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/inout-0.1.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="block-padding"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("block-padding", "std"))' -C metadata=311d1707c4426059 -C extra-filename=-82553c9e59cd1faa --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern block_padding=/home/ivo/massive_game_server/target/release/deps/libblock_padding-fcdc69be6fe29a54.rmeta --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling universal-hash v0.5.1
   Compiling aead v0.5.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=universal_hash CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/universal-hash-0.5.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/universal-hash-0.5.1/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits which describe the functionality of universal hash functions (UHFs)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=universal-hash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.5.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name universal_hash --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/universal-hash-0.5.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("std"))' -C metadata=21e05a4f902c8468 -C extra-filename=-1df4654bf47044a4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crypto_common=/home/ivo/massive_game_server/target/release/deps/libcrypto_common-36348a5779ed142a.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=aead CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.5.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.5.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits for Authenticated Encryption with Associated Data (AEAD) algorithms,
such as AES-GCM as ChaCha20Poly1305, which provide a high-level API
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=aead CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.5.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name aead --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aead-0.5.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="getrandom"' --cfg 'feature="rand_core"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arrayvec", "blobby", "bytes", "default", "dev", "getrandom", "heapless", "rand_core", "std", "stream"))' -C metadata=1fc5cd683638c489 -C extra-filename=-279490dc39424b0c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crypto_common=/home/ivo/massive_game_server/target/release/deps/libcrypto_common-36348a5779ed142a.rmeta --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling digest v0.10.7
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=digest CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits for cryptographic hash functions and message authentication codes' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=digest CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name digest --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/digest-0.10.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="block-buffer"' --cfg 'feature="const-oid"' --cfg 'feature="core-api"' --cfg 'feature="default"' --cfg 'feature="mac"' --cfg 'feature="oid"' --cfg 'feature="std"' --cfg 'feature="subtle"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "blobby", "block-buffer", "const-oid", "core-api", "default", "dev", "mac", "oid", "rand_core", "std", "subtle"))' -C metadata=ca55f9b49eb9d7dc -C extra-filename=-e4f56bbf4d6a8824 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern block_buffer=/home/ivo/massive_game_server/target/release/deps/libblock_buffer-ec517cb0e426c85b.rmeta --extern const_oid=/home/ivo/massive_game_server/target/release/deps/libconst_oid-a09718e5d2d70093.rmeta --extern crypto_common=/home/ivo/massive_game_server/target/release/deps/libcrypto_common-36348a5779ed142a.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `block-padding` (lib) generated 5 warnings (5 duplicates)
warning: `crypto-common` (lib) generated 5 warnings (5 duplicates)
warning: `block-buffer` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `sidefuzz`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-bigint-0.5.5/src/lib.rs:212:7
    |
212 | #[cfg(sidefuzz)]
    |       ^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(sidefuzz)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(sidefuzz)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unused import: `macros::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/crypto-bigint-0.5.5/src/uint/modular/constant_mod.rs:36:9
   |
36 | pub use macros::*;
   |         ^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

   Compiling cipher v0.4.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cipher CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits for describing block ciphers and stream ciphers' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cipher CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.4.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name cipher --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cipher-0.4.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="block-padding"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "blobby", "block-padding", "dev", "rand_core", "std", "zeroize"))' -C metadata=4cc70e9800db65a8 -C extra-filename=-71a52443923126e1 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern crypto_common=/home/ivo/massive_game_server/target/release/deps/libcrypto_common-36348a5779ed142a.rmeta --extern inout=/home/ivo/massive_game_server/target/release/deps/libinout-82553c9e59cd1faa.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling polyval v0.6.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=polyval CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing
a Message Authentication Code (MAC)
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=polyval CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/universal-hashes' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.6.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name polyval --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("std", "zeroize"))' -C metadata=d9e3b807f4ed9d65 -C extra-filename=-4de9552107c460af --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern cpufeatures=/home/ivo/massive_game_server/target/release/deps/libcpufeatures-f8f5bc6ced230a73.rmeta --extern opaque_debug=/home/ivo/massive_game_server/target/release/deps/libopaque_debug-b2225bd4fd1d92ff.rmeta --extern universal_hash=/home/ivo/massive_game_server/target/release/deps/libuniversal_hash-1df4654bf47044a4.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `inout` (lib) generated 5 warnings (5 duplicates)
warning: `universal-hash` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `polyval_armv8`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/backend.rs:10:43
   |
10 |     if #[cfg(all(target_arch = "aarch64", polyval_armv8, not(polyval_force_soft)))] {
   |                                           ^^^^^^^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyval_armv8)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(polyval_armv8)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `polyval_force_soft`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/backend.rs:10:62
   |
10 |     if #[cfg(all(target_arch = "aarch64", polyval_armv8, not(polyval_force_soft)))] {
   |                                                              ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyval_force_soft)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(polyval_force_soft)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `polyval_force_soft`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/backend.rs:16:13
   |
16 |         not(polyval_force_soft)
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyval_force_soft)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(polyval_force_soft)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `polyval_armv8`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/backend/autodetect.rs:12:36
   |
12 | #[cfg(all(target_arch = "aarch64", polyval_armv8))]
   |                                    ^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyval_armv8)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(polyval_armv8)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `polyval_armv8`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/polyval-0.6.2/src/backend/autodetect.rs:18:36
   |
18 | #[cfg(all(target_arch = "aarch64", polyval_armv8))]
   |                                    ^^^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(polyval_armv8)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(polyval_armv8)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `aead` (lib) generated 5 warnings (5 duplicates)
   Compiling hmac v0.12.1
   Compiling sha1 v0.10.6
   Compiling signature v2.2.0
   Compiling sha2 v0.10.9
   Compiling md-5 v0.10.6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hmac CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hmac-0.12.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hmac-0.12.1/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Generic implementation of Hash-based Message Authentication Code (HMAC)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hmac CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/MACs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.12.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hmac --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hmac-0.12.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="reset"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("reset", "std"))' -C metadata=8dc661902d6c2986 -C extra-filename=-6d75f863c6edf4ab --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sha1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha1-0.10.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha1-0.10.6/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='SHA-1 hash function' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sha1 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/hashes' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sha1 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha1-0.10.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("asm", "compress", "default", "force-soft", "loongarch64_asm", "oid", "sha1-asm", "std"))' -C metadata=990c66de6681ef23 -C extra-filename=-484ae4eed4e01204 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern cpufeatures=/home/ivo/massive_game_server/target/release/deps/libcpufeatures-f8f5bc6ced230a73.rmeta --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=signature CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=signature CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits/tree/master/signature' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=2.2.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name signature --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/signature-2.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="digest"' --cfg 'feature="rand_core"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "derive", "digest", "rand_core", "std"))' -C metadata=631935db02e4972f -C extra-filename=-2b5672077a3a9f35 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sha2 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the SHA-2 hash function family
including SHA-224, SHA-256, SHA-384, and SHA-512.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sha2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/hashes' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sha2 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sha2-0.10.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("asm", "asm-aarch64", "compress", "default", "force-soft", "force-soft-compact", "loongarch64_asm", "oid", "sha2-asm", "std"))' -C metadata=f52670135ae37a6f -C extra-filename=-932bb362cb275cd6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern cpufeatures=/home/ivo/massive_game_server/target/release/deps/libcpufeatures-f8f5bc6ced230a73.rmeta --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=md5 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/md-5-0.10.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/md-5-0.10.6/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='MD5 hash function' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=md-5 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/hashes' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name md5 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/md-5-0.10.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("asm", "default", "force-soft", "loongarch64_asm", "md5-asm", "oid", "std"))' -C metadata=11b561cf054f81f3 -C extra-filename=-d417946d05760a5c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling ghash v0.5.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ghash CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ghash-0.5.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ghash-0.5.1/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC),
as in the AES-GCM authenticated encryption cipher.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ghash CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/universal-hashes' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.5.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ghash --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ghash-0.5.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("std", "zeroize"))' -C metadata=cccc089b06a33f82 -C extra-filename=-1e0fd5187cb95d0f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern opaque_debug=/home/ivo/massive_game_server/target/release/deps/libopaque_debug-b2225bd4fd1d92ff.rmeta --extern polyval=/home/ivo/massive_game_server/target/release/deps/libpolyval-4de9552107c460af.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `digest` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rustls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rustls is a modern TLS library written in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rustls/rustls' CARGO_PKG_LICENSE='Apache-2.0 OR ISC OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rustls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rustls' CARGO_PKG_RUST_VERSION=1.71 CARGO_PKG_VERSION=0.23.27 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=23 CARGO_PKG_VERSION_PATCH=27 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/rustls-b6319a2991bc9b46/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rustls --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rustls-0.23.27/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(bench)' --check-cfg 'cfg(coverage_nightly)' --check-cfg 'cfg(read_buf)' --cfg 'feature="ring"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws-lc-rs", "aws_lc_rs", "brotli", "custom-provider", "default", "fips", "hashbrown", "log", "logging", "prefer-post-quantum", "read_buf", "ring", "rustversion", "std", "tls12", "zlib"))' -C metadata=a05c4b26750826fa -C extra-filename=-cf7573e9d7e8feb9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern pki_types=/home/ivo/massive_game_server/target/release/deps/librustls_pki_types-9904dc4fb64ea0b1.rmeta --extern webpki=/home/ivo/massive_game_server/target/release/deps/libwebpki-c667a1c4eb0e8787.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: `zerovec-derive` (lib) generated 5 warnings (5 duplicates)
warning: `polyval` (lib) generated 10 warnings (5 duplicates)
   Compiling ctr v0.9.2
   Compiling aes v0.8.4
   Compiling cbc v0.1.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ctr CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctr-0.9.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctr-0.9.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='CTR block modes of operation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ctr CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/block-modes' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.9.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ctr --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ctr-0.9.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "block-padding", "std", "zeroize"))' -C metadata=a9dd60500e2d4cfd -C extra-filename=-6c2338305a12f20c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cipher=/home/ivo/massive_game_server/target/release/deps/libcipher-71a52443923126e1.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=aes CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=aes CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/block-ciphers' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.8.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name aes --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("hazmat", "zeroize"))' -C metadata=ced19f87abb99065 -C extra-filename=-e9625c58f7eecdd3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern cipher=/home/ivo/massive_game_server/target/release/deps/libcipher-71a52443923126e1.rmeta --extern cpufeatures=/home/ivo/massive_game_server/target/release/deps/libcpufeatures-f8f5bc6ced230a73.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=cbc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cbc-0.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cbc-0.1.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Cipher Block Chaining (CBC) block cipher mode of operation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=cbc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/block-modes' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.1.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name cbc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/cbc-0.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="block-padding"' --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "block-padding", "default", "std", "zeroize"))' -C metadata=5c362f9465ebf965 -C extra-filename=-24897bcb34148cef --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cipher=/home/ivo/massive_game_server/target/release/deps/libcipher-71a52443923126e1.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling hkdf v0.12.4
   Compiling rfc6979 v0.4.0
   Compiling x25519-dalek v2.0.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hkdf CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hkdf-0.12.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hkdf-0.12.4/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='HMAC-based Extract-and-Expand Key Derivation Function (HKDF)' CARGO_PKG_HOMEPAGE='https://github.com/RustCrypto/KDFs/' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hkdf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/KDFs/' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.12.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hkdf --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hkdf-0.12.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("std"))' -C metadata=0f20890530bf8876 -C extra-filename=-c75c74908a87cd1b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern hmac=/home/ivo/massive_game_server/target/release/deps/libhmac-6d75f863c6edf4ab.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rfc6979 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rfc6979-0.4.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rfc6979-0.4.0/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of RFC6979: Deterministic Usage of the
Digital Signature Algorithm (DSA) and Elliptic Curve Digital Signature Algorithm (ECDSA)
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rfc6979 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/signatures/tree/master/rfc6979' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=0.4.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rfc6979 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rfc6979-0.4.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=67f331312a6a72e6 -C extra-filename=-0934698772ffc3e5 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern hmac=/home/ivo/massive_game_server/target/release/deps/libhmac-6d75f863c6edf4ab.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=x25519_dalek CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x25519-dalek-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x25519-dalek-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='Isis Lovecruft <isis@patternsinthevoid.net>:DebugSteven <debugsteven@gmail.com>:Henry de Valence <hdevalence@hdevalence.ca>' CARGO_PKG_DESCRIPTION='X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.' CARGO_PKG_HOMEPAGE='https://github.com/dalek-cryptography/curve25519-dalek' CARGO_PKG_LICENSE=BSD-3-Clause CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=x25519-dalek CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dalek-cryptography/curve25519-dalek/tree/main/x25519-dalek' CARGO_PKG_RUST_VERSION=1.60 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name x25519_dalek --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x25519-dalek-2.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="precomputed-tables"' --cfg 'feature="static_secrets"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "getrandom", "precomputed-tables", "reusable_secrets", "serde", "static_secrets", "zeroize"))' -C metadata=bb56b03e61120e13 -C extra-filename=-e0012020668370f9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern curve25519_dalek=/home/ivo/massive_game_server/target/release/deps/libcurve25519_dalek-741cc2b0935cbaf5.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `ghash` (lib) generated 5 warnings (5 duplicates)
warning: `cipher` (lib) generated 5 warnings (5 duplicates)
warning: `hmac` (lib) generated 5 warnings (5 duplicates)
warning: `signature` (lib) generated 5 warnings (5 duplicates)
   Compiling headers v0.3.9
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=headers CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-0.3.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-0.3.9/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='typed HTTP headers' CARGO_PKG_HOMEPAGE='https://hyper.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=headers CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/headers' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name headers --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/headers-0.3.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("nightly"))' -C metadata=9e250a721d6f8caf -C extra-filename=-c9da8f1a354c7761 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-f0e2d0711532d445.rmeta --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern headers_core=/home/ivo/massive_game_server/target/release/deps/libheaders_core-e38f4539472dc949.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern httpdate=/home/ivo/massive_game_server/target/release/deps/libhttpdate-fde3b54d65e3df39.rmeta --extern mime=/home/ivo/massive_game_server/target/release/deps/libmime-727c609573810913.rmeta --extern sha1=/home/ivo/massive_game_server/target/release/deps/libsha1-484ae4eed4e01204.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `md-5` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition value: `bench`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x25519-dalek-2.0.1/src/lib.rs:18:13
   |
18 | #![cfg_attr(feature = "bench", feature(test))]
   |             ^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `alloc`, `default`, `getrandom`, `precomputed-tables`, `reusable_secrets`, `serde`, `static_secrets`, and `zeroize`
   = help: consider adding `bench` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: `sha1` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `aes_armv8`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs:134:43
    |
134 |     if #[cfg(all(target_arch = "aarch64", aes_armv8, not(aes_force_soft)))] {
    |                                           ^^^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_armv8)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_armv8)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `aes_force_soft`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs:134:58
    |
134 |     if #[cfg(all(target_arch = "aarch64", aes_armv8, not(aes_force_soft)))] {
    |                                                          ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_force_soft)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_force_soft)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_force_soft`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/lib.rs:140:13
    |
140 |         not(aes_force_soft)
    |             ^^^^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_force_soft)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_force_soft)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1098:11
     |
1098 | #[cfg(not(aes_compact))]
     |           ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1106:11
     |
1106 | #[cfg(not(aes_compact))]
     |           ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1128:15
     |
1128 | #[cfg(any(not(aes_compact), feature = "hazmat"))]
     |               ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1167:11
     |
1167 | #[cfg(not(aes_compact))]
     |           ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1401:11
     |
1401 | #[cfg(not(aes_compact))]
     |           ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:1409:11
     |
1409 | #[cfg(not(aes_compact))]
     |           ^^^^^^^^^^^
     |
     = help: consider using a Cargo feature instead
     = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
              [lints.rust]
              unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
     = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
     = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:65:11
   |
65 |     #[cfg(aes_compact)]
   |           ^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:71:15
   |
71 |     #[cfg(not(aes_compact))]
   |               ^^^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:171:11
    |
171 |     #[cfg(aes_compact)]
    |           ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:177:15
    |
177 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:241:11
    |
241 |     #[cfg(aes_compact)]
    |           ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:247:15
    |
247 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:276:15
    |
276 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:283:15
    |
283 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:302:19
    |
302 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:366:15
    |
366 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:338:15
    |
338 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:347:19
    |
347 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:390:15
    |
390 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:394:19
    |
394 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:444:15
    |
444 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:448:19
    |
448 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:488:15
    |
488 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:495:15
    |
495 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:514:19
    |
514 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:578:15
    |
578 |     #[cfg(not(aes_compact))]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:550:15
    |
550 |         #[cfg(aes_compact)]
    |               ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_compact`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/soft/fixslice64.rs:559:19
    |
559 |         #[cfg(not(aes_compact))]
    |                   ^^^^^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_compact)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_compact)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `aes_armv8`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-0.8.4/src/autodetect.rs:13:36
   |
13 | #[cfg(all(target_arch = "aarch64", aes_armv8))]
   |                                    ^^^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(aes_armv8)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(aes_armv8)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `cbc` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=native_tls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/Cargo.toml CARGO_PKG_AUTHORS='Steven Fackler <sfackler@gmail.com>' CARGO_PKG_DESCRIPTION='A wrapper over a platform'\''s native TLS implementation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=native-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/sfackler/rust-native-tls' CARGO_PKG_RUST_VERSION=1.80.0 CARGO_PKG_VERSION=0.2.14 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=14 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/native-tls-c469c8b10057081c/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name native_tls --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/native-tls-0.2.14/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alpn", "vendored"))' -C metadata=c83bf52a23753b59 -C extra-filename=-e4fa52e23d0c4ce7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern openssl=/home/ivo/massive_game_server/target/release/deps/libopenssl-06a480cd544ceb8c.rmeta --extern openssl_probe=/home/ivo/massive_game_server/target/release/deps/libopenssl_probe-f73a30f25e09f5f2.rmeta --extern openssl_sys=/home/ivo/massive_game_server/target/release/deps/libopenssl_sys-3045693d67023084.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg have_min_max_version --check-cfg 'cfg(have_min_max_version)'`
warning: `rfc6979` (lib) generated 5 warnings (5 duplicates)
warning: `x25519-dalek` (lib) generated 6 warnings (5 duplicates)
warning: `hkdf` (lib) generated 5 warnings (5 duplicates)
   Compiling spki v0.7.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=spki CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spki-0.7.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spki-0.7.3/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='X.509 Subject Public Key Info (RFC5280) describing public keys as well as their
associated AlgorithmIdentifiers (i.e. OIDs)
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=spki CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/spki' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.7.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name spki --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spki-0.7.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="pem"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arbitrary", "base64", "fingerprint", "pem", "sha2", "std"))' -C metadata=58fb35ca23b862a5 -C extra-filename=-1c029177aa57efa3 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern der=/home/ivo/massive_game_server/target/release/deps/libder-c2f719c2a0cced22.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling ccm v0.5.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ccm CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ccm-0.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ccm-0.5.0/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Generic implementation of the Counter with CBC-MAC (CCM) mode' CARGO_PKG_HOMEPAGE='https://github.com/RustCrypto/AEADs' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ccm CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/AEADs/tree/master/ccm' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.5.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ccm --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ccm-0.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="getrandom"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "getrandom", "heapless", "std", "stream"))' -C metadata=a468e6ce1b357d54 -C extra-filename=-b055bc9606eb6dee --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aead=/home/ivo/massive_game_server/target/release/deps/libaead-279490dc39424b0c.rmeta --extern cipher=/home/ivo/massive_game_server/target/release/deps/libcipher-71a52443923126e1.rmeta --extern ctr=/home/ivo/massive_game_server/target/release/deps/libctr-6c2338305a12f20c.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `ctr` (lib) generated 5 warnings (5 duplicates)
   Compiling pkcs8 v0.10.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pkcs8 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkcs8-0.10.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkcs8-0.10.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8:
Private-Key Information Syntax Specification (RFC 5208), with additional
support for PKCS#8v2 asymmetric key packages (RFC 5958)
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pkcs8 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/pkcs8' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.10.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pkcs8 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pkcs8-0.10.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="pem"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("3des", "alloc", "des-insecure", "encryption", "getrandom", "pem", "pkcs5", "rand_core", "sha1-insecure", "std", "subtle"))' -C metadata=522b6b43bdde9f5b -C extra-filename=-cda41f1138f8d763 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern der=/home/ivo/massive_game_server/target/release/deps/libder-c2f719c2a0cced22.rmeta --extern spki=/home/ivo/massive_game_server/target/release/deps/libspki-1c029177aa57efa3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `sha2` (lib) generated 5 warnings (5 duplicates)
warning: `spki` (lib) generated 5 warnings (5 duplicates)
warning: `ccm` (lib) generated 5 warnings (5 duplicates)
   Compiling sec1 v0.7.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sec1 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sec1-0.7.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sec1-0.7.3/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats
including ASN.1 DER-serialized private keys as well as the
Elliptic-Curve-Point-to-Octet-String encoding
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sec1 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/formats/tree/master/sec1' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.7.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sec1 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sec1-0.7.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="der"' --cfg 'feature="pem"' --cfg 'feature="pkcs8"' --cfg 'feature="point"' --cfg 'feature="std"' --cfg 'feature="subtle"' --cfg 'feature="zeroize"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "der", "pem", "pkcs8", "point", "serde", "std", "subtle", "zeroize"))' -C metadata=96f42ea32a60e16b -C extra-filename=-cf678e0416640239 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base16ct=/home/ivo/massive_game_server/target/release/deps/libbase16ct-4d5477911a30ff24.rmeta --extern der=/home/ivo/massive_game_server/target/release/deps/libder-c2f719c2a0cced22.rmeta --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --extern pkcs8=/home/ivo/massive_game_server/target/release/deps/libpkcs8-cda41f1138f8d763.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling aes-gcm v0.10.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=aes_gcm CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-gcm-0.10.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-gcm-0.10.3/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the AES-GCM (Galois/Counter Mode)
Authenticated Encryption with Associated Data (AEAD) Cipher
with optional architecture-specific hardware acceleration
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=aes-gcm CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/AEADs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.10.3 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name aes_gcm --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/aes-gcm-0.10.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="aes"' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="getrandom"' --cfg 'feature="rand_core"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aes", "alloc", "arrayvec", "default", "getrandom", "heapless", "rand_core", "std", "stream", "zeroize"))' -C metadata=10f6fd28ddb003d6 -C extra-filename=-0f8cf668e43499cc --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aead=/home/ivo/massive_game_server/target/release/deps/libaead-279490dc39424b0c.rmeta --extern aes=/home/ivo/massive_game_server/target/release/deps/libaes-e9625c58f7eecdd3.rmeta --extern cipher=/home/ivo/massive_game_server/target/release/deps/libcipher-71a52443923126e1.rmeta --extern ctr=/home/ivo/massive_game_server/target/release/deps/libctr-6c2338305a12f20c.rmeta --extern ghash=/home/ivo/massive_game_server/target/release/deps/libghash-1e0fd5187cb95d0f.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sec1-0.7.3/src/private_key.rs:101:28
    |
101 |                 return Err(der::Tag::Integer.value_error());
    |                            ^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sec1-0.7.3/src/lib.rs:14:5
    |
14  |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
101 -                 return Err(der::Tag::Integer.value_error());
101 +                 return Err(Tag::Integer.value_error());
    |

warning: `native-tls` (lib) generated 5 warnings (5 duplicates)
warning: `aes-gcm` (lib) generated 5 warnings (5 duplicates)
warning: `aes` (lib) generated 37 warnings (5 duplicates)
warning: `curve25519-dalek` (lib) generated 5 warnings (5 duplicates)
warning: `pkcs8` (lib) generated 5 warnings (5 duplicates)
   Compiling elliptic-curve v0.13.8
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=elliptic_curve CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/elliptic-curve-0.13.8 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/elliptic-curve-0.13.8/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='General purpose Elliptic Curve Cryptography (ECC) support, including types
and traits for representing various elliptic curve forms, scalars, points,
and public/secret keys composed thereof.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=elliptic-curve CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/traits/tree/master/elliptic-curve' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.13.8 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=8 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name elliptic_curve --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/elliptic-curve-0.13.8/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="arithmetic"' --cfg 'feature="digest"' --cfg 'feature="ecdh"' --cfg 'feature="ff"' --cfg 'feature="group"' --cfg 'feature="hazmat"' --cfg 'feature="pem"' --cfg 'feature="pkcs8"' --cfg 'feature="sec1"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arithmetic", "bits", "default", "dev", "digest", "ecdh", "ff", "group", "hash2curve", "hazmat", "jwk", "pem", "pkcs8", "sec1", "serde", "std", "voprf"))' -C metadata=1a83fefaf5c49570 -C extra-filename=-3a6510330d06216b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base16ct=/home/ivo/massive_game_server/target/release/deps/libbase16ct-4d5477911a30ff24.rmeta --extern crypto_bigint=/home/ivo/massive_game_server/target/release/deps/libcrypto_bigint-f3a20c4bad6229c9.rmeta --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --extern ff=/home/ivo/massive_game_server/target/release/deps/libff-83fdbb1068b3cec4.rmeta --extern generic_array=/home/ivo/massive_game_server/target/release/deps/libgeneric_array-be0d83be17096f2a.rmeta --extern group=/home/ivo/massive_game_server/target/release/deps/libgroup-6a38cdc30ddbdaf2.rmeta --extern hkdf=/home/ivo/massive_game_server/target/release/deps/libhkdf-c75c74908a87cd1b.rmeta --extern pem_rfc7468=/home/ivo/massive_game_server/target/release/deps/libpem_rfc7468-14195eae82e6a7d2.rmeta --extern pkcs8=/home/ivo/massive_game_server/target/release/deps/libpkcs8-cda41f1138f8d763.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern sec1=/home/ivo/massive_game_server/target/release/deps/libsec1-cf678e0416640239.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern zeroize=/home/ivo/massive_game_server/target/release/deps/libzeroize-666037ec4c16c843.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `sec1` (lib) generated 6 warnings (5 duplicates)
warning: `der` (lib) generated 7 warnings (5 duplicates)
warning: `headers` (lib) generated 5 warnings (5 duplicates)
   Compiling ecdsa v0.16.9
   Compiling primeorder v0.13.6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=ecdsa CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm
(ECDSA) as specified in FIPS 186-4 (Digital Signature Standard), providing
RFC6979 deterministic signatures as well as support for added entropy
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=ecdsa CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/signatures/tree/master/ecdsa' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.16.9 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=9 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name ecdsa --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="arithmetic"' --cfg 'feature="der"' --cfg 'feature="digest"' --cfg 'feature="hazmat"' --cfg 'feature="pem"' --cfg 'feature="pkcs8"' --cfg 'feature="rfc6979"' --cfg 'feature="signing"' --cfg 'feature="spki"' --cfg 'feature="std"' --cfg 'feature="verifying"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arithmetic", "default", "der", "dev", "digest", "hazmat", "pem", "pkcs8", "rfc6979", "serde", "serdect", "sha2", "signing", "spki", "std", "verifying"))' -C metadata=8394a9dc6078db5b -C extra-filename=-7a613ad1cc8414b6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern der=/home/ivo/massive_game_server/target/release/deps/libder-c2f719c2a0cced22.rmeta --extern digest=/home/ivo/massive_game_server/target/release/deps/libdigest-e4f56bbf4d6a8824.rmeta --extern elliptic_curve=/home/ivo/massive_game_server/target/release/deps/libelliptic_curve-3a6510330d06216b.rmeta --extern rfc6979=/home/ivo/massive_game_server/target/release/deps/librfc6979-0934698772ffc3e5.rmeta --extern signature=/home/ivo/massive_game_server/target/release/deps/libsignature-2b5672077a3a9f35.rmeta --extern spki=/home/ivo/massive_game_server/target/release/deps/libspki-1c029177aa57efa3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=primeorder CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/primeorder-0.13.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/primeorder-0.13.6/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of complete addition formulas for prime order elliptic
curves (Renes-Costello-Batina 2015). Generic over field elements and curve
equation coefficients
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=primeorder CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/elliptic-curves/tree/master/primeorder' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.13.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name primeorder --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/primeorder-0.13.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "dev", "serde", "serdect", "std"))' -C metadata=20f5294de072590f -C extra-filename=-89a206f136769a9f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern elliptic_curve=/home/ivo/massive_game_server/target/release/deps/libelliptic_curve-3a6510330d06216b.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `elliptic-curve` (lib) generated 5 warnings (5 duplicates)
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/der.rs:127:26
    |
127 |             .map_err(|_| der::Tag::Sequence.value_error())
    |                          ^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/lib.rs:23:5
    |
23  |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
127 -             .map_err(|_| der::Tag::Sequence.value_error())
127 +             .map_err(|_| Tag::Sequence.value_error())
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/der.rs:361:26
    |
361 |     header.tag.assert_eq(der::Tag::Sequence)?;
    |                          ^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
361 -     header.tag.assert_eq(der::Tag::Sequence)?;
361 +     header.tag.assert_eq(Tag::Sequence)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/verifying.rs:421:18
    |
421 |     type Error = pkcs8::spki::Error;
    |                  ^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
421 -     type Error = pkcs8::spki::Error;
421 +     type Error = spki::Error;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/verifying.rs:423:62
    |
423 |     fn try_from(spki: pkcs8::SubjectPublicKeyInfoRef<'_>) -> pkcs8::spki::Result<Self> {
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
423 -     fn try_from(spki: pkcs8::SubjectPublicKeyInfoRef<'_>) -> pkcs8::spki::Result<Self> {
423 +     fn try_from(spki: pkcs8::SubjectPublicKeyInfoRef<'_>) -> spki::Result<Self> {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/ecdsa-0.16.9/src/verifying.rs:435:36
    |
435 |     fn to_public_key_der(&self) -> pkcs8::spki::Result<pkcs8::Document> {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
435 -     fn to_public_key_der(&self) -> pkcs8::spki::Result<pkcs8::Document> {
435 +     fn to_public_key_der(&self) -> spki::Result<pkcs8::Document> {
    |

warning: `thiserror-impl` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=thiserror CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='derive(Error)' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=thiserror CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/thiserror' CARGO_PKG_RUST_VERSION=1.61 CARGO_PKG_VERSION=1.0.69 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=69 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/thiserror-43657f4ba536c021/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name thiserror --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/thiserror-1.0.69/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=a65d8338548b13c8 -C extra-filename=-c68bc409044f4487 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern thiserror_impl=/home/ivo/massive_game_server/target/release/deps/libthiserror_impl-3d6c498fc48a51d6.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(error_generic_member_access)' --check-cfg 'cfg(thiserror_nightly_testing)'`
   Compiling asn1-rs v0.6.2
   Compiling asn1-rs v0.5.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Parser/encoder for ASN.1 BER/DER data' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.6.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="datetime"' --cfg 'feature="default"' --cfg 'feature="std"' --cfg 'feature="time"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bigint", "bits", "bitvec", "colored", "cookie-factory", "datetime", "debug", "default", "num-bigint", "serialize", "std", "time", "trace"))' -C metadata=9370fb9e77cce4fb -C extra-filename=-d96018dfde673989 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs_derive=/home/ivo/massive_game_server/target/release/deps/libasn1_rs_derive-3a7b403e96fe1a3f.so --extern asn1_rs_impl=/home/ivo/massive_game_server/target/release/deps/libasn1_rs_impl-6906cabc9558c5e0.so --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --extern rusticata_macros=/home/ivo/massive_game_server/target/release/deps/librusticata_macros-6ed97a7d01d592bf.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern time=/home/ivo/massive_game_server/target/release/deps/libtime-423f613bbccab165.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=asn1_rs CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Parser/encoder for ASN.1 BER/DER data' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/asn1-rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=asn1-rs CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/asn1-rs.git' CARGO_PKG_RUST_VERSION=1.53 CARGO_PKG_VERSION=0.5.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name asn1_rs --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bigint", "bits", "bitvec", "cookie-factory", "datetime", "default", "num-bigint", "serialize", "std", "time"))' -C metadata=c29f23cff59d4b72 -C extra-filename=-4d84bd38ff07c6fb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs_derive=/home/ivo/massive_game_server/target/release/deps/libasn1_rs_derive-c505324628838407.so --extern asn1_rs_impl=/home/ivo/massive_game_server/target/release/deps/libasn1_rs_impl-adda378060190b2a.so --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --extern rusticata_macros=/home/ivo/massive_game_server/target/release/deps/librusticata_macros-6ed97a7d01d592bf.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=prometheus CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4/Cargo.toml CARGO_PKG_AUTHORS='overvenus@gmail.com:siddontang@gmail.com:vistaswx@gmail.com' CARGO_PKG_DESCRIPTION='Prometheus instrumentation library for Rust applications.' CARGO_PKG_HOMEPAGE='https://github.com/tikv/rust-prometheus' CARGO_PKG_LICENSE=Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=prometheus CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tikv/rust-prometheus' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.4 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/prometheus-16559ccce6da9806/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name prometheus --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/prometheus-0.13.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="protobuf"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "gen", "libc", "nightly", "process", "procfs", "protobuf", "protobuf-codegen-pure", "push", "reqwest"))' -C metadata=e55100a2ea225189 -C extra-filename=-8eb3959fa6f259ee --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern fnv=/home/ivo/massive_game_server/target/release/deps/libfnv-c408408c4d03e488.rmeta --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern parking_lot=/home/ivo/massive_game_server/target/release/deps/libparking_lot-9dabc6c29380194b.rmeta --extern protobuf=/home/ivo/massive_game_server/target/release/deps/libprotobuf-92a0417d8e19b46f.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `thiserror` (lib) generated 5 warnings (5 duplicates)
warning: `openssl` (lib) generated 5 warnings (5 duplicates)
warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/any.rs:101:43
    |
24  | impl<'a> Any<'a> {
    |      -- lifetime `'a` declared here
...
101 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/any.rs:125:43
    |
24  | impl<'a> Any<'a> {
    |      -- lifetime `'a` declared here
...
125 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/any.rs:342:48
    |
340 | impl<'a> FromBer<'a> for Any<'a> {
    |      -- lifetime `'a` declared here
341 |     #[inline]
342 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/any.rs:349:48
    |
347 | impl<'a> FromDer<'a> for Any<'a> {
    |      -- lifetime `'a` declared here
348 |     #[inline]
349 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/octetstring.rs:19:32
   |
11 | impl<'a> OctetString<'a> {
   |      -- lifetime `'a` declared here
...
19 |     pub fn as_cow(&'a self) -> &Cow<'a, [u8]> {
   |                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/oid.rs:119:46
    |
116 | impl<'a> Oid<'a> {
    |      -- lifetime `'a` declared here
...
119 |     pub const fn new(asn1: Cow<'a, [u8]>) -> Oid {
    |                                              ^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/oid.rs:128:55
    |
116 | impl<'a> Oid<'a> {
    |      -- lifetime `'a` declared here
...
128 |     pub const fn new_relative(asn1: Cow<'a, [u8]>) -> Oid {
    |                                                       ^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/optional.rs:13:48
   |
8  | impl<'a, T> FromBer<'a> for Option<T>
   |      -- lifetime `'a` declared here
...
13 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/optional.rs:31:48
   |
30 | impl<'a> FromBer<'a> for Option<Any<'a>> {
   |      -- lifetime `'a` declared here
31 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/optional.rs:47:48
   |
42 | impl<'a, T> FromDer<'a> for Option<T>
   |      -- lifetime `'a` declared here
...
47 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/optional.rs:65:48
   |
64 | impl<'a> FromDer<'a> for Option<Any<'a>> {
   |      -- lifetime `'a` declared here
65 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/sequence/sequence_of.rs:137:48
    |
132 | impl<'a, T, E> FromDer<'a, E> for SequenceOf<T>
    |      -- lifetime `'a` declared here
...
137 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/sequence/vec.rs:115:48
    |
110 | impl<'a, T, E> FromDer<'a, E> for Vec<T>
    |      -- lifetime `'a` declared here
...
115 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/sequence.rs:101:48
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
101 |         F: FnOnce(Cow<'a, [u8]>) -> ParseResult<U, E>,
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/sequence.rs:109:43
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
109 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/sequence.rs:145:43
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
145 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/set/set_of.rs:137:48
    |
132 | impl<'a, T, E> FromDer<'a, E> for SetOf<T>
    |      -- lifetime `'a` declared here
...
137 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/set.rs:102:48
    |
80  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
102 |         F: FnOnce(Cow<'a, [u8]>) -> ParseResult<U, E>,
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/set.rs:110:43
    |
80  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
110 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/set.rs:146:43
    |
80  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
146 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/tagged/explicit.rs:159:43
    |
135 | impl<'a, T, E> TaggedParser<'a, Explicit, T, E> {
    |      -- lifetime `'a` declared here
...
159 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/tagged/explicit.rs:179:43
    |
135 | impl<'a, T, E> TaggedParser<'a, Explicit, T, E> {
    |      -- lifetime `'a` declared here
...
179 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/tagged/helpers.rs:10:41
   |
8  | pub fn parse_der_tagged_explicit<'a, IntoTag, T, E>(
   |                                  -- lifetime `'a` declared here
9  |     tag: IntoTag,
10 | ) -> impl FnMut(&'a [u8]) -> ParseResult<TaggedParser<'a, Explicit, T, E>, E>
   |                                         ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/asn1_types/tagged/helpers.rs:44:41
   |
42 | pub fn parse_der_tagged_implicit<'a, IntoTag, T, E>(
   |                                  -- lifetime `'a` declared here
43 |     tag: IntoTag,
44 | ) -> impl FnMut(&'a [u8]) -> ParseResult<TaggedParser<'a, Implicit, T, E>, E>
   |                                         ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/header.rs:228:48
    |
227 | impl<'a> FromBer<'a> for Header<'a> {
    |      -- lifetime `'a` declared here
228 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/header.rs:273:48
    |
272 | impl<'a> FromDer<'a> for Header<'a> {
    |      -- lifetime `'a` declared here
273 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/traits.rs:88:48
   |
86 | pub trait FromBer<'a, E = Error>: Sized {
   |                   -- lifetime `'a` declared here
87 |     /// Attempt to parse input bytes into a BER object
88 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self, E>;
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/traits.rs:96:48
   |
91 | impl<'a, T, E> FromBer<'a, E> for T
   |      -- lifetime `'a` declared here
...
96 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<T, E> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/traits.rs:157:48
    |
155 | pub trait FromDer<'a, E = Error>: Sized {
    |                   -- lifetime `'a` declared here
156 |     /// Attempt to parse input bytes into a DER object (enforcing constraints)
157 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E>;
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.6.2/src/traits.rs:185:48
    |
178 | impl<'a, T, E> FromDer<'a, E> for T
    |      -- lifetime `'a` declared here
...
185 |     fn from_der(bytes: &'a [u8]) -> ParseResult<T, E> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:98:43
   |
21 | impl<'a> Any<'a> {
   |      -- lifetime `'a` declared here
...
98 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
   |                                           ^ this elided lifetime gets resolved as `'a`
   |
   = note: `#[warn(elided_named_lifetimes)]` on by default

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:104:26
    |
104 |             .map_err(|e| nom::Err::Error(e.into()))?;
    |                          ^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/lib.rs:159:5
    |
159 |     unused_qualifications,
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
104 -             .map_err(|e| nom::Err::Error(e.into()))?;
104 +             .map_err(|e| Err::Error(e.into()))?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:107:26
    |
107 |             .map_err(|e| nom::Err::Error(e.into()))?;
    |                          ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
107 -             .map_err(|e| nom::Err::Error(e.into()))?;
107 +             .map_err(|e| Err::Error(e.into()))?;
    |

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:122:43
    |
21  | impl<'a> Any<'a> {
    |      -- lifetime `'a` declared here
...
122 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:128:26
    |
128 |             .map_err(|e| nom::Err::Error(e.into()))?;
    |                          ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
128 -             .map_err(|e| nom::Err::Error(e.into()))?;
128 +             .map_err(|e| Err::Error(e.into()))?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:131:26
    |
131 |             .map_err(|e| nom::Err::Error(e.into()))?;
    |                          ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
131 -             .map_err(|e| nom::Err::Error(e.into()))?;
131 +             .map_err(|e| Err::Error(e.into()))?;
    |

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:321:48
    |
320 | impl<'a> FromBer<'a> for Any<'a> {
    |      -- lifetime `'a` declared here
321 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/any.rs:329:48
    |
328 | impl<'a> FromDer<'a> for Any<'a> {
    |      -- lifetime `'a` declared here
329 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/octetstring.rs:19:32
   |
11 | impl<'a> OctetString<'a> {
   |      -- lifetime `'a` declared here
...
19 |     pub fn as_cow(&'a self) -> &Cow<'a, [u8]> {
   |                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/oid.rs:120:46
    |
117 | impl<'a> Oid<'a> {
    |      -- lifetime `'a` declared here
...
120 |     pub const fn new(asn1: Cow<'a, [u8]>) -> Oid {
    |                                              ^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/oid.rs:129:55
    |
117 | impl<'a> Oid<'a> {
    |      -- lifetime `'a` declared here
...
129 |     pub const fn new_relative(asn1: Cow<'a, [u8]>) -> Oid {
    |                                                       ^^^ this elided lifetime gets resolved as `'a`

warning: unexpected `cfg` condition value: `exact_size_is_empty`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/oid.rs:375:11
    |
375 |     #[cfg(feature = "exact_size_is_empty")]
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `bits`, `bitvec`, `cookie-factory`, `datetime`, `default`, `num-bigint`, `serialize`, `std`, and `time`
    = help: consider adding `exact_size_is_empty` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/optional.rs:12:48
   |
8  | impl<'a, T> FromBer<'a> for Option<T>
   |      -- lifetime `'a` declared here
...
12 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/optional.rs:18:17
   |
18 |             Err(nom::Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
   |                 ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
18 -             Err(nom::Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
18 +             Err(Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
   |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/optional.rs:28:48
   |
24 | impl<'a, T> FromDer<'a> for Option<T>
   |      -- lifetime `'a` declared here
...
28 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/optional.rs:34:17
   |
34 |             Err(nom::Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
   |                 ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
34 -             Err(nom::Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
34 +             Err(Err::Error(Error::UnexpectedTag { .. })) => Ok((bytes, None)),
   |

warning: unused import: `self::f32::*`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/real.rs:8:9
  |
8 | pub use self::f32::*;
  |         ^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `self::f64::*`
 --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/real.rs:9:9
  |
9 | pub use self::f64::*;
  |         ^^^^^^^^^^^^

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence/vec.rs:96:48
   |
91 | impl<'a, T, E> FromDer<'a, E> for Vec<T>
   |      -- lifetime `'a` declared here
...
96 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence/vec.rs:100:26
    |
100 |             .map_err(|e| nom::Err::Error(e.into()))?;
    |                          ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
100 -             .map_err(|e| nom::Err::Error(e.into()))?;
100 +             .map_err(|e| Err::Error(e.into()))?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence/vec.rs:103:22
    |
103 |             .map_err(nom::Err::Error)?;
    |                      ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
103 -             .map_err(nom::Err::Error)?;
103 +             .map_err(Err::Error)?;
    |

warning: unused import: `vec::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence.rs:12:9
   |
12 | pub use vec::*;
   |         ^^^^^^

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence.rs:101:48
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
101 |         F: FnOnce(Cow<'a, [u8]>) -> ParseResult<U, E>,
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence.rs:109:43
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
109 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence.rs:145:43
    |
79  | impl<'a> Sequence<'a> {
    |      -- lifetime `'a` declared here
...
145 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/sequence.rs:183:22
    |
183 |             _ => Err(nom::Err::Error(Error::LifetimeError.into())),
    |                      ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
183 -             _ => Err(nom::Err::Error(Error::LifetimeError.into())),
183 +             _ => Err(Err::Error(Error::LifetimeError.into())),
    |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/btreeset.rs:50:26
   |
50 |             .map_err(|e| nom::Err::Error(e.into()))?;
   |                          ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
50 -             .map_err(|e| nom::Err::Error(e.into()))?;
50 +             .map_err(|e| Err::Error(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/btreeset.rs:53:26
   |
53 |             .map_err(|e| nom::Err::Error(e.into()))?;
   |                          ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
53 -             .map_err(|e| nom::Err::Error(e.into()))?;
53 +             .map_err(|e| Err::Error(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/btreeset.rs:56:22
   |
56 |             .map_err(nom::Err::Error)?;
   |                      ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
56 -             .map_err(nom::Err::Error)?;
56 +             .map_err(Err::Error)?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/hashset.rs:52:26
   |
52 |             .map_err(|e| nom::Err::Error(e.into()))?;
   |                          ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
52 -             .map_err(|e| nom::Err::Error(e.into()))?;
52 +             .map_err(|e| Err::Error(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/hashset.rs:55:26
   |
55 |             .map_err(|e| nom::Err::Error(e.into()))?;
   |                          ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
55 -             .map_err(|e| nom::Err::Error(e.into()))?;
55 +             .map_err(|e| Err::Error(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set/hashset.rs:58:22
   |
58 |             .map_err(nom::Err::Error)?;
   |                      ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
58 -             .map_err(nom::Err::Error)?;
58 +             .map_err(Err::Error)?;
   |

warning: unused import: `btreeset::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:11:9
   |
11 | pub use btreeset::*;
   |         ^^^^^^^^^^^

warning: unused import: `hashset::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:13:9
   |
13 | pub use hashset::*;
   |         ^^^^^^^^^^

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:104:48
    |
82  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
104 |         F: FnOnce(Cow<'a, [u8]>) -> ParseResult<U, E>,
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:112:43
    |
82  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
112 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:148:43
    |
82  | impl<'a> Set<'a> {
    |      -- lifetime `'a` declared here
...
148 |         F: FnOnce(&'a [u8]) -> ParseResult<U, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/set.rs:186:22
    |
186 |             _ => Err(nom::Err::Error(Error::LifetimeError.into())),
    |                      ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
186 -             _ => Err(nom::Err::Error(Error::LifetimeError.into())),
186 +             _ => Err(Err::Error(Error::LifetimeError.into())),
    |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/strings/bmpstring.rs:45:19
   |
45 |             data: alloc::borrow::Cow::Owned(s),
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
45 -             data: alloc::borrow::Cow::Owned(s),
45 +             data: Cow::Owned(s),
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/strings/universalstring.rs:46:19
   |
46 |             data: alloc::borrow::Cow::Owned(s),
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
46 -             data: alloc::borrow::Cow::Owned(s),
46 +             data: Cow::Owned(s),
   |

warning: unused import: `self::str::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/strings.rs:15:9
   |
15 | pub use self::str::*;
   |         ^^^^^^^^^^^^

warning: unused import: `string::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/strings.rs:22:9
   |
22 | pub use string::*;
   |         ^^^^^^^^^

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/explicit.rs:159:43
    |
135 | impl<'a, T, E> TaggedParser<'a, Explicit, T, E> {
    |      -- lifetime `'a` declared here
...
159 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/explicit.rs:179:43
    |
135 | impl<'a, T, E> TaggedParser<'a, Explicit, T, E> {
    |      -- lifetime `'a` declared here
...
179 |         F: FnOnce(&'a [u8]) -> ParseResult<T, E>,
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:10:41
   |
8  | pub fn parse_der_tagged_explicit<'a, IntoTag, T, E>(
   |                                  -- lifetime `'a` declared here
9  |     tag: IntoTag,
10 | ) -> impl FnMut(&'a [u8]) -> ParseResult<TaggedParser<'a, Explicit, T, E>, E>
   |                                         ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:37:26
   |
37 |             .map_err(|e| nom::Err::convert(e.into()))?;
   |                          ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
37 -             .map_err(|e| nom::Err::convert(e.into()))?;
37 +             .map_err(|e| Err::convert(e.into()))?;
   |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:44:41
   |
42 | pub fn parse_der_tagged_implicit<'a, IntoTag, T, E>(
   |                                  -- lifetime `'a` declared here
43 |     tag: IntoTag,
44 | ) -> impl FnMut(&'a [u8]) -> ParseResult<TaggedParser<'a, Implicit, T, E>, E>
   |                                         ^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:56:26
   |
56 |             .map_err(|e| nom::Err::convert(e.into()))?;
   |                          ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
56 -             .map_err(|e| nom::Err::convert(e.into()))?;
56 +             .map_err(|e| Err::convert(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:76:26
   |
76 |             .map_err(|e| nom::Err::convert(e.into()))?;
   |                          ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
76 -             .map_err(|e| nom::Err::convert(e.into()))?;
76 +             .map_err(|e| Err::convert(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:96:51
   |
96 |         let (rem, any) = Any::from_der(i).map_err(nom::Err::convert)?;
   |                                                   ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
96 -         let (rem, any) = Any::from_der(i).map_err(nom::Err::convert)?;
96 +         let (rem, any) = Any::from_der(i).map_err(Err::convert)?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/helpers.rs:99:26
   |
99 |             .map_err(|e| nom::Err::convert(e.into()))?;
   |                          ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
99 -             .map_err(|e| nom::Err::convert(e.into()))?;
99 +             .map_err(|e| Err::convert(e.into()))?;
   |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/implicit.rs:77:27
   |
77 |             Err(e) => Err(nom::Err::Error(e)),
   |                           ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
77 -             Err(e) => Err(nom::Err::Error(e)),
77 +             Err(e) => Err(Err::Error(e)),
   |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/implicit.rs:185:27
    |
185 |             Err(e) => Err(nom::Err::Error(e)),
    |                           ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
185 -             Err(e) => Err(nom::Err::Error(e)),
185 +             Err(e) => Err(Err::Error(e)),
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/implicit.rs:220:48
    |
220 |         T::check_constraints(&any).map_err(|e| nom::Err::Error(e.into()))?;
    |                                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
220 -         T::check_constraints(&any).map_err(|e| nom::Err::Error(e.into()))?;
220 +         T::check_constraints(&any).map_err(|e| Err::Error(e.into()))?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/tagged/implicit.rs:231:27
    |
231 |             Err(e) => Err(nom::Err::Error(e)),
    |                           ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
231 -             Err(e) => Err(nom::Err::Error(e)),
231 +             Err(e) => Err(Err::Error(e)),
    |

warning: unused import: `optional::*`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/asn1_types/mod.rs:25:5
   |
25 |     optional::*, real::*, sequence::*, set::*, strings::*, tagged::*, utctime::*,
   |     ^^^^^^^^^^^

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/header.rs:228:48
    |
227 | impl<'a> FromBer<'a> for Header<'a> {
    |      -- lifetime `'a` declared here
228 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/header.rs:273:48
    |
272 | impl<'a> FromDer<'a> for Header<'a> {
    |      -- lifetime `'a` declared here
273 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/traits.rs:86:48
   |
84 | pub trait FromBer<'a, E = Error>: Sized {
   |                   -- lifetime `'a` declared here
85 |     /// Attempt to parse input bytes into a BER object
86 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<Self, E>;
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/traits.rs:94:48
   |
89 | impl<'a, T, E> FromBer<'a, E> for T
   |      -- lifetime `'a` declared here
...
94 |     fn from_ber(bytes: &'a [u8]) -> ParseResult<T, E> {
   |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/traits.rs:155:48
    |
153 | pub trait FromDer<'a, E = Error>: Sized {
    |                   -- lifetime `'a` declared here
154 |     /// Attempt to parse input bytes into a DER object (enforcing constraints)
155 |     fn from_der(bytes: &'a [u8]) -> ParseResult<Self, E>;
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/asn1-rs-0.5.2/src/traits.rs:183:48
    |
176 | impl<'a, T, E> FromDer<'a, E> for T
    |      -- lifetime `'a` declared here
...
183 |     fn from_der(bytes: &'a [u8]) -> ParseResult<T, E> {
    |                                                ^ this elided lifetime gets resolved as `'a`

warning: `primeorder` (lib) generated 5 warnings (5 duplicates)
warning: `crypto-bigint` (lib) generated 7 warnings (5 duplicates)
warning: `rustls-webpki` (lib) generated 5 warnings (5 duplicates)
   Compiling p384 v0.13.1
   Compiling p256 v0.13.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=p384 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p384-0.13.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p384-0.13.1/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers:Frank Denis <github@pureftpd.org>' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the NIST P-384 (a.k.a. secp384r1) elliptic curve
as defined in SP 800-186 with support for ECDH, ECDSA signing/verification,
and general purpose curve arithmetic support.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=p384 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/elliptic-curves/tree/master/p384' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.13.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name p384 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p384-0.13.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="arithmetic"' --cfg 'feature="default"' --cfg 'feature="digest"' --cfg 'feature="ecdh"' --cfg 'feature="ecdsa"' --cfg 'feature="ecdsa-core"' --cfg 'feature="pem"' --cfg 'feature="pkcs8"' --cfg 'feature="sha2"' --cfg 'feature="sha384"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arithmetic", "bits", "default", "digest", "ecdh", "ecdsa", "ecdsa-core", "expose-field", "hash2curve", "hex-literal", "jwk", "pem", "pkcs8", "serde", "serdect", "sha2", "sha384", "std", "test-vectors", "voprf"))' -C metadata=0acc674f2ebe8572 -C extra-filename=-8cdf787a4fd39788 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ecdsa_core=/home/ivo/massive_game_server/target/release/deps/libecdsa-7a613ad1cc8414b6.rmeta --extern elliptic_curve=/home/ivo/massive_game_server/target/release/deps/libelliptic_curve-3a6510330d06216b.rmeta --extern primeorder=/home/ivo/massive_game_server/target/release/deps/libprimeorder-89a206f136769a9f.rmeta --extern sha2=/home/ivo/massive_game_server/target/release/deps/libsha2-932bb362cb275cd6.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=p256 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2/Cargo.toml CARGO_PKG_AUTHORS='RustCrypto Developers' CARGO_PKG_DESCRIPTION='Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1)
elliptic curve as defined in SP 800-186, with support for ECDH, ECDSA
signing/verification, and general purpose curve arithmetic
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=p256 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/RustCrypto/elliptic-curves/tree/master/p256' CARGO_PKG_RUST_VERSION=1.65 CARGO_PKG_VERSION=0.13.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name p256 --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="arithmetic"' --cfg 'feature="default"' --cfg 'feature="digest"' --cfg 'feature="ecdh"' --cfg 'feature="ecdsa"' --cfg 'feature="ecdsa-core"' --cfg 'feature="pem"' --cfg 'feature="pkcs8"' --cfg 'feature="sha2"' --cfg 'feature="sha256"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arithmetic", "bits", "default", "digest", "ecdh", "ecdsa", "ecdsa-core", "expose-field", "hash2curve", "jwk", "pem", "pkcs8", "serde", "serdect", "sha2", "sha256", "std", "test-vectors", "voprf"))' -C metadata=d015a91ebc494e59 -C extra-filename=-08063d447aab33f4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ecdsa_core=/home/ivo/massive_game_server/target/release/deps/libecdsa-7a613ad1cc8414b6.rmeta --extern elliptic_curve=/home/ivo/massive_game_server/target/release/deps/libelliptic_curve-3a6510330d06216b.rmeta --extern primeorder=/home/ivo/massive_game_server/target/release/deps/libprimeorder-89a206f136769a9f.rmeta --extern sha2=/home/ivo/massive_game_server/target/release/deps/libsha2-932bb362cb275cd6.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `pin-project-internal` (lib) generated 5 warnings (5 duplicates)
   Compiling pin-project v1.1.10
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=pin_project CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-1.1.10 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-1.1.10/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='A crate for safe and ergonomic pin-projection.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=pin-project CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/taiki-e/pin-project' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.1.10 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=10 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name pin_project --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/pin-project-1.1.10/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 '--warn=clippy::unused_trait_names' --warn=unreachable_pub --warn=unnameable_types --warn=unexpected_cfgs '--warn=clippy::undocumented_unsafe_blocks' '--warn=clippy::transmute_undefined_repr' '--warn=clippy::trailing_empty_array' --warn=single_use_lifetimes --warn=rust_2018_idioms '--warn=clippy::pedantic' --warn=non_ascii_idents '--warn=clippy::inline_asm_x86_att_syntax' --warn=improper_ctypes_definitions --warn=improper_ctypes --warn=deprecated_safe '--warn=clippy::default_union_representation' '--warn=clippy::as_underscore' '--warn=clippy::as_ptr_cast_mut' '--warn=clippy::all' '--allow=clippy::unreadable_literal' '--allow=clippy::type_complexity' '--allow=clippy::too_many_lines' '--allow=clippy::too_many_arguments' '--allow=clippy::struct_field_names' '--allow=clippy::struct_excessive_bools' '--allow=clippy::single_match_else' '--allow=clippy::single_match' '--allow=clippy::similar_names' '--allow=clippy::range_plus_one' '--allow=clippy::nonminimal_bool' '--allow=clippy::naive_bytecount' '--allow=clippy::module_name_repetitions' '--allow=clippy::missing_errors_doc' '--allow=clippy::manual_range_contains' '--allow=clippy::manual_assert' '--allow=clippy::lint_groups_priority' '--allow=clippy::incompatible_msrv' '--allow=clippy::float_cmp' '--allow=clippy::doc_markdown' '--allow=clippy::declare_interior_mutable_const' '--allow=clippy::cast_lossless' '--allow=clippy::borrow_as_ptr' '--allow=clippy::bool_assert_comparison' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=ee176938b486967c -C extra-filename=-66ffc2903acf9981 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern pin_project_internal=/home/ivo/massive_game_server/target/release/deps/libpin_project_internal-c59aba606748085e.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2/src/arithmetic/scalar.rs:690:21
    |
690 |         iter.reduce(core::ops::Add::add).unwrap_or(Self::ZERO)
    |                     ^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2/src/lib.rs:15:5
    |
15  |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
690 -         iter.reduce(core::ops::Add::add).unwrap_or(Self::ZERO)
690 +         iter.reduce(Add::add).unwrap_or(Self::ZERO)
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/p256-0.13.2/src/arithmetic/scalar.rs:702:21
    |
702 |         iter.reduce(core::ops::Mul::mul).unwrap_or(Self::ONE)
    |                     ^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
702 -         iter.reduce(core::ops::Mul::mul).unwrap_or(Self::ONE)
702 +         iter.reduce(Mul::mul).unwrap_or(Self::ONE)
    |

warning: `pin-project` (lib) generated 5 warnings (5 duplicates)
warning: `ecdsa` (lib) generated 10 warnings (5 duplicates)
warning: `yoke-derive` (lib) generated 5 warnings (5 duplicates)
   Compiling futures-executor v0.3.31
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures_executor CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-executor-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-executor-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Executors for asynchronous tasks based on the futures-rs library.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures-executor CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures_executor --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-executor-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "num_cpus", "std", "thread-pool"))' -C metadata=7779d9262d8f52e9 -C extra-filename=-a1a88b8904352b32 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_task=/home/ivo/massive_game_server/target/release/deps/libfutures_task-81c5a2831674e59e.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=multer CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/Cargo.toml CARGO_PKG_AUTHORS='Rousan Ali <hello@rousan.io>' CARGO_PKG_DESCRIPTION='An async parser for `multipart/form-data` content-type in Rust.' CARGO_PKG_HOMEPAGE='https://github.com/rousan/multer-rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=multer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rousan/multer-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=2.1.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/multer-05e773c867589ea9/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name multer --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("all", "default", "json", "serde", "serde_json", "tokio", "tokio-io", "tokio-util"))' -C metadata=cc1f93c371de4843 -C extra-filename=-0e6140575e70f4a7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern encoding_rs=/home/ivo/massive_game_server/target/release/deps/libencoding_rs-356873a44416e474.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern httparse=/home/ivo/massive_game_server/target/release/deps/libhttparse-4e64bb65f11071bd.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern mime=/home/ivo/massive_game_server/target/release/deps/libmime-727c609573810913.rmeta --extern spin=/home/ivo/massive_game_server/target/release/deps/libspin-3e83cf9a6c3708ee.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition name: `nightly`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs:117:13
    |
117 | #![cfg_attr(nightly, feature(doc_cfg))]
    |             ^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(nightly)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(nightly)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/field.rs:342:41
    |
342 |             return Poll::Ready(Some(Err(crate::Error::StreamReadFailed(err.into()))));
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs:115:5
    |
115 |     unused_qualifications
    |     ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
342 -             return Poll::Ready(Some(Err(crate::Error::StreamReadFailed(err.into()))));
342 +             return Poll::Ready(Some(Err(Error::StreamReadFailed(err.into()))));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/field.rs:353:49
    |
353 |                     return Poll::Ready(Some(Err(crate::Error::FieldSizeExceeded {
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
353 -                     return Poll::Ready(Some(Err(crate::Error::FieldSizeExceeded {
353 +                     return Poll::Ready(Some(Err(Error::FieldSizeExceeded {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:126:28
    |
126 |             .map_err(|err| crate::Error::StreamReadFailed(err.into()));
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
126 -             .map_err(|err| crate::Error::StreamReadFailed(err.into()));
126 +             .map_err(|err| Error::StreamReadFailed(err.into()));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:255:36
    |
255 |             return Poll::Ready(Err(crate::Error::StreamReadFailed(err.into())));
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
255 -             return Poll::Ready(Err(crate::Error::StreamReadFailed(err.into())));
255 +             return Poll::Ready(Err(Error::StreamReadFailed(err.into())));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:265:48
    |
265 |                         return Poll::Ready(Err(crate::Error::StreamReadFailed(err.into())));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
265 -                         return Poll::Ready(Err(crate::Error::StreamReadFailed(err.into())));
265 +                         return Poll::Ready(Err(Error::StreamReadFailed(err.into())));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:268:48
    |
268 |                         return Poll::Ready(Err(crate::Error::IncompleteStream));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
268 -                         return Poll::Ready(Err(crate::Error::IncompleteStream));
268 +                         return Poll::Ready(Err(Error::IncompleteStream));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:284:48
    |
284 |                         return Poll::Ready(Err(crate::Error::FieldSizeExceeded {
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
284 -                         return Poll::Ready(Err(crate::Error::FieldSizeExceeded {
284 +                         return Poll::Ready(Err(Error::FieldSizeExceeded {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:310:41
    |
310 |                         Poll::Ready(Err(crate::Error::IncompleteStream))
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
310 -                         Poll::Ready(Err(crate::Error::IncompleteStream))
310 +                         Poll::Ready(Err(Error::IncompleteStream))
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:320:40
    |
320 |                 return Poll::Ready(Err(crate::Error::IncompleteStream));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
320 -                 return Poll::Ready(Err(crate::Error::IncompleteStream));
320 +                 return Poll::Ready(Err(Error::IncompleteStream));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:330:41
    |
330 |                         Poll::Ready(Err(crate::Error::IncompleteStream))
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
330 -                         Poll::Ready(Err(crate::Error::IncompleteStream))
330 +                         Poll::Ready(Err(Error::IncompleteStream))
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:348:37
    |
348 |                     Poll::Ready(Err(crate::Error::IncompleteStream))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
348 -                     Poll::Ready(Err(crate::Error::IncompleteStream))
348 +                     Poll::Ready(Err(Error::IncompleteStream))
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:359:41
    |
359 |                         Poll::Ready(Err(crate::Error::IncompleteStream))
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
359 -                         Poll::Ready(Err(crate::Error::IncompleteStream))
359 +                         Poll::Ready(Err(Error::IncompleteStream))
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:369:40
    |
369 |                 return Poll::Ready(Err(crate::Error::IncompleteStream));
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
369 -                 return Poll::Ready(Err(crate::Error::IncompleteStream));
369 +                 return Poll::Ready(Err(Error::IncompleteStream));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:378:48
    |
378 |                         return Poll::Ready(Err(crate::Error::IncompleteStream));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
378 -                         return Poll::Ready(Err(crate::Error::IncompleteStream));
378 +                         return Poll::Ready(Err(Error::IncompleteStream));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:388:84
    |
388 |                 match httparse::parse_headers(&header_bytes, &mut headers).map_err(crate::Error::ReadHeaderFailed)? {
    |                                                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
388 -                 match httparse::parse_headers(&header_bytes, &mut headers).map_err(crate::Error::ReadHeaderFailed)? {
388 +                 match httparse::parse_headers(&header_bytes, &mut headers).map_err(Error::ReadHeaderFailed)? {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:398:48
    |
398 |                         return Poll::Ready(Err(crate::Error::IncompleteHeaders));
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
398 -                         return Poll::Ready(Err(crate::Error::IncompleteHeaders));
398 +                         return Poll::Ready(Err(Error::IncompleteHeaders));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/multipart.rs:419:40
    |
419 |                 return Poll::Ready(Err(crate::Error::UnknownField {
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
419 -                 return Poll::Ready(Err(crate::Error::UnknownField {
419 +                 return Poll::Ready(Err(Error::UnknownField {
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs:160:18
    |
160 |         .map_err(crate::Error::DecodeContentType)?;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
160 -         .map_err(crate::Error::DecodeContentType)?;
160 +         .map_err(Error::DecodeContentType)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs:163:20
    |
163 |         return Err(crate::Error::NoMultipart);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
163 -         return Err(crate::Error::NoMultipart);
163 +         return Err(Error::NoMultipart);
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/multer-2.1.0/src/lib.rs:168:16
    |
168 |         .ok_or(crate::Error::NoBoundary)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
168 -         .ok_or(crate::Error::NoBoundary)
168 +         .ok_or(Error::NoBoundary)
    |

   Compiling futures v0.3.31
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=futures CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-0.3.31 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-0.3.31/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='An implementation of futures and streams featuring zero allocations,
composability, and iterator-like interfaces.
' CARGO_PKG_HOMEPAGE='https://rust-lang.github.io/futures-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=futures CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/futures-rs' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=0.3.31 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=31 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name futures --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/futures-0.3.31/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unreachable_pub --warn=unexpected_cfgs --warn=single_use_lifetimes --warn=rust_2018_idioms --warn=missing_debug_implementations --check-cfg 'cfg(futures_sanitizer)' --cfg 'feature="alloc"' --cfg 'feature="async-await"' --cfg 'feature="default"' --cfg 'feature="executor"' --cfg 'feature="futures-executor"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "async-await", "bilock", "cfg-target-has-atomic", "compat", "default", "executor", "futures-executor", "io-compat", "std", "thread-pool", "unstable", "write-all-vectored"))' -C metadata=d03e3193d44395e3 -C extra-filename=-4d8e87475c11ef20 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern futures_channel=/home/ivo/massive_game_server/target/release/deps/libfutures_channel-f9d05d7240e9556c.rmeta --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_executor=/home/ivo/massive_game_server/target/release/deps/libfutures_executor-a1a88b8904352b32.rmeta --extern futures_io=/home/ivo/massive_game_server/target/release/deps/libfutures_io-63be57cdc0e7ba7b.rmeta --extern futures_sink=/home/ivo/massive_game_server/target/release/deps/libfutures_sink-f80d8fdd34ee7a48.rmeta --extern futures_task=/home/ivo/massive_game_server/target/release/deps/libfutures_task-81c5a2831674e59e.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `futures-util` (lib) generated 5 warnings (5 duplicates)
warning: `futures` (lib) generated 5 warnings (5 duplicates)
warning: `p256` (lib) generated 7 warnings (5 duplicates)
warning: `futures-executor` (lib) generated 5 warnings (5 duplicates)
   Compiling der-parser v8.2.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=der_parser CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Parser/encoder for ASN.1 BER/DER data' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/der-parser' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=der-parser CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/der-parser.git' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=8.2.0 CARGO_PKG_VERSION_MAJOR=8 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name der_parser --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bigint", "cookie-factory", "default", "num-bigint", "serialize", "std", "unstable"))' -C metadata=aa7b31d886af0a8f -C extra-filename=-3542b212b12d9594 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs=/home/ivo/massive_game_server/target/release/deps/libasn1_rs-4d84bd38ff07c6fb.rmeta --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --extern rusticata_macros=/home/ivo/massive_game_server/target/release/deps/librusticata_macros-6ed97a7d01d592bf.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition value: `bitvec`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/ber.rs:11:7
   |
11 | #[cfg(feature = "bitvec")]
   |       ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
   = help: consider adding `bitvec` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/ber.rs:270:11
    |
270 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/ber.rs:136:60
    |
103 | impl<'a> BerObject<'a> {
    |      -- lifetime `'a` declared here
...
136 |     pub fn set_raw_tag(self, raw_tag: Option<&'a [u8]>) -> BerObject {
    |                                                            ^^^^^^^^^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/ber.rs:566:11
    |
566 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/ber.rs:832:11
    |
832 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:37:24
   |
35 | pub fn parse_ber_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here
36 | where
37 |     F: Fn(&'a [u8]) -> BerResult,
   |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:35:70
   |
35 | pub fn parse_ber_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:160:36
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:160:41
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:158:79
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:262:24
    |
260 | pub fn parse_ber_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here
261 | where
262 |     F: Fn(&'a [u8]) -> BerResult,
    |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:260:65
    |
260 | pub fn parse_ber_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:383:36
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:383:41
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:381:74
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:521:59
    |
521 |         let (i, hdr) = ber_read_element_header(i).map_err(nom::Err::convert)?;
    |                                                           ^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/lib.rs:225:9
    |
225 |         unused_qualifications,
    |         ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
521 -         let (i, hdr) = ber_read_element_header(i).map_err(nom::Err::convert)?;
521 +         let (i, hdr) = ber_read_element_header(i).map_err(Err::convert)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/multi.rs:525:72
    |
525 |                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(nom::Err::convert)?
    |                                                                        ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
525 -                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(nom::Err::convert)?
525 +                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(Err::convert)?
    |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/tagged.rs:41:33
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<BerObject>,
   |                                 ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/tagged.rs:41:34
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<BerObject>,
   |                                  ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/tagged.rs:39:85
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/tagged.rs:171:85
    |
171 | pub fn parse_ber_tagged_implicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/ber/tagged.rs:247:38
    |
244 | pub fn parse_ber_tagged_implicit_g<'a, T, Output, F, E>(
    |                                    -- lifetime `'a` declared here
...
247 | ) -> impl FnMut(&'a [u8]) -> IResult<&[u8], Output, E>
    |                                      ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:37:24
   |
35 | pub fn parse_der_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here
36 | where
37 |     F: Fn(&'a [u8]) -> BerResult,
   |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:35:70
   |
35 | pub fn parse_der_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:160:36
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:160:41
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:158:79
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:262:24
    |
260 | pub fn parse_der_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here
261 | where
262 |     F: Fn(&'a [u8]) -> BerResult,
    |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:260:65
    |
260 | pub fn parse_der_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:383:36
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:383:41
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:381:74
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/multi.rs:521:59
    |
521 |         let (i, hdr) = der_read_element_header(i).map_err(nom::Err::convert)?;
    |                                                           ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
521 -         let (i, hdr) = der_read_element_header(i).map_err(nom::Err::convert)?;
521 +         let (i, hdr) = der_read_element_header(i).map_err(Err::convert)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/parser.rs:507:32
    |
507 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
507 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
507 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/parser.rs:512:32
    |
512 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
512 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
512 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/parser.rs:517:32
    |
517 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
517 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
517 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/tagged.rs:41:33
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<DerObject>,
   |                                 ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/tagged.rs:41:34
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<DerObject>,
   |                                  ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/tagged.rs:39:85
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/tagged.rs:172:85
    |
172 | pub fn parse_der_tagged_implicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-8.2.0/src/der/tagged.rs:248:38
    |
245 | pub fn parse_der_tagged_implicit_g<'a, T, Output, F, E>(
    |                                    -- lifetime `'a` declared here
...
248 | ) -> impl FnMut(&'a [u8]) -> IResult<&[u8], Output, E>
    |                                      ^ this elided lifetime gets resolved as `'a`

   Compiling der-parser v9.0.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=der_parser CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Parser/encoder for ASN.1 BER/DER data' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/der-parser' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=der-parser CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/der-parser.git' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=9.0.0 CARGO_PKG_VERSION_MAJOR=9 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name der_parser --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="bigint"' --cfg 'feature="default"' --cfg 'feature="num-bigint"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bigint", "cookie-factory", "default", "num-bigint", "serialize", "std", "unstable"))' -C metadata=1fe83d2eec90e5fa -C extra-filename=-27d440fd6f754727 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs=/home/ivo/massive_game_server/target/release/deps/libasn1_rs-d96018dfde673989.rmeta --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --extern num_bigint=/home/ivo/massive_game_server/target/release/deps/libnum_bigint-8249117f26190267.rmeta --extern num_traits=/home/ivo/massive_game_server/target/release/deps/libnum_traits-7e0c3c4e0ad35639.rmeta --extern rusticata_macros=/home/ivo/massive_game_server/target/release/deps/librusticata_macros-6ed97a7d01d592bf.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=oid_registry CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Object Identifier (OID) database' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/oid-registry' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=oid-registry CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/oid-registry.git' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/oid-registry-a68ca2eb95b3a7a1/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name oid_registry --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/oid-registry-0.7.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="crypto"' --cfg 'feature="default"' --cfg 'feature="kdf"' --cfg 'feature="nist_algs"' --cfg 'feature="pkcs1"' --cfg 'feature="pkcs12"' --cfg 'feature="pkcs7"' --cfg 'feature="pkcs9"' --cfg 'feature="registry"' --cfg 'feature="x509"' --cfg 'feature="x962"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("crypto", "default", "kdf", "ms_spc", "nist_algs", "pkcs1", "pkcs12", "pkcs7", "pkcs9", "registry", "x500", "x509", "x962"))' -C metadata=9d7399041911d1ba -C extra-filename=-d16d499b85e16dd8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs=/home/ivo/massive_game_server/target/release/deps/libasn1_rs-d96018dfde673989.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: unexpected `cfg` condition value: `bitvec`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/ber.rs:13:7
   |
13 | #[cfg(feature = "bitvec")]
   |       ^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
   = help: consider adding `bitvec` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/ber.rs:273:11
    |
273 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/ber.rs:139:60
    |
106 | impl<'a> BerObject<'a> {
    |      -- lifetime `'a` declared here
...
139 |     pub fn set_raw_tag(self, raw_tag: Option<&'a [u8]>) -> BerObject {
    |                                                            ^^^^^^^^^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/ber.rs:569:11
    |
569 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `bitvec`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/ber.rs:869:11
    |
869 |     #[cfg(feature = "bitvec")]
    |           ^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bigint`, `cookie-factory`, `default`, `num-bigint`, `serialize`, `std`, and `unstable`
    = help: consider adding `bitvec` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:37:24
   |
35 | pub fn parse_ber_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here
36 | where
37 |     F: Fn(&'a [u8]) -> BerResult,
   |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:35:70
   |
35 | pub fn parse_ber_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:160:36
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:160:41
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:158:79
    |
158 | pub fn parse_ber_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:262:24
    |
260 | pub fn parse_ber_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here
261 | where
262 |     F: Fn(&'a [u8]) -> BerResult,
    |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:260:65
    |
260 | pub fn parse_ber_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:383:36
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:383:41
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<BerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:381:74
    |
381 | pub fn parse_ber_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:521:59
    |
521 |         let (i, hdr) = ber_read_element_header(i).map_err(nom::Err::convert)?;
    |                                                           ^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/lib.rs:225:9
    |
225 |         unused_qualifications,
    |         ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
521 -         let (i, hdr) = ber_read_element_header(i).map_err(nom::Err::convert)?;
521 +         let (i, hdr) = ber_read_element_header(i).map_err(Err::convert)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/multi.rs:525:72
    |
525 |                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(nom::Err::convert)?
    |                                                                        ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
525 -                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(nom::Err::convert)?
525 +                 ber_get_object_content(i, &hdr, MAX_RECURSION).map_err(Err::convert)?
    |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/tagged.rs:41:33
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<BerObject>,
   |                                 ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/tagged.rs:41:34
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<BerObject>,
   |                                  ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/tagged.rs:39:85
   |
39 | pub fn parse_ber_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/tagged.rs:171:85
    |
171 | pub fn parse_ber_tagged_implicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/ber/tagged.rs:247:38
    |
244 | pub fn parse_ber_tagged_implicit_g<'a, T, Output, F, E>(
    |                                    -- lifetime `'a` declared here
...
247 | ) -> impl FnMut(&'a [u8]) -> IResult<&[u8], Output, E>
    |                                      ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:37:24
   |
35 | pub fn parse_der_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here
36 | where
37 |     F: Fn(&'a [u8]) -> BerResult,
   |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:35:70
   |
35 | pub fn parse_der_sequence_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                              -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:160:36
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:160:41
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here
159 | where
160 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:158:79
    |
158 | pub fn parse_der_sequence_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                   -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:262:24
    |
260 | pub fn parse_der_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here
261 | where
262 |     F: Fn(&'a [u8]) -> BerResult,
    |                        ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:260:65
    |
260 | pub fn parse_der_set_of<'a, F>(f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                         -- lifetime `'a` declared here          ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:383:36
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                    ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:383:41
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here
382 | where
383 |     F: FnMut(&'a [u8]) -> BerResult<Vec<DerObject>>,
    |                                         ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:381:74
    |
381 | pub fn parse_der_set_defined<'a, F>(mut f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                              -- lifetime `'a` declared here              ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/multi.rs:521:59
    |
521 |         let (i, hdr) = der_read_element_header(i).map_err(nom::Err::convert)?;
    |                                                           ^^^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
521 -         let (i, hdr) = der_read_element_header(i).map_err(nom::Err::convert)?;
521 +         let (i, hdr) = der_read_element_header(i).map_err(Err::convert)?;
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/parser.rs:507:32
    |
507 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
507 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
507 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/parser.rs:512:32
    |
512 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
512 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
512 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/parser.rs:517:32
    |
517 |                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
    |                                ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
517 -                     return Err(nom::Err::Error(BerError::DerConstraintFailed(
517 +                     return Err(Err::Error(BerError::DerConstraintFailed(
    |

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/tagged.rs:41:33
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<DerObject>,
   |                                 ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/tagged.rs:41:34
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here
40 | where
41 |     F: Fn(&'a [u8]) -> BerResult<DerObject>,
   |                                  ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/tagged.rs:39:85
   |
39 | pub fn parse_der_tagged_explicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
   |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/tagged.rs:172:85
    |
172 | pub fn parse_der_tagged_implicit<'a, T, F>(tag: T, f: F) -> impl FnMut(&'a [u8]) -> BerResult
    |                                  -- lifetime `'a` declared here                     ^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/der-parser-9.0.0/src/der/tagged.rs:248:38
    |
245 | pub fn parse_der_tagged_implicit_g<'a, T, Output, F, E>(
    |                                    -- lifetime `'a` declared here
...
248 | ) -> impl FnMut(&'a [u8]) -> IResult<&[u8], Output, E>
    |                                      ^ this elided lifetime gets resolved as `'a`

warning: `multer` (lib) generated 26 warnings (5 duplicates)
warning: `serde_with_macros` (lib) generated 5 warnings (5 duplicates)
warning: `oid-registry` (lib) generated 5 warnings (5 duplicates)
warning: `p384` (lib) generated 5 warnings (5 duplicates)
   Compiling tokio-util v0.7.15
   Compiling tokio-native-tls v0.3.1
   Compiling x509-parser v0.16.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tokio_util CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Additional utilities for working with Tokio.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tokio-util CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tokio' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=0.7.15 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=15 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tokio_util --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-util-0.7.15/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(fuzzing)' --check-cfg 'cfg(loom)' --check-cfg 'cfg(mio_unsupported_force_poll_poll)' --check-cfg 'cfg(tokio_allow_from_blocking_fd)' --check-cfg 'cfg(tokio_internal_mt_counters)' --check-cfg 'cfg(tokio_no_parking_lot)' --check-cfg 'cfg(tokio_no_tuning_tests)' --check-cfg 'cfg(tokio_taskdump)' --check-cfg 'cfg(tokio_unstable)' --cfg 'feature="codec"' --cfg 'feature="default"' --cfg 'feature="io"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__docs_rs", "codec", "compat", "default", "full", "futures-io", "futures-util", "hashbrown", "io", "io-util", "net", "rt", "slab", "time", "tracing"))' -C metadata=045978ce9ade0c98 -C extra-filename=-55513c602ff72ac0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_sink=/home/ivo/massive_game_server/target/release/deps/libfutures_sink-f80d8fdd34ee7a48.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tokio_native_tls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS
for nonblocking I/O streams.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tokio-native-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tls' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tokio_native_tls --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-native-tls-0.3.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("vendored"))' -C metadata=3589d2187269f8e5 -C extra-filename=-5bac045d320ac09a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern native_tls=/home/ivo/massive_game_server/target/release/deps/libnative_tls-e4fa52e23d0c4ce7.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=x509_parser CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/Cargo.toml CARGO_PKG_AUTHORS='Pierre Chifflier <chifflier@wzdftpd.net>' CARGO_PKG_DESCRIPTION='Parser for the X.509 v3 format (RFC 5280 certificates)' CARGO_PKG_HOMEPAGE='https://github.com/rusticata/x509-parser' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=x509-parser CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rusticata/x509-parser.git' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.16.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=16 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name x509_parser --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="ring"' --cfg 'feature="verify"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "ring", "validate", "verify"))' -C metadata=96740e6128aab715 -C extra-filename=-4c70a353e3749027 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern asn1_rs=/home/ivo/massive_game_server/target/release/deps/libasn1_rs-d96018dfde673989.rmeta --extern data_encoding=/home/ivo/massive_game_server/target/release/deps/libdata_encoding-ee91a5b3944ccfc4.rmeta --extern der_parser=/home/ivo/massive_game_server/target/release/deps/libder_parser-27d440fd6f754727.rmeta --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --extern nom=/home/ivo/massive_game_server/target/release/deps/libnom-c01c72e5dad33115.rmeta --extern oid_registry=/home/ivo/massive_game_server/target/release/deps/liboid_registry-d16d499b85e16dd8.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern rusticata_macros=/home/ivo/massive_game_server/target/release/deps/librusticata_macros-6ed97a7d01d592bf.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern time=/home/ivo/massive_game_server/target/release/deps/libtime-423f613bbccab165.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/certificate.rs:145:43
    |
108 | impl<'a> FromDer<'a, X509Error> for X509Certificate<'a> {
    |      -- lifetime `'a` declared here
...
145 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/certificate.rs:552:43
    |
533 | impl<'a> FromDer<'a, X509Error> for TbsCertificate<'a> {
    |      -- lifetime `'a` declared here
...
552 |     fn from_der(i: &'a [u8]) -> X509Result<TbsCertificate<'a>> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/certificate.rs:727:50
    |
725 | impl<'a> UniqueIdentifier<'a> {
    |      -- lifetime `'a` declared here
726 |     // issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL
727 |     fn from_der_issuer(i: &'a [u8]) -> X509Result<Option<Self>> {
    |                                                  ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/certification_request.rs:148:43
    |
147 | impl<'a> FromDer<'a, X509Error> for X509CertificationRequestInfo<'a> {
    |      -- lifetime `'a` declared here
148 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/cri_attributes.rs:22:43
   |
21 | impl<'a> FromDer<'a, X509Error> for X509CriAttribute<'a> {
   |      -- lifetime `'a` declared here
22 |     fn from_der(i: &'a [u8]) -> X509Result<X509CriAttribute> {
   |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/cri_attributes.rs:22:44
   |
21 | impl<'a> FromDer<'a, X509Error> for X509CriAttribute<'a> {
   |      -- lifetime `'a` declared here
22 |     fn from_der(i: &'a [u8]) -> X509Result<X509CriAttribute> {
   |                                            ^^^^^^^^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/cri_attributes.rs:31:41
    |
31  |             let (i, parsed_attribute) = crate::cri_attributes::parser::parse_attribute(i, &oid)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/lib.rs:123:31
    |
123 |         unused_import_braces, unused_qualifications)]
    |                               ^^^^^^^^^^^^^^^^^^^^^
help: remove the unnecessary path segments
    |
31  -             let (i, parsed_attribute) = crate::cri_attributes::parser::parse_attribute(i, &oid)
31  +             let (i, parsed_attribute) = parser::parse_attribute(i, &oid)
    |

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/extensions/generalname.rs:43:55
   |
43 |             std::str::from_utf8(any.data).map_err(|_| nom::Err::Failure(Error::BerValueError))
   |                                                       ^^^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
43 -             std::str::from_utf8(any.data).map_err(|_| nom::Err::Failure(Error::BerValueError))
43 +             std::str::from_utf8(any.data).map_err(|_| Err::Failure(Error::BerValueError))
   |

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/extensions/mod.rs:127:43
    |
126 | impl<'a> FromDer<'a, X509Error> for X509Extension<'a> {
    |      -- lifetime `'a` declared here
127 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/revocation_list.rs:135:43
    |
134 | impl<'a> FromDer<'a, X509Error> for CertificateRevocationList<'a> {
    |      -- lifetime `'a` declared here
135 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/revocation_list.rs:228:43
    |
227 | impl<'a> FromDer<'a, X509Error> for TbsCertList<'a> {
    |      -- lifetime `'a` declared here
228 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/revocation_list.rs:345:43
    |
344 | impl<'a> FromDer<'a, X509Error> for RevokedCertificate<'a> {
    |      -- lifetime `'a` declared here
345 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/signature_algorithm.rs:265:42
    |
218 | impl<'a> RsaAesOaepParams<'a> {
    |      -- lifetime `'a` declared here
...
265 |     pub fn p_source_alg(&'a self) -> &'a AlgorithmIdentifier {
    |                                          ^^^^^^^^^^^^^^^^^^^ this elided lifetime gets resolved as `'a`

warning: unnecessary qualification
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/time.rs:99:20
   |
99 |         return Err(nom::Err::Error(Error::InvalidLength));
   |                    ^^^^^^^^^^^^^^^
   |
help: remove the unnecessary path segments
   |
99 -         return Err(nom::Err::Error(Error::InvalidLength));
99 +         return Err(Err::Error(Error::InvalidLength));
   |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/time.rs:114:17
    |
114 |             Err(nom::Err::Error(Error::BerValueError))
    |                 ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
114 -             Err(nom::Err::Error(Error::BerValueError))
114 +             Err(Err::Error(Error::BerValueError))
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/time.rs:116:18
    |
116 |         _ => Err(nom::Err::Error(Error::unexpected_tag(None, hdr.tag()))),
    |                  ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
116 -         _ => Err(nom::Err::Error(Error::unexpected_tag(None, hdr.tag()))),
116 +         _ => Err(Err::Error(Error::unexpected_tag(None, hdr.tag()))),
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:164:20
    |
164 |         return Err(nom::Err::Error(Error::InvalidLength));
    |                    ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
164 -         return Err(nom::Err::Error(Error::InvalidLength));
164 +         return Err(Err::Error(Error::InvalidLength));
    |

warning: unnecessary qualification
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:177:18
    |
177 |         t => Err(nom::Err::Error(Error::unexpected_tag(
    |                  ^^^^^^^^^^^^^^^
    |
help: remove the unnecessary path segments
    |
177 -         t => Err(nom::Err::Error(Error::unexpected_tag(
177 +         t => Err(Err::Error(Error::unexpected_tag(
    |

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:213:43
    |
212 | impl<'a> FromDer<'a, X509Error> for RelativeDistinguishedName<'a> {
    |      -- lifetime `'a` declared here
213 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:263:43
    |
261 | impl<'a> FromDer<'a, X509Error> for SubjectPublicKeyInfo<'a> {
    |      -- lifetime `'a` declared here
262 |     /// Parse the SubjectPublicKeyInfo struct portion of a DER-encoded X.509 Certificate
263 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:313:39
    |
303 | impl<'a> AlgorithmIdentifier<'a> {
    |      -- lifetime `'a` declared here
...
313 |     pub const fn oid(&'a self) -> &'a Oid {
    |                                       ^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:318:53
    |
303 | impl<'a> AlgorithmIdentifier<'a> {
    |      -- lifetime `'a` declared here
...
318 |     pub const fn parameters(&'a self) -> Option<&'a Any> {
    |                                                     ^^^ this elided lifetime gets resolved as `'a`

warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x509-parser-0.16.0/src/x509.rs:471:43
    |
469 | impl<'a> FromDer<'a, X509Error> for X509Name<'a> {
    |      -- lifetime `'a` declared here
470 |     /// Parse the X.501 type Name, used for ex in issuer and subject of a X.509 certificate
471 |     fn from_der(i: &'a [u8]) -> X509Result<Self> {
    |                                           ^ this elided lifetime gets resolved as `'a`

warning: `tokio-native-tls` (lib) generated 5 warnings (5 duplicates)
warning: `der-parser` (lib) generated 46 warnings (5 duplicates)
warning: `asn1-rs` (lib) generated 67 warnings (5 duplicates)
warning: `der-parser` (lib) generated 46 warnings (5 duplicates)
warning: `asn1-rs` (lib) generated 35 warnings (5 duplicates)
warning: `tokio-util` (lib) generated 5 warnings (5 duplicates)
   Compiling rcgen v0.13.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rcgen CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rcgen-0.13.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rcgen-0.13.2/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Rust X.509 certificate generator' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rcgen CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rustls/rcgen' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rcgen --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rcgen-0.13.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="crypto"' --cfg 'feature="default"' --cfg 'feature="pem"' --cfg 'feature="ring"' --cfg 'feature="x509-parser"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("aws_lc_rs", "crypto", "default", "fips", "pem", "ring", "x509-parser", "zeroize"))' -C metadata=a10bf83f3f681796 -C extra-filename=-b7dd5d61f9d707a4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern pem=/home/ivo/massive_game_server/target/release/deps/libpem-1da381a620d447cd.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern pki_types=/home/ivo/massive_game_server/target/release/deps/librustls_pki_types-9904dc4fb64ea0b1.rmeta --extern time=/home/ivo/massive_game_server/target/release/deps/libtime-423f613bbccab165.rmeta --extern x509_parser=/home/ivo/massive_game_server/target/release/deps/libx509_parser-4c70a353e3749027.rmeta --extern yasna=/home/ivo/massive_game_server/target/release/deps/libyasna-b3f17670b84203bb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: `zerofrom-derive` (lib) generated 5 warnings (5 duplicates)
   Compiling zerofrom v0.1.6
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerofrom CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='ZeroFrom trait for constructing' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerofrom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.1.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerofrom --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive"))' -C metadata=a9b07475151dd755 -C extra-filename=-b52c972c887ce16e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zerofrom_derive=/home/ivo/massive_game_server/target/release/deps/libzerofrom_derive-ff77953f0a75f884.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerofrom CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='ZeroFrom trait for constructing' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerofrom CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.1.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerofrom --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerofrom-0.1.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive"))' -C metadata=46e73b7e63e1af07 -C extra-filename=-bd48f8fbd962f3ac --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zerofrom_derive=/home/ivo/massive_game_server/target/release/deps/libzerofrom_derive-ff77953f0a75f884.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling yoke v0.8.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=yoke CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Abstraction allowing borrowed data to be carried along with the backing data it borrows from' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=yoke CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name yoke --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --cfg 'feature="zerofrom"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive", "serde", "zerofrom"))' -C metadata=ecebd77d169d0c30 -C extra-filename=-702dfe33e400d67e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern stable_deref_trait=/home/ivo/massive_game_server/target/release/deps/libstable_deref_trait-91844861366bfe7b.rmeta --extern yoke_derive=/home/ivo/massive_game_server/target/release/deps/libyoke_derive-4d01b5a2132b0455.so --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-b52c972c887ce16e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=yoke CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='Manish Goregaokar <manishsmail@gmail.com>' CARGO_PKG_DESCRIPTION='Abstraction allowing borrowed data to be carried along with the backing data it borrows from' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=yoke CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name yoke --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/yoke-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --cfg 'feature="zerofrom"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive", "serde", "zerofrom"))' -C metadata=ebf45d397797d76e -C extra-filename=-6a6acb174edf4dab --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern stable_deref_trait=/home/ivo/massive_game_server/target/release/deps/libstable_deref_trait-f61a000fef546cfd.rmeta --extern yoke_derive=/home/ivo/massive_game_server/target/release/deps/libyoke_derive-4d01b5a2132b0455.so --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-bd48f8fbd962f3ac.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `zerofrom` (lib) generated 5 warnings (5 duplicates)
warning: `zerofrom` (lib) generated 5 warnings (5 duplicates)
   Compiling zerovec v0.11.2
   Compiling zerotrie v0.2.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerovec CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Zero-copy vector backed by a byte array' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerovec CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.11.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerovec --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --cfg 'feature="yoke"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "derive", "hashmap", "serde", "std", "yoke"))' -C metadata=bc1d78a11d13975f -C extra-filename=-a46d353a83726c98 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-702dfe33e400d67e.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-b52c972c887ce16e.rmeta --extern zerovec_derive=/home/ivo/massive_game_server/target/release/deps/libzerovec_derive-1762bb0d58ab5ad5.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerotrie CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A data structure that efficiently maps strings to integers' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerotrie CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.2.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerotrie --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="yoke"' --cfg 'feature="zerofrom"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "litemap", "serde", "yoke", "zerofrom", "zerovec"))' -C metadata=3a3e8710208636e3 -C extra-filename=-c082f0617b2f777e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-702dfe33e400d67e.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-b52c972c887ce16e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerovec CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Zero-copy vector backed by a byte array' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerovec CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.11.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerovec --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerovec-0.11.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="derive"' --cfg 'feature="yoke"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "derive", "hashmap", "serde", "std", "yoke"))' -C metadata=0904a316fa65f82d -C extra-filename=-189c6a4eb08108b8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-6a6acb174edf4dab.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-bd48f8fbd962f3ac.rmeta --extern zerovec_derive=/home/ivo/massive_game_server/target/release/deps/libzerovec_derive-1762bb0d58ab5ad5.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=zerotrie CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A data structure that efficiently maps strings to integers' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=zerotrie CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=0.2.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name zerotrie --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/zerotrie-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="yoke"' --cfg 'feature="zerofrom"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "litemap", "serde", "yoke", "zerofrom", "zerovec"))' -C metadata=a9dbe5253781528e -C extra-filename=-6e12543bbff935e4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-6a6acb174edf4dab.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-bd48f8fbd962f3ac.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `yoke` (lib) generated 5 warnings (5 duplicates)
warning: `yoke` (lib) generated 5 warnings (5 duplicates)
warning: `zerotrie` (lib) generated 5 warnings (5 duplicates)
warning: `zerotrie` (lib) generated 5 warnings (5 duplicates)
warning: `prometheus` (lib) generated 5 warnings (5 duplicates)
   Compiling tinystr v0.8.1
   Compiling potential_utf v0.1.2
warning: `tracing-attributes` (lib) generated 5 warnings (5 duplicates)
   Compiling tracing v0.1.41
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tinystr CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A small ASCII-only bounded length string representation.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tinystr CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.8.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tinystr --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "serde", "std", "zerovec"))' -C metadata=9e62cf5d125bfa24 -C extra-filename=-6544fd748d395d1f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/Cargo.toml CARGO_PKG_AUTHORS='Eliza Weisman <eliza@buoyant.io>:Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Application-level tracing for Rust.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.1.41 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=41 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(flaky_tests)' --check-cfg 'cfg(tracing_unstable)' --cfg 'feature="attributes"' --cfg 'feature="default"' --cfg 'feature="log"' --cfg 'feature="std"' --cfg 'feature="tracing-attributes"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("async-await", "attributes", "default", "log", "log-always", "max_level_debug", "max_level_error", "max_level_info", "max_level_off", "max_level_trace", "max_level_warn", "release_max_level_debug", "release_max_level_error", "release_max_level_info", "release_max_level_off", "release_max_level_trace", "release_max_level_warn", "std", "tracing-attributes", "valuable"))' -C metadata=f1783568f2ea02db -C extra-filename=-76740ab854628d38 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern tracing_attributes=/home/ivo/massive_game_server/target/release/deps/libtracing_attributes-707ca32e046297ff.so --extern tracing_core=/home/ivo/massive_game_server/target/release/deps/libtracing_core-9ebeaf34b772be2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=potential_utf CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Unvalidated string and character types' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=potential_utf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.1.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name potential_utf --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde", "writeable", "zerovec"))' -C metadata=96969ddf935f5714 -C extra-filename=-e37001ed572b3c45 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tinystr CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='A small ASCII-only bounded length string representation.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tinystr CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.8.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tinystr --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tinystr-0.8.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "default", "serde", "std", "zerovec"))' -C metadata=826b91aee7ce4b05 -C extra-filename=-704af0ebefcfe997 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=potential_utf CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Unvalidated string and character types' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=potential_utf CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.81 CARGO_PKG_VERSION=0.1.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name potential_utf --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/potential_utf-0.1.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde", "writeable", "zerovec"))' -C metadata=514e6480a879a6a2 -C extra-filename=-27c1ac985b477326 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `zerovec` (lib) generated 5 warnings (5 duplicates)
warning: `zerovec` (lib) generated 5 warnings (5 duplicates)
   Compiling icu_collections v2.0.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_collections CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Collection of API for use in ICU libraries.' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_collections CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_collections --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde"))' -C metadata=da76923f91803227 -C extra-filename=-69aecad52399be30 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern potential_utf=/home/ivo/massive_game_server/target/release/deps/libpotential_utf-e37001ed572b3c45.rmeta --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-702dfe33e400d67e.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-b52c972c887ce16e.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_collections CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Collection of API for use in ICU libraries.' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_collections CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_collections --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_collections-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde"))' -C metadata=8f4023cab42e9960 -C extra-filename=-f8dd5d9d1732028a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern potential_utf=/home/ivo/massive_game_server/target/release/deps/libpotential_utf-27c1ac985b477326.rmeta --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-6a6acb174edf4dab.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-bd48f8fbd962f3ac.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `potential_utf` (lib) generated 5 warnings (5 duplicates)
warning: `potential_utf` (lib) generated 5 warnings (5 duplicates)
   Compiling icu_locale_core v2.0.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_locale_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='API for managing Unicode Language and Locale Identifiers' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_locale_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_locale_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde", "zerovec"))' -C metadata=9f013fda319653dc -C extra-filename=-ad13cee4e49edfcb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern litemap=/home/ivo/massive_game_server/target/release/deps/liblitemap-099b00c0c487b1a7.rmeta --extern tinystr=/home/ivo/massive_game_server/target/release/deps/libtinystr-6544fd748d395d1f.rmeta --extern writeable=/home/ivo/massive_game_server/target/release/deps/libwriteable-f9d7826b6e876464.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_locale_core CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='API for managing Unicode Language and Locale Identifiers' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_locale_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_locale_core --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_locale_core-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="zerovec"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "databake", "serde", "zerovec"))' -C metadata=fda8f07add50e09c -C extra-filename=-d1d7e7e7e976431a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern litemap=/home/ivo/massive_game_server/target/release/deps/liblitemap-da5b9d21cc3a9d09.rmeta --extern tinystr=/home/ivo/massive_game_server/target/release/deps/libtinystr-704af0ebefcfe997.rmeta --extern writeable=/home/ivo/massive_game_server/target/release/deps/libwriteable-62635abe4920d665.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `tinystr` (lib) generated 5 warnings (5 duplicates)
   Compiling h2 v0.3.26
   Compiling quinn-proto v0.10.6
   Compiling quinn-udp v0.4.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=h2 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.26 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.26/Cargo.toml CARGO_PKG_AUTHORS='Carl Lerche <me@carllerche.com>:Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='An HTTP/2 client and server' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=h2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/h2' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.3.26 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=26 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name h2 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.26/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("stream", "unstable"))' -C metadata=7cd310eb453a2683 -C extra-filename=-1e43e6b800dcdf32 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern fnv=/home/ivo/massive_game_server/target/release/deps/libfnv-c408408c4d03e488.rmeta --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_sink=/home/ivo/massive_game_server/target/release/deps/libfutures_sink-f80d8fdd34ee7a48.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern indexmap=/home/ivo/massive_game_server/target/release/deps/libindexmap-b12568fe01c9c06c.rmeta --extern slab=/home/ivo/massive_game_server/target/release/deps/libslab-62cea3ce9179a499.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tokio_util=/home/ivo/massive_game_server/target/release/deps/libtokio_util-55513c602ff72ac0.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=quinn_proto CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='State machine for the QUIC transport protocol' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=quinn-proto CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/quinn-rs/quinn' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.10.6 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=6 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name quinn_proto --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="log"' --cfg 'feature="native-certs"' --cfg 'feature="ring"' --cfg 'feature="rustls"' --cfg 'feature="rustls-native-certs"' --cfg 'feature="tls-rustls"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "default", "log", "native-certs", "ring", "rustls", "rustls-native-certs", "tls-rustls"))' -C metadata=183cbe0d6724232e -C extra-filename=-be785cd685458f95 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-b814a3e37653cdaa.rmeta --extern rustc_hash=/home/ivo/massive_game_server/target/release/deps/librustc_hash-227cfb528a67c219.rmeta --extern rustls=/home/ivo/massive_game_server/target/release/deps/librustls-51fa3669b784e5ff.rmeta --extern rustls_native_certs=/home/ivo/massive_game_server/target/release/deps/librustls_native_certs-0edfc1185b774fa6.rmeta --extern slab=/home/ivo/massive_game_server/target/release/deps/libslab-62cea3ce9179a499.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tinyvec=/home/ivo/massive_game_server/target/release/deps/libtinyvec-27f78054032708ee.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=quinn_udp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-udp-0.4.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-udp-0.4.1/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='UDP sockets with ECN information for the QUIC transport protocol' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=quinn-udp CARGO_PKG_README='' CARGO_PKG_REPOSITORY='https://github.com/quinn-rs/quinn' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.4.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=4 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name quinn_udp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-udp-0.4.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="log"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "log"))' -C metadata=0dde702dc4416570 -C extra-filename=-20db09e65d2d6364 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern socket2=/home/ivo/massive_game_server/target/release/deps/libsocket2-4f205d40749fb3ef.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `tinystr` (lib) generated 5 warnings (5 duplicates)
warning: `tracing` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/lib.rs:15:17
   |
15 | #![cfg_attr(not(fuzzing), warn(missing_docs))]
   |                 ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/lib.rs:85:7
   |
85 | #[cfg(fuzzing)]
   |       ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/mod.rs:60:7
   |
60 | #[cfg(fuzzing)]
   |       ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/mod.rs:62:11
   |
62 | #[cfg(not(fuzzing))]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/mod.rs:70:7
   |
70 | #[cfg(fuzzing)]
   |       ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/mod.rs:72:11
   |
72 | #[cfg(not(fuzzing))]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/streams/mod.rs:35:11
   |
35 |     #[cfg(fuzzing)]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/streams/mod.rs:78:11
   |
78 |     #[cfg(fuzzing)]
   |           ^^^^^^^
   |
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition name: `fuzzing`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-proto-0.10.6/src/connection/streams/mod.rs:173:11
    |
173 |     #[cfg(fuzzing)]
    |           ^^^^^^^
    |
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: `quinn-udp` (lib) generated 5 warnings (5 duplicates)
warning: `icu_collections` (lib) generated 5 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `fuzzing`
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/h2-0.3.26/src/lib.rs:132:7
    |
132 | #[cfg(fuzzing)]
    |       ^^^^^^^
    |
    = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
    = help: consider using a Cargo feature instead
    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
             [lints.rust]
             unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
    = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
    = note: `#[warn(unexpected_cfgs)]` on by default

warning: `icu_collections` (lib) generated 5 warnings (5 duplicates)
   Compiling icu_provider v2.0.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_provider CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Trait and struct definitions for the ICU data provider' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_provider CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_provider --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="baked"' --cfg 'feature="zerotrie"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "baked", "deserialize_bincode_1", "deserialize_json", "deserialize_postcard_1", "export", "logging", "serde", "std", "sync", "zerotrie"))' -C metadata=88f4e8f249adbec1 -C extra-filename=-48bc4d68a03e6108 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_locale_core=/home/ivo/massive_game_server/target/release/deps/libicu_locale_core-ad13cee4e49edfcb.rmeta --extern stable_deref_trait=/home/ivo/massive_game_server/target/release/deps/libstable_deref_trait-91844861366bfe7b.rmeta --extern tinystr=/home/ivo/massive_game_server/target/release/deps/libtinystr-6544fd748d395d1f.rmeta --extern writeable=/home/ivo/massive_game_server/target/release/deps/libwriteable-f9d7826b6e876464.rmeta --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-702dfe33e400d67e.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-b52c972c887ce16e.rmeta --extern zerotrie=/home/ivo/massive_game_server/target/release/deps/libzerotrie-c082f0617b2f777e.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_provider CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Trait and struct definitions for the ICU data provider' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_provider CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_provider --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_provider-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="baked"' --cfg 'feature="zerotrie"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "baked", "deserialize_bincode_1", "deserialize_json", "deserialize_postcard_1", "export", "logging", "serde", "std", "sync", "zerotrie"))' -C metadata=53c2ccd3ec7bb192 -C extra-filename=-5df7fcb8358f1aa0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_locale_core=/home/ivo/massive_game_server/target/release/deps/libicu_locale_core-d1d7e7e7e976431a.rmeta --extern stable_deref_trait=/home/ivo/massive_game_server/target/release/deps/libstable_deref_trait-f61a000fef546cfd.rmeta --extern tinystr=/home/ivo/massive_game_server/target/release/deps/libtinystr-704af0ebefcfe997.rmeta --extern writeable=/home/ivo/massive_game_server/target/release/deps/libwriteable-62635abe4920d665.rmeta --extern yoke=/home/ivo/massive_game_server/target/release/deps/libyoke-6a6acb174edf4dab.rmeta --extern zerofrom=/home/ivo/massive_game_server/target/release/deps/libzerofrom-bd48f8fbd962f3ac.rmeta --extern zerotrie=/home/ivo/massive_game_server/target/release/deps/libzerotrie-6e12543bbff935e4.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling icu_properties v2.0.1
   Compiling icu_normalizer v2.0.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_properties CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Definitions for Unicode properties' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_properties --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compiled_data", "datagen", "default", "serde", "unicode_bidi"))' -C metadata=0627e06ab3c23ec8 -C extra-filename=-079ea4bc6c4bf61f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_collections=/home/ivo/massive_game_server/target/release/deps/libicu_collections-69aecad52399be30.rmeta --extern icu_locale_core=/home/ivo/massive_game_server/target/release/deps/libicu_locale_core-ad13cee4e49edfcb.rmeta --extern icu_properties_data=/home/ivo/massive_game_server/target/release/deps/libicu_properties_data-3741682bb07d8e13.rmeta --extern icu_provider=/home/ivo/massive_game_server/target/release/deps/libicu_provider-48bc4d68a03e6108.rmeta --extern potential_utf=/home/ivo/massive_game_server/target/release/deps/libpotential_utf-e37001ed572b3c45.rmeta --extern zerotrie=/home/ivo/massive_game_server/target/release/deps/libzerotrie-c082f0617b2f777e.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_normalizer CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='API for normalizing text into Unicode Normalization Forms' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_normalizer --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiled_data", "datagen", "default", "experimental", "icu_properties", "serde", "utf16_iter", "utf8_iter", "write16"))' -C metadata=2127c9cdaae0d887 -C extra-filename=-fa2512bee7177589 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_collections=/home/ivo/massive_game_server/target/release/deps/libicu_collections-69aecad52399be30.rmeta --extern icu_normalizer_data=/home/ivo/massive_game_server/target/release/deps/libicu_normalizer_data-c110d135379973c5.rmeta --extern icu_provider=/home/ivo/massive_game_server/target/release/deps/libicu_provider-48bc4d68a03e6108.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-a46d353a83726c98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_normalizer CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='API for normalizing text into Unicode Normalization Forms' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_normalizer CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.0 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_normalizer --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_normalizer-2.0.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiled_data", "datagen", "default", "experimental", "icu_properties", "serde", "utf16_iter", "utf8_iter", "write16"))' -C metadata=ce0cd53c66bff176 -C extra-filename=-2eeec28baead0aae --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_collections=/home/ivo/massive_game_server/target/release/deps/libicu_collections-f8dd5d9d1732028a.rmeta --extern icu_normalizer_data=/home/ivo/massive_game_server/target/release/deps/libicu_normalizer_data-7f3c0c9afbca3968.rmeta --extern icu_provider=/home/ivo/massive_game_server/target/release/deps/libicu_provider-5df7fcb8358f1aa0.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-2515caadcd8dc652.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=icu_properties CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/Cargo.toml CARGO_PKG_AUTHORS='The ICU4X Project Developers' CARGO_PKG_DESCRIPTION='Definitions for Unicode properties' CARGO_PKG_HOMEPAGE='https://icu4x.unicode.org' CARGO_PKG_LICENSE=Unicode-3.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=icu_properties CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/unicode-org/icu4x' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=2.0.1 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name icu_properties --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/icu_properties-2.0.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compiled_data", "datagen", "default", "serde", "unicode_bidi"))' -C metadata=433353f61f8c0303 -C extra-filename=-0d31e214438f70b7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern displaydoc=/home/ivo/massive_game_server/target/release/deps/libdisplaydoc-44554dbcf91ac445.so --extern icu_collections=/home/ivo/massive_game_server/target/release/deps/libicu_collections-f8dd5d9d1732028a.rmeta --extern icu_locale_core=/home/ivo/massive_game_server/target/release/deps/libicu_locale_core-d1d7e7e7e976431a.rmeta --extern icu_properties_data=/home/ivo/massive_game_server/target/release/deps/libicu_properties_data-f507c71442e0731a.rmeta --extern icu_provider=/home/ivo/massive_game_server/target/release/deps/libicu_provider-5df7fcb8358f1aa0.rmeta --extern potential_utf=/home/ivo/massive_game_server/target/release/deps/libpotential_utf-27c1ac985b477326.rmeta --extern zerotrie=/home/ivo/massive_game_server/target/release/deps/libzerotrie-6e12543bbff935e4.rmeta --extern zerovec=/home/ivo/massive_game_server/target/release/deps/libzerovec-189c6a4eb08108b8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `icu_provider` (lib) generated 5 warnings (5 duplicates)
warning: `icu_provider` (lib) generated 5 warnings (5 duplicates)
warning: `async-trait` (lib) generated 5 warnings (5 duplicates)
   Compiling webrtc-util v0.9.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_util CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-util-0.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-util-0.9.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='Utilities for WebRTC.rs stack' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-util CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/util' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_util --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-util-0.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="buffer"' --cfg 'feature="conn"' --cfg 'feature="default"' --cfg 'feature="ifaces"' --cfg 'feature="marshal"' --cfg 'feature="sync"' --cfg 'feature="vnet"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("buffer", "conn", "default", "ifaces", "marshal", "sync", "vnet"))' -C metadata=7d9af851815c77ea -C extra-filename=-a9fffafdfac234fb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern ipnet=/home/ivo/massive_game_server/target/release/deps/libipnet-adee52ea694b89e3.rmeta --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern nix=/home/ivo/massive_game_server/target/release/deps/libnix-abbe4b0048e8198f.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `serde_derive` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A generic serialization/deserialization framework' CARGO_PKG_HOMEPAGE='https://serde.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde CARGO_PKG_README=crates-io.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/serde' CARGO_PKG_RUST_VERSION=1.31 CARGO_PKG_VERSION=1.0.219 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=219 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/serde-3b2237d1d2526c97/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde-1.0.219/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="derive"' --cfg 'feature="rc"' --cfg 'feature="serde_derive"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "default", "derive", "rc", "serde_derive", "std", "unstable"))' -C metadata=06c76deb03387d2e -C extra-filename=-517b2e6e11e3ed0e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern serde_derive=/home/ivo/massive_game_server/target/release/deps/libserde_derive-025b8efea33993b2.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --check-cfg 'cfg(no_core_cstr)' --check-cfg 'cfg(no_core_error)' --check-cfg 'cfg(no_core_net)' --check-cfg 'cfg(no_core_num_saturating)' --check-cfg 'cfg(no_core_try_from)' --check-cfg 'cfg(no_diagnostic_namespace)' --check-cfg 'cfg(no_float_copysign)' --check-cfg 'cfg(no_num_nonzero_signed)' --check-cfg 'cfg(no_relaxed_trait_bounds)' --check-cfg 'cfg(no_serde_derive)' --check-cfg 'cfg(no_std_atomic)' --check-cfg 'cfg(no_std_atomic64)' --check-cfg 'cfg(no_systemtime_checked_add)' --check-cfg 'cfg(no_target_has_atomic)'`
warning: `icu_normalizer` (lib) generated 5 warnings (5 duplicates)
warning: `icu_locale_core` (lib) generated 5 warnings (5 duplicates)
   Compiling idna_adapter v1.2.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=idna_adapter CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Back end adapter for idna' CARGO_PKG_HOMEPAGE='https://docs.rs/crate/idna_adapter/latest' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=idna_adapter CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hsivonen/idna_adapter' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=1.2.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name idna_adapter --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiled_data"))' -C metadata=30e8af88fd62b43c -C extra-filename=-f31868bf6876e4e7 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern icu_normalizer=/home/ivo/massive_game_server/target/release/deps/libicu_normalizer-2eeec28baead0aae.rmeta --extern icu_properties=/home/ivo/massive_game_server/target/release/deps/libicu_properties-0d31e214438f70b7.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=idna_adapter CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='Back end adapter for idna' CARGO_PKG_HOMEPAGE='https://docs.rs/crate/idna_adapter/latest' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=idna_adapter CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hsivonen/idna_adapter' CARGO_PKG_RUST_VERSION=1.82 CARGO_PKG_VERSION=1.2.1 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name idna_adapter --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna_adapter-1.2.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="compiled_data"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("compiled_data"))' -C metadata=102cef40aaa486ff -C extra-filename=-2b080aebd4d6899e --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern icu_normalizer=/home/ivo/massive_game_server/target/release/deps/libicu_normalizer-fa2512bee7177589.rmeta --extern icu_properties=/home/ivo/massive_game_server/target/release/deps/libicu_properties-079ea4bc6c4bf61f.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `tokio` (lib) generated 5 warnings (5 duplicates)
   Compiling idna v1.0.3
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=idna CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='IDNA (Internationalizing Domain Names in Applications) and Punycode.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=idna CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url/' CARGO_PKG_RUST_VERSION=1.57 CARGO_PKG_VERSION=1.0.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name idna --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="compiled_data"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compiled_data", "default", "std"))' -C metadata=6806ddfe5d808370 -C extra-filename=-9bd38ba050dbd2ba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern idna_adapter=/home/ivo/massive_game_server/target/release/deps/libidna_adapter-f31868bf6876e4e7.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-2515caadcd8dc652.rmeta --extern utf8_iter=/home/ivo/massive_game_server/target/release/deps/libutf8_iter-bf959edf6d052201.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=idna CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='IDNA (Internationalizing Domain Names in Applications) and Punycode.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=idna CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url/' CARGO_PKG_RUST_VERSION=1.57 CARGO_PKG_VERSION=1.0.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name idna --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/idna-1.0.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="alloc"' --cfg 'feature="compiled_data"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "compiled_data", "default", "std"))' -C metadata=d5f8318466afad22 -C extra-filename=-2503fc7b223dcd9a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern idna_adapter=/home/ivo/massive_game_server/target/release/deps/libidna_adapter-2b080aebd4d6899e.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rmeta --extern utf8_iter=/home/ivo/massive_game_server/target/release/deps/libutf8_iter-90173e31af3bae98.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `idna_adapter` (lib) generated 5 warnings (5 duplicates)
warning: `idna_adapter` (lib) generated 5 warnings (5 duplicates)
warning: `icu_properties` (lib) generated 5 warnings (5 duplicates)
warning: `icu_normalizer` (lib) generated 5 warnings (5 duplicates)
   Compiling url v2.5.4
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=url CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='URL library for Rust, based on the WHATWG URL Standard' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=url CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=2.5.4 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name url --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("debugger_visualizer", "default", "expose_internals", "serde", "std"))' -C metadata=c237e46896c84c60 -C extra-filename=-c2bc442258361113 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern form_urlencoded=/home/ivo/massive_game_server/target/release/deps/libform_urlencoded-d467a9d7be0e26f2.rmeta --extern idna=/home/ivo/massive_game_server/target/release/deps/libidna-9bd38ba050dbd2ba.rmeta --extern percent_encoding=/home/ivo/massive_game_server/target/release/deps/libpercent_encoding-ca9e75f992189b17.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=url CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/Cargo.toml CARGO_PKG_AUTHORS='The rust-url developers' CARGO_PKG_DESCRIPTION='URL library for Rust, based on the WHATWG URL Standard' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=url CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/servo/rust-url' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=2.5.4 CARGO_PKG_VERSION_MAJOR=2 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=4 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name url --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/url-2.5.4/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("debugger_visualizer", "default", "expose_internals", "serde", "std"))' -C metadata=9c2e6ff7aa58837c -C extra-filename=-385775a28a7af8f2 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern form_urlencoded=/home/ivo/massive_game_server/target/release/deps/libform_urlencoded-c98379f6f3f8d959.rmeta --extern idna=/home/ivo/massive_game_server/target/release/deps/libidna-2503fc7b223dcd9a.rmeta --extern percent_encoding=/home/ivo/massive_game_server/target/release/deps/libpercent_encoding-cf34d17ff91aac01.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `icu_locale_core` (lib) generated 5 warnings (5 duplicates)
warning: `icu_properties` (lib) generated 5 warnings (5 duplicates)
   Compiling rtcp v0.11.0
   Compiling webrtc-mdns v0.7.0
   Compiling webrtc-sctp v0.10.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rtcp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtcp-0.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtcp-0.11.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>:Michael Uti <utimichael9@gmail.com>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of RTCP' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rtcp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/rtcp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.11.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rtcp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtcp-0.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=ddd1fa2d1b9d5291 -C extra-filename=-471e871d95876785 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_mdns CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-mdns-0.7.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-mdns-0.7.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yuliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of mDNS' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-mdns CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/mdns' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_mdns --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-mdns-0.7.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="reuse_port"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "reuse_port"))' -C metadata=306d104910e0bb92 -C extra-filename=-a5e5b6656188f7e8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern socket2=/home/ivo/massive_game_server/target/release/deps/libsocket2-4f205d40749fb3ef.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_sctp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-sctp-0.10.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-sctp-0.10.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of SCTP' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-sctp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/sctp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_sctp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-sctp-0.10.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=fb038bec08bb5817 -C extra-filename=-2042d92118d8b029 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern arc_swap=/home/ivo/massive_game_server/target/release/deps/libarc_swap-0608e6621d058498.rmeta --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern crc=/home/ivo/massive_game_server/target/release/deps/libcrc-7db4ebee9806bc43.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `x509-parser` (lib) generated 28 warnings (5 duplicates)
warning: unexpected `cfg` condition name: `fuzzing`
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-sctp-0.10.0/src/packet.rs:95:19
   |
95 |         #[cfg(not(fuzzing))]
   |                   ^^^^^^^
   |
   = help: expected names are: `docsrs`, `feature`, and `test` and 31 more
   = help: consider using a Cargo feature instead
   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:
            [lints.rust]
            unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
   = help: or consider adding `println!("cargo::rustc-check-cfg=cfg(fuzzing)");` to the top of the `build.rs`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

   Compiling git2 v0.20.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=git2 CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/git2-0.20.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/git2-0.20.2/Cargo.toml CARGO_PKG_AUTHORS='Josh Triplett <josh@joshtriplett.org>:Alex Crichton <alex@alexcrichton.com>' CARGO_PKG_DESCRIPTION='Bindings to libgit2 for interoperating with git repositories. This library is
both threadsafe and memory safe and allows both reading and writing git
repositories.
' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=git2 CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-lang/git2-rs' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.20.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=20 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name git2 --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/git2-0.20.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "https", "openssl-probe", "openssl-sys", "ssh", "unstable", "vendored-libgit2", "vendored-openssl", "zlib-ng-compat"))' -C metadata=a90ca7979a20caa1 -C extra-filename=-94e5550304ce34e8 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bitflags=/home/ivo/massive_game_server/target/release/deps/libbitflags-e9ee1768cb8db9b9.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-b1f6962553262e28.rmeta --extern libgit2_sys=/home/ivo/massive_game_server/target/release/deps/liblibgit2_sys-1bb783763c4dfdb4.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f227cc9ddaa23ca.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-c2bc442258361113.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build`
   Compiling stun v0.6.0
   Compiling tungstenite v0.21.0
   Compiling sdp v0.6.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=stun CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stun-0.6.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stun-0.6.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yuliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of STUN' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=stun CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/stun' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.6.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name stun --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/stun-0.6.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("bench", "default"))' -C metadata=7401b190c8303ba6 -C extra-filename=-f991713e7c987e84 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-f0e2d0711532d445.rmeta --extern crc=/home/ivo/massive_game_server/target/release/deps/libcrc-7db4ebee9806bc43.rmeta --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --extern md5=/home/ivo/massive_game_server/target/release/deps/libmd5-d417946d05760a5c.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-385775a28a7af8f2.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tungstenite CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tungstenite-0.21.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tungstenite-0.21.0/Cargo.toml CARGO_PKG_AUTHORS='Alexey Galakhov:Daniel Abramov' CARGO_PKG_DESCRIPTION='Lightweight stream-based WebSocket implementation' CARGO_PKG_HOMEPAGE='https://github.com/snapview/tungstenite-rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tungstenite CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/snapview/tungstenite-rs' CARGO_PKG_RUST_VERSION=1.51 CARGO_PKG_VERSION=0.21.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tungstenite --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tungstenite-0.21.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="data-encoding"' --cfg 'feature="handshake"' --cfg 'feature="http"' --cfg 'feature="httparse"' --cfg 'feature="sha1"' --cfg 'feature="url"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__rustls-tls", "data-encoding", "default", "handshake", "http", "httparse", "native-tls", "native-tls-crate", "native-tls-vendored", "rustls", "rustls-native-certs", "rustls-pki-types", "rustls-tls-native-roots", "rustls-tls-webpki-roots", "sha1", "url", "webpki-roots"))' -C metadata=cfa29d503bda80a3 -C extra-filename=-922d052a1d70305d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern byteorder=/home/ivo/massive_game_server/target/release/deps/libbyteorder-c14529b9ba2f3b32.rmeta --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern data_encoding=/home/ivo/massive_game_server/target/release/deps/libdata_encoding-ee91a5b3944ccfc4.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b360abd0c6ae15c0.rmeta --extern httparse=/home/ivo/massive_game_server/target/release/deps/libhttparse-4e64bb65f11071bd.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern sha1=/home/ivo/massive_game_server/target/release/deps/libsha1-484ae4eed4e01204.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-385775a28a7af8f2.rmeta --extern utf8=/home/ivo/massive_game_server/target/release/deps/libutf8-b49c39bef4fb9914.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=sdp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdp-0.6.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdp-0.6.2/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of SDP' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=sdp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/sdp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.6.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=6 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name sdp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/sdp-0.6.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=d444a03ad6cbbc8d -C extra-filename=-bb25a004ea8f3f52 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern substring=/home/ivo/massive_game_server/target/release/deps/libsubstring-8e3d617b2ea6a171.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-385775a28a7af8f2.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling quinn v0.10.2
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=quinn CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-0.10.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-0.10.2/Cargo.toml CARGO_PKG_AUTHORS='' CARGO_PKG_DESCRIPTION='Versatile QUIC transport protocol implementation' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=quinn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/quinn-rs/quinn' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.10.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name quinn --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/quinn-0.10.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="log"' --cfg 'feature="native-certs"' --cfg 'feature="ring"' --cfg 'feature="runtime-tokio"' --cfg 'feature="rustls"' --cfg 'feature="tls-rustls"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("async-io", "async-std", "default", "futures-io", "lock_tracking", "log", "native-certs", "ring", "runtime-async-std", "runtime-tokio", "rustls", "tls-rustls"))' -C metadata=fbe03289282a1926 -C extra-filename=-c3b8c672a1cdba11 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern proto=/home/ivo/massive_game_server/target/release/deps/libquinn_proto-be785cd685458f95.rmeta --extern udp=/home/ivo/massive_game_server/target/release/deps/libquinn_udp-20db09e65d2d6364.rmeta --extern rustc_hash=/home/ivo/massive_game_server/target/release/deps/librustc_hash-227cfb528a67c219.rmeta --extern rustls=/home/ivo/massive_game_server/target/release/deps/librustls-51fa3669b784e5ff.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
   Compiling turn v0.8.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=turn CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/turn-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/turn-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of TURN' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=turn CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/turn' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name turn --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/turn-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("metrics"))' -C metadata=b344360de888bcc7 -C extra-filename=-a9064ba0500b8481 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-f0e2d0711532d445.rmeta --extern futures=/home/ivo/massive_game_server/target/release/deps/libfutures-4d8e87475c11ef20.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern md5=/home/ivo/massive_game_server/target/release/deps/libmd5-d417946d05760a5c.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern stun=/home/ivo/massive_game_server/target/release/deps/libstun-f991713e7c987e84.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tokio_util=/home/ivo/massive_game_server/target/release/deps/libtokio_util-55513c602ff72ac0.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
   Compiling tokio-tungstenite v0.21.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tokio_tungstenite CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-tungstenite-0.21.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-tungstenite-0.21.0/Cargo.toml CARGO_PKG_AUTHORS='Daniel Abramov <dabramov@snapview.de>:Alexey Galakhov <agalakhov@snapview.de>' CARGO_PKG_DESCRIPTION='Tokio binding for Tungstenite, the Lightweight stream-based WebSocket implementation' CARGO_PKG_HOMEPAGE='https://github.com/snapview/tokio-tungstenite' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tokio-tungstenite CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/snapview/tokio-tungstenite' CARGO_PKG_RUST_VERSION=1.63 CARGO_PKG_VERSION=0.21.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=21 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tokio_tungstenite --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tokio-tungstenite-0.21.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="connect"' --cfg 'feature="default"' --cfg 'feature="handshake"' --cfg 'feature="stream"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__rustls-tls", "connect", "default", "handshake", "native-tls", "native-tls-crate", "native-tls-vendored", "rustls", "rustls-native-certs", "rustls-pki-types", "rustls-tls-native-roots", "rustls-tls-webpki-roots", "stream", "tokio-native-tls", "tokio-rustls", "webpki-roots"))' -C metadata=588f0c71947d1891 -C extra-filename=-d85250450182a359 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tungstenite=/home/ivo/massive_game_server/target/release/deps/libtungstenite-922d052a1d70305d.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `idna` (lib) generated 5 warnings (5 duplicates)
warning: `tokio-tungstenite` (lib) generated 5 warnings (5 duplicates)
warning: `url` (lib) generated 5 warnings (5 duplicates)
warning: `rustls` (lib) generated 5 warnings (5 duplicates)
   Compiling webrtc-data v0.9.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_data CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-data-0.9.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-data-0.9.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of WebRTC DataChannel API' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-data CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/data' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.9.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_data --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-data-0.9.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=152568fdf1c2fe7a -C extra-filename=-ccd9d27c3f459d2d --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern sctp=/home/ivo/massive_game_server/target/release/deps/libwebrtc_sctp-2042d92118d8b029.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `rtcp` (lib) generated 5 warnings (5 duplicates)
warning: `sdp` (lib) generated 5 warnings (5 duplicates)
warning: `tungstenite` (lib) generated 5 warnings (5 duplicates)
   Compiling rtp v0.11.0
   Compiling bincode v1.3.3
   Compiling uuid v1.17.0
   Compiling serde_urlencoded v0.7.1
   Compiling smol_str v0.2.2
   Compiling tracing-serde v0.2.0
   Compiling serde_with v3.12.0
   Compiling serde_yaml v0.9.34+deprecated
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=rtp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtp-0.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtp-0.11.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>:Michael Uti <utimichael9@gmail.com>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of RTP' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=rtp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/rtp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.11.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name rtp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rtp-0.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=4ba508a4a0de24e3 -C extra-filename=-c724fc6694a912bb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_json CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/Cargo.toml CARGO_PKG_AUTHORS='Erick Tryzelaar <erick.tryzelaar@gmail.com>:David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='A JSON serialization file format' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_json CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/serde-rs/json' CARGO_PKG_RUST_VERSION=1.56 CARGO_PKG_VERSION=1.0.140 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=0 CARGO_PKG_VERSION_PATCH=140 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/serde_json-84b8acd08db8529a/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_json --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_json-1.0.140/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "arbitrary_precision", "default", "float_roundtrip", "indexmap", "preserve_order", "raw_value", "std", "unbounded_depth"))' -C metadata=a49fb03be07cd91b -C extra-filename=-f10a96ef83087e10 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --extern memchr=/home/ivo/massive_game_server/target/release/deps/libmemchr-55c36a11c0159580.rmeta --extern ryu=/home/ivo/massive_game_server/target/release/deps/libryu-dfc97d2c04cc1031.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl --cfg 'fast_arithmetic="64"' --check-cfg 'cfg(fast_arithmetic, values("32", "64"))'`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=uuid CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/Cargo.toml CARGO_PKG_AUTHORS='Ashley Mannix<ashleymannix@live.com.au>:Dylan DPC<dylan.dpc@gmail.com>:Hunar Roop Kahlon<hunar.roop@gmail.com>' CARGO_PKG_DESCRIPTION='A library to generate and parse UUIDs.' CARGO_PKG_HOMEPAGE='https://github.com/uuid-rs/uuid' CARGO_PKG_LICENSE='Apache-2.0 OR MIT' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=uuid CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/uuid-rs/uuid' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=1.17.0 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=17 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name uuid --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/uuid-1.17.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --allow=unexpected_cfgs --check-cfg 'cfg(uuid_unstable)' --cfg 'feature="default"' --cfg 'feature="rng"' --cfg 'feature="serde"' --cfg 'feature="std"' --cfg 'feature="v4"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "atomic", "borsh", "bytemuck", "default", "fast-rng", "js", "macro-diagnostics", "md5", "rng", "rng-getrandom", "rng-rand", "serde", "sha1", "slog", "std", "uuid-rng-internal-lib", "v1", "v3", "v4", "v5", "v6", "v7", "v8", "zerocopy"))' -C metadata=47f79c975ad5d60c -C extra-filename=-d05ae4a3fb20b3bb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern getrandom=/home/ivo/massive_game_server/target/release/deps/libgetrandom-a159d97e6385c319.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=bincode CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/Cargo.toml CARGO_PKG_AUTHORS='Ty Overby <ty@pre-alpha.com>:Francesco Mazzoli <f@mazzo.li>:David Tolnay <dtolnay@gmail.com>:Zoey Riordan <zoey@dos.cafe>' CARGO_PKG_DESCRIPTION='A binary serialization / deserialization strategy that uses Serde for transforming structs into bytes and vice versa'\!'' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=bincode CARGO_PKG_README=./readme.md CARGO_PKG_REPOSITORY='https://github.com/servo/bincode' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=1.3.3 CARGO_PKG_VERSION_MAJOR=1 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=3 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name bincode --edition=2015 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("i128"))' -C metadata=ead0078bd8c4e575 -C extra-filename=-1b71e276b15a23c0 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_urlencoded CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/Cargo.toml CARGO_PKG_AUTHORS='Anthony Ramine <n.oxyde@gmail.com>' CARGO_PKG_DESCRIPTION='`x-www-form-urlencoded` meets Serde' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_urlencoded CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/nox/serde_urlencoded' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.7.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_urlencoded --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=d59fed0ad1043bb4 -C extra-filename=-feb3e22a6c914f3b --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern form_urlencoded=/home/ivo/massive_game_server/target/release/deps/libform_urlencoded-c98379f6f3f8d959.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --extern ryu=/home/ivo/massive_game_server/target/release/deps/libryu-dfc97d2c04cc1031.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=smol_str CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smol_str-0.2.2 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smol_str-0.2.2/Cargo.toml CARGO_PKG_AUTHORS='Aleksey Kladov <aleksey.kladov@gmail.com>' CARGO_PKG_DESCRIPTION='small-string optimized string type with O(1) clone' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=smol_str CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/rust-analyzer/smol_str' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.2.2 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=2 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name smol_str --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/smol_str-0.2.2/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="serde"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("arbitrary", "default", "serde", "std"))' -C metadata=d4518d1602198f1e -C extra-filename=-67c799ed96718db4 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing_serde CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-serde-0.2.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-serde-0.2.0/Cargo.toml CARGO_PKG_AUTHORS='Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='A compatibility layer for serializing trace data with `serde`
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing-serde CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.2.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=2 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing_serde --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-serde-0.2.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(flaky_tests)' --check-cfg 'cfg(tracing_unstable)' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("valuable", "valuable-serde", "valuable_crate"))' -C metadata=5af00191db71d4ed -C extra-filename=-d1ab247cade94d44 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern tracing_core=/home/ivo/massive_game_server/target/release/deps/libtracing_core-9ebeaf34b772be2a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_with CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with-3.12.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with-3.12.0/Cargo.toml CARGO_PKG_AUTHORS='Jonas Bushart:Marcin Kaźmierczak' CARGO_PKG_DESCRIPTION='Custom de/serialization functions for Rust'\''s serde' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_with CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/jonasbb/serde_with/' CARGO_PKG_RUST_VERSION=1.70 CARGO_PKG_VERSION=3.12.0 CARGO_PKG_VERSION_MAJOR=3 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_with --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_with-3.12.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=rust_2018_idioms --warn=variant_size_differences --warn=unused_import_braces --warn=unused_extern_crates --warn=unexpected_cfgs --warn=trivial_numeric_casts --warn=trivial_casts '--warn=clippy::semicolon_if_nothing_returned' '--warn=clippy::redundant_closure_for_method_calls' --warn=missing_docs '--warn=rustdoc::missing_crate_level_docs' '--allow=clippy::manual-unwrap-or-default' '--allow=clippy::explicit_auto_deref' '--warn=clippy::doc_markdown' '--warn=clippy::default_trait_access' '--warn=clippy::cloned_instead_of_copied' --check-cfg 'cfg(tarpaulin)' --check-cfg 'cfg(tarpaulin_include)' --cfg 'feature="alloc"' --cfg 'feature="default"' --cfg 'feature="macros"' --cfg 'feature="std"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "base64", "chrono", "chrono_0_4", "default", "guide", "hashbrown_0_14", "hashbrown_0_15", "hex", "indexmap", "indexmap_1", "indexmap_2", "json", "macros", "schemars_0_8", "std", "time_0_3"))' -C metadata=05495529461cf7db -C extra-filename=-eb63d31a2556c2ba --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_derive=/home/ivo/massive_game_server/target/release/deps/libserde_derive-025b8efea33993b2.so --extern serde_with_macros=/home/ivo/massive_game_server/target/release/deps/libserde_with_macros-4128cdef7ae517cc.so --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=serde_yaml CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_yaml-0.9.34+deprecated CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_yaml-0.9.34+deprecated/Cargo.toml CARGO_PKG_AUTHORS='David Tolnay <dtolnay@gmail.com>' CARGO_PKG_DESCRIPTION='YAML data format for Serde' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=serde_yaml CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/dtolnay/serde-yaml' CARGO_PKG_RUST_VERSION=1.64 CARGO_PKG_VERSION=0.9.34+deprecated CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=9 CARGO_PKG_VERSION_PATCH=34 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name serde_yaml --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_yaml-0.9.34+deprecated/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=7a4920bfcc0ef10c -C extra-filename=-54d8e07d63b9588a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern indexmap=/home/ivo/massive_game_server/target/release/deps/libindexmap-b12568fe01c9c06c.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --extern ryu=/home/ivo/massive_game_server/target/release/deps/libryu-dfc97d2c04cc1031.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern unsafe_libyaml=/home/ivo/massive_game_server/target/release/deps/libunsafe_libyaml-b6d8f3a3d985b8fc.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `webrtc-mdns` (lib) generated 5 warnings (5 duplicates)
warning: use of deprecated method `std::error::Error::description`: use the Display impl or to_string()
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/serde_urlencoded-0.7.1/src/ser/mod.rs:80:51
   |
80 |             Error::Utf8(ref err) => error::Error::description(err),
   |                                                   ^^^^^^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: `idna` (lib) generated 5 warnings (5 duplicates)
warning: `serde` (lib) generated 5 warnings (5 duplicates)
   Compiling hyper v0.14.32
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hyper CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='A fast and correct HTTP library.' CARGO_PKG_HOMEPAGE='https://hyper.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hyper CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/hyper' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.14.32 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=14 CARGO_PKG_VERSION_PATCH=32 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hyper --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="client"' --cfg 'feature="default"' --cfg 'feature="h2"' --cfg 'feature="http1"' --cfg 'feature="http2"' --cfg 'feature="server"' --cfg 'feature="socket2"' --cfg 'feature="stream"' --cfg 'feature="tcp"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("__internal_happy_eyeballs_tests", "backports", "client", "default", "deprecated", "ffi", "full", "h2", "http1", "http2", "libc", "nightly", "runtime", "server", "socket2", "stream", "tcp"))' -C metadata=b7355909093a7ec8 -C extra-filename=-9d17c60117fa7a53 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern futures_channel=/home/ivo/massive_game_server/target/release/deps/libfutures_channel-f9d05d7240e9556c.rmeta --extern futures_core=/home/ivo/massive_game_server/target/release/deps/libfutures_core-fd24579616c7819b.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern h2=/home/ivo/massive_game_server/target/release/deps/libh2-1e43e6b800dcdf32.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern http_body=/home/ivo/massive_game_server/target/release/deps/libhttp_body-07e4c35b43911fcd.rmeta --extern httparse=/home/ivo/massive_game_server/target/release/deps/libhttparse-4e64bb65f11071bd.rmeta --extern httpdate=/home/ivo/massive_game_server/target/release/deps/libhttpdate-fde3b54d65e3df39.rmeta --extern itoa=/home/ivo/massive_game_server/target/release/deps/libitoa-4f6fbb8eef03411c.rmeta --extern pin_project_lite=/home/ivo/massive_game_server/target/release/deps/libpin_project_lite-7bc3285f3466e61b.rmeta --extern socket2=/home/ivo/massive_game_server/target/release/deps/libsocket2-4f205d40749fb3ef.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tower_service=/home/ivo/massive_game_server/target/release/deps/libtower_service-2099fdbbb5987da4.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --extern want=/home/ivo/massive_game_server/target/release/deps/libwant-79ca31671eaec4a4.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `tracing-serde` (lib) generated 5 warnings (5 duplicates)
warning: `url` (lib) generated 5 warnings (5 duplicates)
warning: `serde_urlencoded` (lib) generated 6 warnings (5 duplicates)
warning: `smol_str` (lib) generated 5 warnings (5 duplicates)
warning: multiple associated functions are never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/byteorder.rs:144:8
    |
130 | pub trait ByteOrder: Clone + Copy {
    |           --------- associated functions in this trait
...
144 |     fn read_i16(buf: &[u8]) -> i16 {
    |        ^^^^^^^^
...
149 |     fn read_i32(buf: &[u8]) -> i32 {
    |        ^^^^^^^^
...
154 |     fn read_i64(buf: &[u8]) -> i64 {
    |        ^^^^^^^^
...
169 |     fn write_i16(buf: &mut [u8], n: i16) {
    |        ^^^^^^^^^
...
174 |     fn write_i32(buf: &mut [u8], n: i32) {
    |        ^^^^^^^^^
...
179 |     fn write_i64(buf: &mut [u8], n: i64) {
    |        ^^^^^^^^^
...
200 |         fn read_i128(buf: &[u8]) -> i128 {
    |            ^^^^^^^^^
...
205 |         fn write_i128(buf: &mut [u8], n: i128) {
    |            ^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: methods `read_i8`, `read_i16`, `read_i32`, `read_i64`, and `read_i128` are never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/byteorder.rs:220:8
    |
211 | pub trait ReadBytesExt: io::Read {
    |           ------------ methods in this trait
...
220 |     fn read_i8(&mut self) -> Result<i8> {
    |        ^^^^^^^
...
234 |     fn read_i16<T: ByteOrder>(&mut self) -> Result<i16> {
    |        ^^^^^^^^
...
248 |     fn read_i32<T: ByteOrder>(&mut self) -> Result<i32> {
    |        ^^^^^^^^
...
262 |     fn read_i64<T: ByteOrder>(&mut self) -> Result<i64> {
    |        ^^^^^^^^
...
291 |         fn read_i128<T: ByteOrder>(&mut self) -> Result<i128> {
    |            ^^^^^^^^^

warning: methods `write_i8`, `write_i16`, `write_i32`, `write_i64`, and `write_i128` are never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/byteorder.rs:308:8
    |
301 | pub trait WriteBytesExt: io::Write {
    |           ------------- methods in this trait
...
308 |     fn write_i8(&mut self, n: i8) -> Result<()> {
    |        ^^^^^^^^
...
320 |     fn write_i16<T: ByteOrder>(&mut self, n: i16) -> Result<()> {
    |        ^^^^^^^^^
...
334 |     fn write_i32<T: ByteOrder>(&mut self, n: i32) -> Result<()> {
    |        ^^^^^^^^^
...
348 |     fn write_i64<T: ByteOrder>(&mut self, n: i64) -> Result<()> {
    |        ^^^^^^^^^
...
377 |         fn write_i128<T: ByteOrder>(&mut self, n: i128) -> Result<()> {
    |            ^^^^^^^^^^

warning: non-local `impl` definition, `impl` blocks should be written at the same level as their item
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/bincode-1.3.3/src/de/mod.rs:272:9
    |
263 | /     fn deserialize_enum<V>(
264 | |         self,
265 | |         _enum: &'static str,
266 | |         _variants: &'static [&'static str],
...   |
269 | |     where
270 | |         V: serde::de::Visitor<'de>,
    | |___________________________________- move the `impl` block outside of this method `deserialize_enum`
271 |       {
272 |           impl<'de, 'a, R: 'a, O> serde::de::EnumAccess<'de> for &'a mut Deserializer<R, O>
    |           ^^^^^^^^^^^^^^^^^^^^^^^^---------------------^^^^^^^^^^^^^^^^^^------------^^^^^^
    |                                   |                                      |
    |                                   |                                      `Deserializer` is not local
    |                                   `EnumAccess` is not local
    |
    = note: an `impl` is never scoped, even when it is nested inside an item, as it may impact type checking outside of that item, which can be the case if neither the trait or the self type are at the same nesting level as the `impl`
    = note: `#[warn(non_local_definitions)]` on by default

   Compiling webrtc-dtls v0.10.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_dtls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-dtls-0.10.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-dtls-0.10.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yuliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of DTLS' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-dtls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/dtls' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.10.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=10 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_dtls --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-dtls-0.10.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("pem"))' -C metadata=3fa36159a742135e -C extra-filename=-abf27c5ef7e9c195 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aes=/home/ivo/massive_game_server/target/release/deps/libaes-e9625c58f7eecdd3.rmeta --extern aes_gcm=/home/ivo/massive_game_server/target/release/deps/libaes_gcm-0f8cf668e43499cc.rmeta --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern bincode=/home/ivo/massive_game_server/target/release/deps/libbincode-1b71e276b15a23c0.rmeta --extern byteorder=/home/ivo/massive_game_server/target/release/deps/libbyteorder-c14529b9ba2f3b32.rmeta --extern cbc=/home/ivo/massive_game_server/target/release/deps/libcbc-24897bcb34148cef.rmeta --extern ccm=/home/ivo/massive_game_server/target/release/deps/libccm-b055bc9606eb6dee.rmeta --extern der_parser=/home/ivo/massive_game_server/target/release/deps/libder_parser-3542b212b12d9594.rmeta --extern hkdf=/home/ivo/massive_game_server/target/release/deps/libhkdf-c75c74908a87cd1b.rmeta --extern hmac=/home/ivo/massive_game_server/target/release/deps/libhmac-6d75f863c6edf4ab.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern p256=/home/ivo/massive_game_server/target/release/deps/libp256-08063d447aab33f4.rmeta --extern p384=/home/ivo/massive_game_server/target/release/deps/libp384-8cdf787a4fd39788.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern rand_core=/home/ivo/massive_game_server/target/release/deps/librand_core-0331ccada710acdc.rmeta --extern rcgen=/home/ivo/massive_game_server/target/release/deps/librcgen-b7dd5d61f9d707a4.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern rustls=/home/ivo/massive_game_server/target/release/deps/librustls-cf7573e9d7e8feb9.rmeta --extern sec1=/home/ivo/massive_game_server/target/release/deps/libsec1-cf678e0416640239.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern sha1=/home/ivo/massive_game_server/target/release/deps/libsha1-484ae4eed4e01204.rmeta --extern sha2=/home/ivo/massive_game_server/target/release/deps/libsha2-932bb362cb275cd6.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --extern x25519_dalek=/home/ivo/massive_game_server/target/release/deps/libx25519_dalek-e0012020668370f9.rmeta --extern x509_parser=/home/ivo/massive_game_server/target/release/deps/libx509_parser-4c70a353e3749027.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: `bincode` (lib) generated 9 warnings (5 duplicates)
warning: `uuid` (lib) generated 5 warnings (5 duplicates)
   Compiling webrtc-srtp v0.13.0
   Compiling webrtc-media v0.8.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_srtp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-srtp-0.13.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-srtp-0.13.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of SRTP' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-srtp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/srtp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.13.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_srtp --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-srtp-0.13.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("openssl", "vendored-openssl"))' -C metadata=e585ca284e446e7c -C extra-filename=-7cf516b7b384336a --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern aead=/home/ivo/massive_game_server/target/release/deps/libaead-279490dc39424b0c.rmeta --extern aes=/home/ivo/massive_game_server/target/release/deps/libaes-e9625c58f7eecdd3.rmeta --extern aes_gcm=/home/ivo/massive_game_server/target/release/deps/libaes_gcm-0f8cf668e43499cc.rmeta --extern byteorder=/home/ivo/massive_game_server/target/release/deps/libbyteorder-c14529b9ba2f3b32.rmeta --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern ctr=/home/ivo/massive_game_server/target/release/deps/libctr-6c2338305a12f20c.rmeta --extern hmac=/home/ivo/massive_game_server/target/release/deps/libhmac-6d75f863c6edf4ab.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern rtcp=/home/ivo/massive_game_server/target/release/deps/librtcp-471e871d95876785.rmeta --extern rtp=/home/ivo/massive_game_server/target/release/deps/librtp-c724fc6694a912bb.rmeta --extern sha1=/home/ivo/massive_game_server/target/release/deps/libsha1-484ae4eed4e01204.rmeta --extern subtle=/home/ivo/massive_game_server/target/release/deps/libsubtle-341d8fc9c8a90858.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_media CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-media-0.8.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-media-0.8.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of WebRTC Media API' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-media CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/media' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.8.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=8 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_media --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-media-0.8.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=c31fd312dd8d8d34 -C extra-filename=-e1c5730106f0907f --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern byteorder=/home/ivo/massive_game_server/target/release/deps/libbyteorder-c14529b9ba2f3b32.rmeta --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern rtp=/home/ivo/massive_game_server/target/release/deps/librtp-c724fc6694a912bb.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: elided lifetime has a name
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/ext.rs:113:82
    |
113 |     pub(crate) fn get_all_internal<'a>(&'a self, name: &HeaderName) -> ValueIter<'_, Bytes> {
    |                                    -- lifetime `'a` declared here                ^^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: `webrtc-data` (lib) generated 5 warnings (5 duplicates)
warning: `stun` (lib) generated 5 warnings (5 duplicates)
warning: `webrtc-util` (lib) generated 5 warnings (5 duplicates)
warning: `quinn` (lib) generated 5 warnings (5 duplicates)
warning: `webrtc-media` (lib) generated 5 warnings (5 duplicates)
   Compiling webrtc-ice v0.11.0
   Compiling tracing-subscriber v0.3.19
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc_ice CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-ice-0.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-ice-0.11.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of ICE' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc-ice CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/ice' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.11.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc_ice --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-ice-0.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=a311ea075f7d07b6 -C extra-filename=-282d673738e63839 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern arc_swap=/home/ivo/massive_game_server/target/release/deps/libarc_swap-0608e6621d058498.rmeta --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern crc=/home/ivo/massive_game_server/target/release/deps/libcrc-7db4ebee9806bc43.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rmeta --extern stun=/home/ivo/massive_game_server/target/release/deps/libstun-f991713e7c987e84.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern turn=/home/ivo/massive_game_server/target/release/deps/libturn-a9064ba0500b8481.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-385775a28a7af8f2.rmeta --extern uuid=/home/ivo/massive_game_server/target/release/deps/libuuid-d05ae4a3fb20b3bb.rmeta --extern waitgroup=/home/ivo/massive_game_server/target/release/deps/libwaitgroup-6bc6000899a9e732.rmeta --extern mdns=/home/ivo/massive_game_server/target/release/deps/libwebrtc_mdns-a5e5b6656188f7e8.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=tracing_subscriber CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-subscriber-0.3.19 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-subscriber-0.3.19/Cargo.toml CARGO_PKG_AUTHORS='Eliza Weisman <eliza@buoyant.io>:David Barsky <me@davidbarsky.com>:Tokio Contributors <team@tokio.rs>' CARGO_PKG_DESCRIPTION='Utilities for implementing and composing `tracing` subscribers.
' CARGO_PKG_HOMEPAGE='https://tokio.rs' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=tracing-subscriber CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/tokio-rs/tracing' CARGO_PKG_RUST_VERSION=1.63.0 CARGO_PKG_VERSION=0.3.19 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=19 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name tracing_subscriber --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-subscriber-0.3.19/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --warn=unexpected_cfgs --check-cfg 'cfg(flaky_tests)' --check-cfg 'cfg(tracing_unstable)' --cfg 'feature="alloc"' --cfg 'feature="ansi"' --cfg 'feature="default"' --cfg 'feature="env-filter"' --cfg 'feature="fmt"' --cfg 'feature="json"' --cfg 'feature="matchers"' --cfg 'feature="nu-ansi-term"' --cfg 'feature="once_cell"' --cfg 'feature="regex"' --cfg 'feature="registry"' --cfg 'feature="serde"' --cfg 'feature="serde_json"' --cfg 'feature="sharded-slab"' --cfg 'feature="smallvec"' --cfg 'feature="std"' --cfg 'feature="thread_local"' --cfg 'feature="tracing"' --cfg 'feature="tracing-log"' --cfg 'feature="tracing-serde"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("alloc", "ansi", "chrono", "default", "env-filter", "fmt", "json", "local-time", "matchers", "nu-ansi-term", "once_cell", "parking_lot", "regex", "registry", "serde", "serde_json", "sharded-slab", "smallvec", "std", "thread_local", "time", "tracing", "tracing-log", "tracing-serde", "valuable", "valuable-serde", "valuable_crate"))' -C metadata=dbadcd145a8f0eb0 -C extra-filename=-f288bb14c6cfa7fa --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern matchers=/home/ivo/massive_game_server/target/release/deps/libmatchers-658983ec4ae35d30.rmeta --extern nu_ansi_term=/home/ivo/massive_game_server/target/release/deps/libnu_ansi_term-f150b1e7b501b491.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern regex=/home/ivo/massive_game_server/target/release/deps/libregex-0cc93e0834632b17.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rmeta --extern sharded_slab=/home/ivo/massive_game_server/target/release/deps/libsharded_slab-7206112881cdba00.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rmeta --extern thread_local=/home/ivo/massive_game_server/target/release/deps/libthread_local-094698888bf25b52.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --extern tracing_core=/home/ivo/massive_game_server/target/release/deps/libtracing_core-9ebeaf34b772be2a.rmeta --extern tracing_log=/home/ivo/massive_game_server/target/release/deps/libtracing_log-62fe140f69da1aba.rmeta --extern tracing_serde=/home/ivo/massive_game_server/target/release/deps/libtracing_serde-d1ab247cade94d44.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling interceptor v0.12.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=interceptor CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/interceptor-0.12.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/interceptor-0.12.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of Pluggable RTP/RTCP processors' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=interceptor CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/interceptor' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.12.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=12 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name interceptor --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/interceptor-0.12.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=cfbd86960c93ca1d -C extra-filename=-e5600e535c6b092c --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern rtcp=/home/ivo/massive_game_server/target/release/deps/librtcp-471e871d95876785.rmeta --extern rtp=/home/ivo/massive_game_server/target/release/deps/librtp-c724fc6694a912bb.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern waitgroup=/home/ivo/massive_game_server/target/release/deps/libwaitgroup-6bc6000899a9e732.rmeta --extern srtp=/home/ivo/massive_game_server/target/release/deps/libwebrtc_srtp-7cf516b7b384336a.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `rtp` (lib) generated 5 warnings (5 duplicates)
warning: `rcgen` (lib) generated 5 warnings (5 duplicates)
   Compiling built v0.7.7
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=built CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/built-0.7.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/built-0.7.7/Cargo.toml CARGO_PKG_AUTHORS='Lukas Lueg <lukas.lueg@gmail.com>' CARGO_PKG_DESCRIPTION='Provides a crate with information from the time it was built.' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=built CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/lukaslueg/built' CARGO_PKG_RUST_VERSION=1.74 CARGO_PKG_VERSION=0.7.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=7 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name built --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/built-0.7.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C embed-bitcode=no -C codegen-units=1 --cfg 'feature="git2"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("cargo-lock", "chrono", "dependency-tree", "git2", "semver"))' -C metadata=c7c71dfd2ded96f4 -C extra-filename=-98f400b15bfcdbfb --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern git2=/home/ivo/massive_game_server/target/release/deps/libgit2-94e5550304ce34e8.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build`
warning: `webrtc-srtp` (lib) generated 5 warnings (5 duplicates)
warning: `serde_json` (lib) generated 5 warnings (5 duplicates)
warning: `serde_with` (lib) generated 5 warnings (5 duplicates)
warning: `webrtc-sctp` (lib) generated 6 warnings (5 duplicates)
warning: `turn` (lib) generated 5 warnings (5 duplicates)
warning: `built` (lib) generated 5 warnings (5 duplicates)
warning: `serde_yaml` (lib) generated 5 warnings (5 duplicates)
warning: `h2` (lib) generated 6 warnings (5 duplicates)
warning: field `0` is never read
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/body/body.rs:454:25
    |
454 |         struct Full<'a>(&'a Bytes);
    |                ----     ^^^^^^^^^
    |                |
    |                field in this struct
    |
    = help: consider removing this field
    = note: `Full` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: trait `AssertSendSync` is never used
   --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/error.rs:617:7
    |
617 | trait AssertSendSync: Send + Sync + 'static {}
    |       ^^^^^^^^^^^^^^

warning: trait `AssertSend` is never used
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/client/conn.rs:1122:7
     |
1122 | trait AssertSend: Send {}
     |       ^^^^^^^^^^

warning: trait `AssertSendSync` is never used
    --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-0.14.32/src/client/conn.rs:1123:7
     |
1123 | trait AssertSendSync: Send + Sync {}
     |       ^^^^^^^^^^^^^^

   Compiling webrtc v0.11.0
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=webrtc CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-0.11.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-0.11.0/Cargo.toml CARGO_PKG_AUTHORS='Rain Liu <yliu@webrtc.rs>' CARGO_PKG_DESCRIPTION='A pure Rust implementation of WebRTC API' CARGO_PKG_HOMEPAGE='https://webrtc.rs' CARGO_PKG_LICENSE='MIT OR Apache-2.0' CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=webrtc CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/webrtc-rs/webrtc' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.11.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=11 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name webrtc --edition=2021 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/webrtc-0.11.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("openssl", "pem", "vendored-openssl"))' -C metadata=979c14df0dc70a04 -C extra-filename=-fb22c295c08aace9 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern arc_swap=/home/ivo/massive_game_server/target/release/deps/libarc_swap-0608e6621d058498.rmeta --extern async_trait=/home/ivo/massive_game_server/target/release/deps/libasync_trait-2f1052b0b3e50a76.so --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern cfg_if=/home/ivo/massive_game_server/target/release/deps/libcfg_if-81c58ebe951dc355.rmeta --extern hex=/home/ivo/massive_game_server/target/release/deps/libhex-9c84efedc25576cb.rmeta --extern interceptor=/home/ivo/massive_game_server/target/release/deps/libinterceptor-e5600e535c6b092c.rmeta --extern lazy_static=/home/ivo/massive_game_server/target/release/deps/liblazy_static-da0dd1f668339419.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern portable_atomic=/home/ivo/massive_game_server/target/release/deps/libportable_atomic-0f905871fe1080f3.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern rcgen=/home/ivo/massive_game_server/target/release/deps/librcgen-b7dd5d61f9d707a4.rmeta --extern regex=/home/ivo/massive_game_server/target/release/deps/libregex-0cc93e0834632b17.rmeta --extern ring=/home/ivo/massive_game_server/target/release/deps/libring-e999c3608ec36466.rmeta --extern rtcp=/home/ivo/massive_game_server/target/release/deps/librtcp-471e871d95876785.rmeta --extern rtp=/home/ivo/massive_game_server/target/release/deps/librtp-c724fc6694a912bb.rmeta --extern rustls=/home/ivo/massive_game_server/target/release/deps/librustls-cf7573e9d7e8feb9.rmeta --extern sdp=/home/ivo/massive_game_server/target/release/deps/libsdp-bb25a004ea8f3f52.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rmeta --extern sha2=/home/ivo/massive_game_server/target/release/deps/libsha2-932bb362cb275cd6.rmeta --extern smol_str=/home/ivo/massive_game_server/target/release/deps/libsmol_str-67c799ed96718db4.rmeta --extern stun=/home/ivo/massive_game_server/target/release/deps/libstun-f991713e7c987e84.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern time=/home/ivo/massive_game_server/target/release/deps/libtime-423f613bbccab165.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern turn=/home/ivo/massive_game_server/target/release/deps/libturn-a9064ba0500b8481.rmeta --extern url=/home/ivo/massive_game_server/target/release/deps/liburl-385775a28a7af8f2.rmeta --extern waitgroup=/home/ivo/massive_game_server/target/release/deps/libwaitgroup-6bc6000899a9e732.rmeta --extern data=/home/ivo/massive_game_server/target/release/deps/libwebrtc_data-ccd9d27c3f459d2d.rmeta --extern dtls=/home/ivo/massive_game_server/target/release/deps/libwebrtc_dtls-abf27c5ef7e9c195.rmeta --extern ice=/home/ivo/massive_game_server/target/release/deps/libwebrtc_ice-282d673738e63839.rmeta --extern mdns=/home/ivo/massive_game_server/target/release/deps/libwebrtc_mdns-a5e5b6656188f7e8.rmeta --extern media=/home/ivo/massive_game_server/target/release/deps/libwebrtc_media-e1c5730106f0907f.rmeta --extern sctp=/home/ivo/massive_game_server/target/release/deps/libwebrtc_sctp-2042d92118d8b029.rmeta --extern srtp=/home/ivo/massive_game_server/target/release/deps/libwebrtc_srtp-7cf516b7b384336a.rmeta --extern util=/home/ivo/massive_game_server/target/release/deps/libwebrtc_util-a9fffafdfac234fb.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out`
warning: `quinn-proto` (lib) generated 14 warnings (5 duplicates)
   Compiling hyper-tls v0.5.0
   Compiling warp v0.3.7
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=hyper_tls CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.5.0 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.5.0/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='Default TLS implementation for use with hyper' CARGO_PKG_HOMEPAGE='https://hyper.rs' CARGO_PKG_LICENSE=MIT/Apache-2.0 CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=hyper-tls CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/hyperium/hyper-tls' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.5.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=5 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name hyper_tls --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/hyper-tls-0.5.0/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("vendored"))' -C metadata=73a743b21c89ce8f -C extra-filename=-a8d40d7ea45f3317 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern hyper=/home/ivo/massive_game_server/target/release/deps/libhyper-9d17c60117fa7a53.rmeta --extern native_tls=/home/ivo/massive_game_server/target/release/deps/libnative_tls-e4fa52e23d0c4ce7.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tokio_native_tls=/home/ivo/massive_game_server/target/release/deps/libtokio_native_tls-5bac045d320ac09a.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=warp CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/warp-0.3.7 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/warp-0.3.7/Cargo.toml CARGO_PKG_AUTHORS='Sean McArthur <sean@seanmonstar.com>' CARGO_PKG_DESCRIPTION='serve the web at warp speeds' CARGO_PKG_HOMEPAGE='' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=warp CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/seanmonstar/warp' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.3.7 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=3 CARGO_PKG_VERSION_PATCH=7 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name warp --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/warp-0.3.7/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --cfg 'feature="multer"' --cfg 'feature="multipart"' --cfg 'feature="tokio-tungstenite"' --cfg 'feature="websocket"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("async-compression", "compression", "compression-brotli", "compression-gzip", "default", "multer", "multipart", "rustls-pemfile", "tls", "tokio-rustls", "tokio-tungstenite", "websocket"))' -C metadata=6e721d4ebb65579f -C extra-filename=-1e7598ddab98ec94 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern futures_channel=/home/ivo/massive_game_server/target/release/deps/libfutures_channel-f9d05d7240e9556c.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern headers=/home/ivo/massive_game_server/target/release/deps/libheaders-c9da8f1a354c7761.rmeta --extern http=/home/ivo/massive_game_server/target/release/deps/libhttp-b51de42da7d0e4ba.rmeta --extern hyper=/home/ivo/massive_game_server/target/release/deps/libhyper-9d17c60117fa7a53.rmeta --extern log=/home/ivo/massive_game_server/target/release/deps/liblog-6f5836c74bd72fc5.rmeta --extern mime=/home/ivo/massive_game_server/target/release/deps/libmime-727c609573810913.rmeta --extern mime_guess=/home/ivo/massive_game_server/target/release/deps/libmime_guess-72fa0796967c2a53.rmeta --extern multer=/home/ivo/massive_game_server/target/release/deps/libmulter-0e6140575e70f4a7.rmeta --extern percent_encoding=/home/ivo/massive_game_server/target/release/deps/libpercent_encoding-cf34d17ff91aac01.rmeta --extern pin_project=/home/ivo/massive_game_server/target/release/deps/libpin_project-66ffc2903acf9981.rmeta --extern scoped_tls=/home/ivo/massive_game_server/target/release/deps/libscoped_tls-a6667ef7568db59f.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rmeta --extern serde_urlencoded=/home/ivo/massive_game_server/target/release/deps/libserde_urlencoded-feb3e22a6c914f3b.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tokio_tungstenite=/home/ivo/massive_game_server/target/release/deps/libtokio_tungstenite-d85250450182a359.rmeta --extern tokio_util=/home/ivo/massive_game_server/target/release/deps/libtokio_util-55513c602ff72ac0.rmeta --extern tower_service=/home/ivo/massive_game_server/target/release/deps/libtower_service-2099fdbbb5987da4.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
   Compiling metrics-exporter-prometheus v0.13.1
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=metrics_exporter_prometheus CARGO_MANIFEST_DIR=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-exporter-prometheus-0.13.1 CARGO_MANIFEST_PATH=/home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-exporter-prometheus-0.13.1/Cargo.toml CARGO_PKG_AUTHORS='Toby Lawrence <toby@nuclearfurnace.com>' CARGO_PKG_DESCRIPTION='A metrics-compatible exporter for sending metrics to Prometheus.' CARGO_PKG_HOMEPAGE='https://github.com/metrics-rs/metrics' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=metrics-exporter-prometheus CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/metrics-rs/metrics' CARGO_PKG_RUST_VERSION=1.65.0 CARGO_PKG_VERSION=0.13.1 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=13 CARGO_PKG_VERSION_PATCH=1 CARGO_PKG_VERSION_PRE='' LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name metrics_exporter_prometheus --edition=2018 /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-exporter-prometheus-0.13.1/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="async-runtime"' --cfg 'feature="default"' --cfg 'feature="http-listener"' --cfg 'feature="hyper"' --cfg 'feature="hyper-tls"' --cfg 'feature="ipnet"' --cfg 'feature="push-gateway"' --cfg 'feature="tokio"' --cfg 'feature="tracing"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("async-runtime", "default", "http-listener", "hyper", "hyper-tls", "ipnet", "push-gateway", "tokio", "tracing"))' -C metadata=a6bd804954a4da14 -C extra-filename=-b7e3a44f97d59ed6 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=debuginfo -L dependency=/home/ivo/massive_game_server/target/release/deps --extern base64=/home/ivo/massive_game_server/target/release/deps/libbase64-f0e2d0711532d445.rmeta --extern hyper=/home/ivo/massive_game_server/target/release/deps/libhyper-9d17c60117fa7a53.rmeta --extern hyper_tls=/home/ivo/massive_game_server/target/release/deps/libhyper_tls-a8d40d7ea45f3317.rmeta --extern indexmap=/home/ivo/massive_game_server/target/release/deps/libindexmap-b12568fe01c9c06c.rmeta --extern ipnet=/home/ivo/massive_game_server/target/release/deps/libipnet-adee52ea694b89e3.rmeta --extern metrics=/home/ivo/massive_game_server/target/release/deps/libmetrics-22ab11988786effe.rmeta --extern metrics_util=/home/ivo/massive_game_server/target/release/deps/libmetrics_util-4269cf480ee2ec4e.rmeta --extern quanta=/home/ivo/massive_game_server/target/release/deps/libquanta-5cdf0ce099c6eaf5.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --cap-lints warn -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl`
warning: `hyper-tls` (lib) generated 5 warnings (5 duplicates)
warning: use of deprecated method `indexmap::IndexMap::<K, V, S>::remove`: `remove` disrupts the map order -- use `swap_remove` or `shift_remove` for explicit behavior.
  --> /home/ivo/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/metrics-exporter-prometheus-0.13.1/src/recorder.rs:69:29
   |
69 |                     by_name.remove(&labels);
   |                             ^^^^^^
   |
   = note: `#[warn(deprecated)]` on by default

warning: `tracing-subscriber` (lib) generated 5 warnings (5 duplicates)
warning: `hyper` (lib) generated 10 warnings (5 duplicates)
warning: `git2` (lib) generated 5 warnings (5 duplicates)
   Compiling massive_game_server_core v0.1.0 (/home/ivo/massive_game_server/server)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=build_script_build CARGO_MANIFEST_DIR=/home/ivo/massive_game_server/server CARGO_MANIFEST_PATH=/home/ivo/massive_game_server/server/Cargo.toml CARGO_PKG_AUTHORS='Trebuchet Network Contributors <contact@trebuchet.network>' CARGO_PKG_DESCRIPTION='A high-performance Rust game server core for massive multiplayer interactions, part of Project Trebuchet.' CARGO_PKG_HOMEPAGE='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=massive_game_server_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' CARGO_PRIMARY_PACKAGE=1 LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name build_script_build --edition=2021 server/build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debug-assertions=off --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "jemalloc"))' -C metadata=fa098b364d0c785c -C extra-filename=-b630fc2ff0da0bc0 --out-dir /home/ivo/massive_game_server/target/release/build/massive_game_server_core-b630fc2ff0da0bc0 -C strip=symbols -L dependency=/home/ivo/massive_game_server/target/release/deps --extern built=/home/ivo/massive_game_server/target/release/deps/libbuilt-98f400b15bfcdbfb.rlib --extern flatbuffers=/home/ivo/massive_game_server/target/release/deps/libflatbuffers-90f856b3805ab66b.rlib --extern flatc_rust=/home/ivo/massive_game_server/target/release/deps/libflatc_rust-020505a8b3f5a4f2.rlib -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build`
warning: `massive_game_server_core` (build script) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CFG_FEATURE=default CARGO_CFG_PANIC=unwind CARGO_CFG_TARGET_ABI='' CARGO_CFG_TARGET_ARCH=x86_64 CARGO_CFG_TARGET_ENDIAN=little CARGO_CFG_TARGET_ENV=gnu CARGO_CFG_TARGET_FAMILY=unix CARGO_CFG_TARGET_FEATURE=adx,aes,avx,avx2,bmi1,bmi2,cmpxchg16b,f16c,fma,fxsr,lzcnt,movbe,pclmulqdq,popcnt,rdrand,rdseed,sha,sse,sse2,sse3,sse4.1,sse4.2,ssse3,xsave,xsavec,xsaveopt,xsaves CARGO_CFG_TARGET_HAS_ATOMIC=16,32,64,8,ptr CARGO_CFG_TARGET_OS=linux CARGO_CFG_TARGET_POINTER_WIDTH=64 CARGO_CFG_TARGET_VENDOR=unknown CARGO_CFG_UNIX='' CARGO_ENCODED_RUSTFLAGS='-Ctarget-cpu=native-Ctarget-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl' CARGO_FEATURE_DEFAULT=1 CARGO_MANIFEST_DIR=/home/ivo/massive_game_server/server CARGO_MANIFEST_PATH=/home/ivo/massive_game_server/server/Cargo.toml CARGO_PKG_AUTHORS='Trebuchet Network Contributors <contact@trebuchet.network>' CARGO_PKG_DESCRIPTION='A high-performance Rust game server core for massive multiplayer interactions, part of Project Trebuchet.' CARGO_PKG_HOMEPAGE='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=massive_game_server_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' DEBUG=false HOST=x86_64-unknown-linux-gnu LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/massive_game_server/target/release:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib:/home/ivo/massive_game_server/target/release/build/libgit2-sys-4e2af0b8afffa5f3/out/build' NUM_JOBS=180 OPT_LEVEL=3 OUT_DIR=/home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out PROFILE=release RUSTC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc RUSTDOC=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustdoc TARGET=x86_64-unknown-linux-gnu /home/ivo/massive_game_server/target/release/build/massive_game_server_core-b630fc2ff0da0bc0/build-script-build`
[massive_game_server_core 0.1.0] cargo:rerun-if-changed=build.rs
[massive_game_server_core 0.1.0] cargo:rerun-if-changed=/home/ivo/massive_game_server/server/schemas/game.fbs
[massive_game_server_core 0.1.0] Attempting to compile FlatBuffers schema: /home/ivo/massive_game_server/server/schemas/game.fbs into output directory: /home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out/flatbuffers_generated
warning: `interceptor` (lib) generated 5 warnings (5 duplicates)
[massive_game_server_core 0.1.0] cargo:info=FlatBuffers schema compilation successful (invoked via flatc-rust).
[massive_game_server_core 0.1.0] cargo:info=Successfully verified that the generated FlatBuffers file exists at "/home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out/flatbuffers_generated/game_generated.rs"
warning: `webrtc-dtls` (lib) generated 5 warnings (5 duplicates)
warning: `warp` (lib) generated 5 warnings (5 duplicates)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_CRATE_NAME=massive_game_server_core CARGO_MANIFEST_DIR=/home/ivo/massive_game_server/server CARGO_MANIFEST_PATH=/home/ivo/massive_game_server/server/Cargo.toml CARGO_PKG_AUTHORS='Trebuchet Network Contributors <contact@trebuchet.network>' CARGO_PKG_DESCRIPTION='A high-performance Rust game server core for massive multiplayer interactions, part of Project Trebuchet.' CARGO_PKG_HOMEPAGE='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=massive_game_server_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' CARGO_PRIMARY_PACKAGE=1 LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name massive_game_server_core --edition=2021 server/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C opt-level=3 -C panic=abort -C linker-plugin-lto -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "jemalloc"))' -C metadata=eb65a85f798485bc -C extra-filename=-cd71b539ef50d894 --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=symbols -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ahash=/home/ivo/massive_game_server/target/release/deps/libahash-d1cbaf2032fc975d.rmeta --extern anyhow=/home/ivo/massive_game_server/target/release/deps/libanyhow-6e6caebf8bf55556.rmeta --extern arc_swap=/home/ivo/massive_game_server/target/release/deps/libarc_swap-0608e6621d058498.rmeta --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rmeta --extern core_affinity=/home/ivo/massive_game_server/target/release/deps/libcore_affinity-72ac57d5ed019a5c.rmeta --extern crossbeam=/home/ivo/massive_game_server/target/release/deps/libcrossbeam-096a1ff00e12c9f2.rmeta --extern crossbeam_epoch=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_epoch-d0658ce18407787c.rmeta --extern crossbeam_queue=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_queue-aba442d9063b04b5.rmeta --extern dashmap=/home/ivo/massive_game_server/target/release/deps/libdashmap-fc2e0b90c94b2be7.rmeta --extern env_logger=/home/ivo/massive_game_server/target/release/deps/libenv_logger-c9012cd947353b60.rmeta --extern flatbuffers=/home/ivo/massive_game_server/target/release/deps/libflatbuffers-f1a4fdc8cb753882.rmeta --extern futures=/home/ivo/massive_game_server/target/release/deps/libfutures-4d8e87475c11ef20.rmeta --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rmeta --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rmeta --extern metrics=/home/ivo/massive_game_server/target/release/deps/libmetrics-22ab11988786effe.rmeta --extern metrics_exporter_prometheus=/home/ivo/massive_game_server/target/release/deps/libmetrics_exporter_prometheus-b7e3a44f97d59ed6.rmeta --extern num_cpus=/home/ivo/massive_game_server/target/release/deps/libnum_cpus-0fcdabc4a86ed45f.rmeta --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rmeta --extern parking_lot=/home/ivo/massive_game_server/target/release/deps/libparking_lot-9dabc6c29380194b.rmeta --extern prometheus=/home/ivo/massive_game_server/target/release/deps/libprometheus-8eb3959fa6f259ee.rmeta --extern quinn=/home/ivo/massive_game_server/target/release/deps/libquinn-c3b8c672a1cdba11.rmeta --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rmeta --extern rayon=/home/ivo/massive_game_server/target/release/deps/librayon-022a1067a421e5f2.rmeta --extern seahash=/home/ivo/massive_game_server/target/release/deps/libseahash-4259b25369966ef5.rmeta --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rmeta --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rmeta --extern serde_with=/home/ivo/massive_game_server/target/release/deps/libserde_with-eb63d31a2556c2ba.rmeta --extern serde_yaml=/home/ivo/massive_game_server/target/release/deps/libserde_yaml-54d8e07d63b9588a.rmeta --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rmeta --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rmeta --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rmeta --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rmeta --extern tracing_subscriber=/home/ivo/massive_game_server/target/release/deps/libtracing_subscriber-f288bb14c6cfa7fa.rmeta --extern uuid=/home/ivo/massive_game_server/target/release/deps/libuuid-d05ae4a3fb20b3bb.rmeta --extern warp=/home/ivo/massive_game_server/target/release/deps/libwarp-1e7598ddab98ec94.rmeta --extern webrtc=/home/ivo/massive_game_server/target/release/deps/libwebrtc-fb22c295c08aace9.rmeta --extern zstd=/home/ivo/massive_game_server/target/release/deps/libzstd-4de81615094d21d3.rmeta -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out -L native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out`
warning: unused import: `core::mem`
 --> /home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out/flatbuffers_generated/game_generated.rs:6:5
  |
6 | use core::mem;
  |     ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `core::cmp::Ordering`
 --> /home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out/flatbuffers_generated/game_generated.rs:7:5
  |
7 | use core::cmp::Ordering;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused imports: `EndianScalar` and `Follow`
  --> /home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out/flatbuffers_generated/game_generated.rs:10:25
   |
10 | use self::flatbuffers::{EndianScalar, Follow};
   |                         ^^^^^^^^^^^^  ^^^^^^

warning: unused import: `CoreAllocation`
 --> server/src/concurrent/thread_pools.rs:2:41
  |
2 | use crate::core::config::{ServerConfig, CoreAllocation};
  |                                         ^^^^^^^^^^^^^^

warning: unused import: `trace`
 --> server/src/concurrent/spatial_index.rs:8:22
  |
8 | use tracing::{debug, trace};
  |                      ^^^^^

warning: unused import: `Atomic`
 --> server/src/world/partition.rs:4:53
  |
4 | use crossbeam_epoch::{self as epoch, Guard, Shared, Atomic}; // Removed 'unprotected' as it's not directly needed with pinned guards
  |                                                     ^^^^^^

warning: unused import: `tokio::task::JoinError`
  --> server/src/server/instance.rs:17:5
   |
17 | use tokio::task::JoinError;
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `futures::executor`
  --> server/src/server/instance.rs:18:5
   |
18 | use futures::executor;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `webrtc::data_channel::data_channel_state::RTCDataChannelState`
  --> server/src/server/instance.rs:20:5
   |
20 | use webrtc::data_channel::data_channel_state::RTCDataChannelState;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `parking_lot::RwLockReadGuard`
  --> server/src/server/instance.rs:21:5
   |
21 | use parking_lot::RwLockReadGuard;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `MatchState`
  --> server/src/server/instance.rs:22:62
   |
22 | use crate::core::types::{EntityId, PlayerID, CorePickupType, MatchState};
   |                                                              ^^^^^^^^^^

warning: unused import: `flatbuffers::FlatBufferBuilder`
  --> server/src/server/instance.rs:24:5
   |
24 | use flatbuffers::FlatBufferBuilder;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::sleep`
  --> server/src/server/instance.rs:37:5
   |
37 | use tokio::time::sleep; // Add this import
   |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `SERVER_TICK_RATE`
 --> server/src/server/game_loop.rs:3:45
  |
3 | use crate::core::constants::{TICK_DURATION, SERVER_TICK_RATE};
  |                                             ^^^^^^^^^^^^^^^^

warning: unused import: `futures::executor::block_on`
  --> server/src/server/game_loop.rs:12:5
   |
12 | use futures::executor::block_on;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio::time::sleep`
  --> server/src/server/game_loop.rs:19:5
   |
19 | use tokio::time::sleep; // Add this import
   |     ^^^^^^^^^^^^^^^^^^

warning: unused imports: `ChatMessage` and `ClientState`
  --> server/src/server/game_loop.rs:22:33
   |
22 | use crate::network::signaling::{ClientState, ChatMessage};
   |                                 ^^^^^^^^^^^  ^^^^^^^^^^^

warning: unused imports: `CorePickupType`, `FIELD_HEALTH_ALIVE`, `FIELD_POSITION_ROTATION`, `FIELD_POWERUPS`, `FIELD_SHIELD`, `FIELD_WEAPON_AMMO`, `Pickup as CorePickup`, `PlayerAoI`, `PlayerState as MassivePlayerState`, `Vec2`, and `Wall as CoreWall`
 --> server/src/network/signaling.rs:4:5
  |
4 |     PlayerState as MassivePlayerState, PlayerID, Vec2, Wall as CoreWall, Pickup as CorePickup,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^            ^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^
5 |     CorePickupType, PlayerInputData, ServerWeaponType, EntityId, RTCDataChannel as CoreRTCDataChannel,
  |     ^^^^^^^^^^^^^^
6 |     FIELD_POSITION_ROTATION, FIELD_HEALTH_ALIVE, FIELD_WEAPON_AMMO, FIELD_SCORE_STATS,
  |     ^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^
7 |     FIELD_POWERUPS, FIELD_SHIELD, FIELD_FLAG, PlayerAoI, PlayerAoIs,
  |     ^^^^^^^^^^^^^^  ^^^^^^^^^^^^              ^^^^^^^^^

warning: unused import: `crate::core::constants::*`
  --> server/src/network/signaling.rs:10:5
   |
10 | use crate::core::constants::*;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SystemTime` and `UNIX_EPOCH`
  --> server/src/network/signaling.rs:25:21
   |
25 |     time::{Instant, SystemTime, UNIX_EPOCH},
   |                     ^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `uuid::Uuid`
  --> server/src/network/signaling.rs:42:5
   |
42 | use uuid::Uuid;
   |     ^^^^^^^^^^

warning: unused import: `anyhow::Context`
 --> server/src/operational/monitoring/mod.rs:6:5
  |
6 | use anyhow::Context;
  |     ^^^^^^^^^^^^^^^

warning: unused import: `FIELD_POSITION_ROTATION`
 --> server/src/systems/ai/bot_ai.rs:5:5
  |
5 |     FIELD_POSITION_ROTATION,
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::flatbuffers_generated::game_protocol as fb`
 --> server/src/systems/ai/bot_ai.rs:9:5
  |
9 | use crate::flatbuffers_generated::game_protocol as fb;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `info` and `warn`
  --> server/src/systems/ai/bot_ai.rs:16:22
   |
16 | use tracing::{debug, info, trace, warn};
   |                      ^^^^         ^^^^

warning: unused import: `crate::core::constants::PLAYER_RADIUS`
 --> server/src/systems/physics/collision.rs:6:5
  |
6 | use crate::core::constants::PLAYER_RADIUS; // Example, if needed for other collisions
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `walls`
    --> server/src/server/instance.rs:1266:51
     |
1266 |     async fn process_projectiles_optimized(&self, walls: &[Wall], delta_time: f32) -> ProjectileResults {
     |                                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_walls`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: `webrtc-ice` (lib) generated 5 warnings (5 duplicates)
warning: unused variable: `broadcast_start_time`
    --> server/src/server/instance.rs:4198:13
     |
4198 |         let broadcast_start_time = Instant::now(); 
     |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_broadcast_start_time`

warning: unused variable: `last_tick_time`
  --> server/src/server/game_loop.rs:63:17
   |
63 |         let mut last_tick_time = Instant::now();
   |                 ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_last_tick_time`

warning: variable does not need to be mutable
  --> server/src/server/game_loop.rs:63:13
   |
63 |         let mut last_tick_time = Instant::now();
   |             ----^^^^^^^^^^^^^^
   |             |
   |             help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `partition_update_start`
   --> server/src/server/game_loop.rs:143:17
    |
143 |             let partition_update_start = Instant::now();
    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_partition_update_start`

warning: unused import: `rayon::prelude`
  --> server/src/server/instance.rs:39:5
   |
39 | use rayon::prelude::*;
   |     ^^^^^^^^^^^^^^

warning: unused variable: `guard`
   --> server/src/world/partition.rs:120:58
    |
120 |     pub fn get_snapshot<'g>(&self, direction: Direction, guard: &'g Guard) -> Option<&'g BoundarySnapshot> {
    |                                                          ^^^^^ help: if this is intentional, prefix it with an underscore: `_guard`

warning: unused variable: `potential_spawns_for_team`
   --> server/src/server/instance.rs:479:17
    |
479 |             let potential_spawns_for_team: Vec<Vec2> = team_spawn_areas.iter()
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_potential_spawns_for_team`

warning: unused variable: `team_spawn_areas`
    --> server/src/server/instance.rs:2407:9
     |
2407 |     let team_spawn_areas = crate::world::map_generator::MapGenerator::get_team_spawn_areas();
     |         ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_team_spawn_areas`

warning: unused variable: `bot_player_id_for_respawn`
    --> server/src/server/instance.rs:2435:13
     |
2435 |         let bot_player_id_for_respawn = Arc::new(bot_player_id_str.clone());
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bot_player_id_for_respawn`

warning: unused variable: `all_players`
   --> server/src/systems/ai/bot_ai.rs:326:9
    |
326 |         all_players: &HashMap<PlayerID, PlayerState>,
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_all_players`

warning: unused variable: `bot_id_str`
   --> server/src/systems/ai/bot_ai.rs:446:13
    |
446 |         let bot_id_str = bot_state.id.as_str();
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_bot_id_str`

warning: value assigned to `current_movement_target` is never read
   --> server/src/systems/ai/bot_ai.rs:449:17
    |
449 |         let mut current_movement_target: Option<Vec2> = None;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: type `SharedBroadcastData` is more private than the item `MassiveGameServer::build_delta_state_optimized`
    --> server/src/server/instance.rs:2501:1
     |
2501 | / pub async fn build_delta_state_optimized(
2502 | |     &self,
2503 | |     peer_id_str: &str,
2504 | |     client_state: &ClientState,
2505 | |     shared_data: &SharedBroadcastData,
2506 | | ) -> Result<Bytes, Box<dyn std::error::Error + Send + Sync>> {
     | |____________________________________________________________^ method `MassiveGameServer::build_delta_state_optimized` is reachable at visibility `pub`
     |
note: but type `SharedBroadcastData` is only usable at visibility `pub(self)`
    --> server/src/server/instance.rs:234:1
     |
234  | struct SharedBroadcastData {
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^
     = note: `#[warn(private_interfaces)]` on by default

warning: struct `MatchStatus` is never constructed
   --> server/src/core/types.rs:456:8
    |
456 | struct MatchStatus {
    |        ^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: associated function `create_pool` is never used
   --> server/src/concurrent/thread_pools.rs:105:8
    |
17  | impl ThreadPoolSystem {
    | --------------------- associated function in this implementation
...
105 |     fn create_pool(
    |        ^^^^^^^^^^^

warning: field `wall_hits` is never read
   --> server/src/server/instance.rs:124:5
    |
121 | struct ProjectileResults {
    |        ----------------- field in this struct
...
124 |     wall_hits: Vec<(EntityId, i32)>, // (wall_id, damage)
    |     ^^^^^^^^^
    |
    = note: `ProjectileResults` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: multiple associated items are never used
    --> server/src/server/instance.rs:1970:8
     |
301  | impl MassiveGameServer {
     | ---------------------- associated items in this implementation
...
1970 |     fn get_server_timestamp(&self) -> u64 {
     |        ^^^^^^^^^^^^^^^^^^^^
...
2724 | fn build_projectile_deltas_optimized<'a>(
     |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
2775 | fn build_events_fb<'a>(
     |    ^^^^^^^^^^^^^^^
...
2991 |     fn build_wall_deltas_optimized<'a>(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3048 |     fn build_player_deltas_optimized<'a>(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3120 |     fn create_fb_player_state_cached<'a>(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3368 |     async fn send_initial_state_to_client(&self, peer_id_str: &str, data_channel: &Arc<crate::core::types::RTCDataChannel>, client_state:...
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3549 |     async fn send_delta_state_to_client(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3870 |     async fn send_pending_chat_messages(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
4269 |     fn fb_safe_str(s: &str) -> String {
     |        ^^^^^^^^^^^

warning: constant `MAX_INITIAL_EVENTS` is never used
    --> server/src/server/instance.rs:3196:15
     |
3196 |         const MAX_INITIAL_EVENTS: usize = 30;
     |               ^^^^^^^^^^^^^^^^^^

warning: constant `MAX_INITIAL_KILL_FEED` is never used
    --> server/src/server/instance.rs:3197:15
     |
3197 |         const MAX_INITIAL_KILL_FEED: usize = 10;
     |               ^^^^^^^^^^^^^^^^^^^^^

warning: constant `MAX_FRAME_TIME_HISTORY` is never used
  --> server/src/server/game_loop.rs:25:7
   |
25 | const MAX_FRAME_TIME_HISTORY: usize = 100;
   |       ^^^^^^^^^^^^^^^^^^^^^^

warning: method `update_player_aoi_v3` is never used
   --> server/src/server/game_loop.rs:303:8
    |
28  | impl MassiveGameServer {
    | ---------------------- method in this implementation
...
303 |     fn update_player_aoi_v3(&self, player_id: &PlayerID, x: f32, y: f32) {
    |        ^^^^^^^^^^^^^^^^^^^^

warning: function `map_server_weapon_to_fb` is never used
   --> server/src/network/signaling.rs:130:4
    |
130 | fn map_server_weapon_to_fb(server_weapon: ServerWeaponType) -> fb::WeaponType {
    |    ^^^^^^^^^^^^^^^^^^^^^^^

warning: field `start_time` is never read
 --> server/src/operational/monitoring/metrics.rs:9:5
  |
8 | pub struct MetricsSystem {
  |            ------------- field in this struct
9 |     start_time: Instant,
  |     ^^^^^^^^^^

warning: constant `BOT_MAX_NAVIGATION_TARGET_DISTANCE` is never used
  --> server/src/systems/ai/bot_ai.rs:23:7
   |
23 | const BOT_MAX_NAVIGATION_TARGET_DISTANCE: f32 = 3000.0;
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `MAX_PATH_SEGMENT_LENGTH` is never used
   --> server/src/systems/ai/bot_ai.rs:391:15
    |
391 |         const MAX_PATH_SEGMENT_LENGTH: f32 = 800.0; 
    |               ^^^^^^^^^^^^^^^^^^^^^^^

warning: `metrics-exporter-prometheus` (lib) generated 6 warnings (5 duplicates)
warning: `webrtc` (lib) generated 5 warnings (5 duplicates)
warning: `massive_game_server_core` (lib) generated 57 warnings (5 duplicates) (run `cargo fix --lib -p massive_game_server_core` to apply 27 suggestions)
     Running `CARGO=/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/cargo CARGO_BIN_NAME=massive_game_server_core CARGO_CRATE_NAME=massive_game_server_core CARGO_MANIFEST_DIR=/home/ivo/massive_game_server/server CARGO_MANIFEST_PATH=/home/ivo/massive_game_server/server/Cargo.toml CARGO_PKG_AUTHORS='Trebuchet Network Contributors <contact@trebuchet.network>' CARGO_PKG_DESCRIPTION='A high-performance Rust game server core for massive multiplayer interactions, part of Project Trebuchet.' CARGO_PKG_HOMEPAGE='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_LICENSE=MIT CARGO_PKG_LICENSE_FILE='' CARGO_PKG_NAME=massive_game_server_core CARGO_PKG_README=README.md CARGO_PKG_REPOSITORY='https://github.com/TrebuchetNetwork/massive_game_server' CARGO_PKG_RUST_VERSION='' CARGO_PKG_VERSION=0.1.0 CARGO_PKG_VERSION_MAJOR=0 CARGO_PKG_VERSION_MINOR=1 CARGO_PKG_VERSION_PATCH=0 CARGO_PKG_VERSION_PRE='' CARGO_PRIMARY_PACKAGE=1 LD_LIBRARY_PATH='/home/ivo/massive_game_server/target/release/deps:/home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/lib' OUT_DIR=/home/ivo/massive_game_server/target/release/build/massive_game_server_core-4c7c9d4dd8853e24/out /home/ivo/.rustup/toolchains/1.86.0-x86_64-unknown-linux-gnu/bin/rustc --crate-name massive_game_server_core --edition=2021 server/src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C opt-level=3 -C panic=abort -C lto=fat -C codegen-units=1 --cfg 'feature="default"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("default", "jemalloc"))' -C metadata=4a8c2fd9c81e33fc -C extra-filename=-7d6ff2f9fd0086ef --out-dir /home/ivo/massive_game_server/target/release/deps -C strip=symbols -L dependency=/home/ivo/massive_game_server/target/release/deps --extern ahash=/home/ivo/massive_game_server/target/release/deps/libahash-d1cbaf2032fc975d.rlib --extern anyhow=/home/ivo/massive_game_server/target/release/deps/libanyhow-6e6caebf8bf55556.rlib --extern arc_swap=/home/ivo/massive_game_server/target/release/deps/libarc_swap-0608e6621d058498.rlib --extern bytes=/home/ivo/massive_game_server/target/release/deps/libbytes-1cd20c31651a0edf.rlib --extern core_affinity=/home/ivo/massive_game_server/target/release/deps/libcore_affinity-72ac57d5ed019a5c.rlib --extern crossbeam=/home/ivo/massive_game_server/target/release/deps/libcrossbeam-096a1ff00e12c9f2.rlib --extern crossbeam_epoch=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_epoch-d0658ce18407787c.rlib --extern crossbeam_queue=/home/ivo/massive_game_server/target/release/deps/libcrossbeam_queue-aba442d9063b04b5.rlib --extern dashmap=/home/ivo/massive_game_server/target/release/deps/libdashmap-fc2e0b90c94b2be7.rlib --extern env_logger=/home/ivo/massive_game_server/target/release/deps/libenv_logger-c9012cd947353b60.rlib --extern flatbuffers=/home/ivo/massive_game_server/target/release/deps/libflatbuffers-f1a4fdc8cb753882.rlib --extern futures=/home/ivo/massive_game_server/target/release/deps/libfutures-4d8e87475c11ef20.rlib --extern futures_util=/home/ivo/massive_game_server/target/release/deps/libfutures_util-1f569e2a6d812a59.rlib --extern libc=/home/ivo/massive_game_server/target/release/deps/liblibc-4e354bf6f7f90a88.rlib --extern massive_game_server_core=/home/ivo/massive_game_server/target/release/deps/libmassive_game_server_core-cd71b539ef50d894.rlib --extern metrics=/home/ivo/massive_game_server/target/release/deps/libmetrics-22ab11988786effe.rlib --extern metrics_exporter_prometheus=/home/ivo/massive_game_server/target/release/deps/libmetrics_exporter_prometheus-b7e3a44f97d59ed6.rlib --extern num_cpus=/home/ivo/massive_game_server/target/release/deps/libnum_cpus-0fcdabc4a86ed45f.rlib --extern once_cell=/home/ivo/massive_game_server/target/release/deps/libonce_cell-9ba434f6998147a5.rlib --extern parking_lot=/home/ivo/massive_game_server/target/release/deps/libparking_lot-9dabc6c29380194b.rlib --extern prometheus=/home/ivo/massive_game_server/target/release/deps/libprometheus-8eb3959fa6f259ee.rlib --extern quinn=/home/ivo/massive_game_server/target/release/deps/libquinn-c3b8c672a1cdba11.rlib --extern rand=/home/ivo/massive_game_server/target/release/deps/librand-b531e8d485ff4b84.rlib --extern rayon=/home/ivo/massive_game_server/target/release/deps/librayon-022a1067a421e5f2.rlib --extern seahash=/home/ivo/massive_game_server/target/release/deps/libseahash-4259b25369966ef5.rlib --extern serde=/home/ivo/massive_game_server/target/release/deps/libserde-517b2e6e11e3ed0e.rlib --extern serde_json=/home/ivo/massive_game_server/target/release/deps/libserde_json-f10a96ef83087e10.rlib --extern serde_with=/home/ivo/massive_game_server/target/release/deps/libserde_with-eb63d31a2556c2ba.rlib --extern serde_yaml=/home/ivo/massive_game_server/target/release/deps/libserde_yaml-54d8e07d63b9588a.rlib --extern smallvec=/home/ivo/massive_game_server/target/release/deps/libsmallvec-c9c64d992937ac3a.rlib --extern thiserror=/home/ivo/massive_game_server/target/release/deps/libthiserror-c68bc409044f4487.rlib --extern tokio=/home/ivo/massive_game_server/target/release/deps/libtokio-6cdaf2866e6d85a3.rlib --extern tracing=/home/ivo/massive_game_server/target/release/deps/libtracing-76740ab854628d38.rlib --extern tracing_subscriber=/home/ivo/massive_game_server/target/release/deps/libtracing_subscriber-f288bb14c6cfa7fa.rlib --extern uuid=/home/ivo/massive_game_server/target/release/deps/libuuid-d05ae4a3fb20b3bb.rlib --extern warp=/home/ivo/massive_game_server/target/release/deps/libwarp-1e7598ddab98ec94.rlib --extern webrtc=/home/ivo/massive_game_server/target/release/deps/libwebrtc-fb22c295c08aace9.rlib --extern zstd=/home/ivo/massive_game_server/target/release/deps/libzstd-4de81615094d21d3.rlib -C target-cpu=native -C target-feature=+avx512f,+avx512cd,+avx512bw,+avx512dq,+avx512vl -L native=/home/ivo/massive_game_server/target/release/build/ring-1fabc01d95165220/out -L native=/home/ivo/massive_game_server/target/release/build/ring-861549dd7d477a7b/out -L native=/home/ivo/massive_game_server/target/release/build/zstd-sys-87e92f9eca1f915e/out`
warning: unused import: `tokio::sync::RwLock`
  --> server/src/main.rs:14:5
   |
14 | use tokio::sync::RwLock;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `massive_game_server_core` (bin "massive_game_server_core") generated 6 warnings (5 duplicates) (run `cargo fix --bin "massive_game_server_core"` to apply 1 suggestion)
    Finished `release` profile [optimized] target(s) in 1m 45s
