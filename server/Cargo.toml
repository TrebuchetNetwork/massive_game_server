#[allow(unused_imports)]
#[allow(dead_code)]
#[allow(clippy::all)]
#[allow(warnings)]


[package]
name = "massive_game_server_core" # Or your desired public crate name
version = "0.1.0" # Start with an initial version
authors = ["Trebuchet Network Contributors <contact@trebuchet.network>"] # Or your details
edition = "2021"
description = "A high-performance Rust game server core for massive multiplayer interactions, part of Project Trebuchet."
license = "MIT"
readme = "README.md" # You might want a specific README for the crate itself, or point to the main one if it's suitable.
repository = "https://github.com/TrebuchetNetwork/massive_game_server" # URL to your GitHub repo
homepage = "https://github.com/TrebuchetNetwork/massive_game_server" # Optional
keywords = ["game-server", "multiplayer", "webrtc", "massive-scale", "trebuchet"]
categories = ["games", "network-programming", "simulation"] # Choose appropriate categories


[dependencies]
# Async runtime
tokio = { version = "1.37", features = ["full"] } # Or your preferred version



warp = "0.3.7" # From webrtc_shooter_server
futures-util = "0.3.31" # From webrtc_shooter_server
env_logger = "0.11.8" # Optional, for easier porting of webrtc_shooter_server logs


# Networking
webrtc = "0.11" # Or your preferred version
quinn = "0.10"  # Or your preferred version
# warp = "0.3" # If needed
bytes = "1.6" # Or your preferred version

# Serialization
flatbuffers = "25.2.10"  # Match the version in [dependencies], from webrtc_shooter_server
serde = { version = "1.0.197", features = ["derive", "rc"] } # Or your preferred version
serde_yaml = "0.9"
serde_json = "1.0"
serde_with = "3.7" # Or your preferred version

# Concurrency
dashmap = "5.5" # Or your preferred version
crossbeam = "0.8"
crossbeam-epoch = "0.9"
crossbeam-queue = "0.3"
parking_lot = "0.12"
rayon = "1.9" # Or your preferred version
arc-swap = "1.6" # Or your preferred version
futures = "0.3" # Added for block_on

# Memory & Performance
# mimalloc removed as we are using tikv-jemallocator conditionally
smallvec = "1.13"
ahash = "0.8"

# System
libc = "0.2"
# nix = { version = "0.28", features = ["process", "sched"] } # Or your preferred version
core_affinity = "0.8"
num_cpus = "1.16"

# Hashing
seahash = "4.1.0"

# Monitoring & Diagnostics
tracing = "0.1.40" # Or your preferred version
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json", "fmt"] } # Or your preferred version
metrics = "0.22" # Or your preferred version
metrics-exporter-prometheus = "0.13" # Or your preferred version
prometheus = "0.13" # For PerformanceMonitor

# Utils
uuid = { version = "1.8", features = ["v4", "serde"] } # Or your preferred version
rand = "0.8"
anyhow = "1.0.81" # Or your preferred version
thiserror = "1.0.58" # Or your preferred version
once_cell = "1.19" # Or your preferred version
# atomic = "0.6" # Usually not needed


# NUMA (stubs for now, actual library might be different or need more setup)
# [target.'cfg(target_os = "linux")'.dependencies]
# numa = { git = "https://github.com/cwpearson/numa-rs.git", branch = "master", optional = true } # Already git

# IO_URING (stubs for now, platform specific and complex)
# io_uring = "0.6.4" # Placeholder

# Compression
zstd = "0.13"

# Make tikv-jemallocator an optional dependency
[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { version = "0.5", features = ["stats", "profiling", "unprefixed_malloc_on_supported_platforms"], optional = true } # ✨ ADD optional = true HERE

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4" # Or your preferred version

[build-dependencies]
built = { version = "0.7", features = ["git2"] }
flatc-rust = "0.2" # From webrtc_shooter_server
flatbuffers = "25.2.10"  # Match the version in [dependencies], from webrtc_shooter_server

[features]
default = [] # Decide if jemalloc should be default or not
# If you want jemalloc by default (recommended for release builds of this server):
# default = ["jemalloc"]
jemalloc = ["dep:tikv-jemallocator"] # ✨ Use "dep:" syntax for optional dependencies in features

[[test]]
name = "walls_integration" # You can choose a name, e.g., "walls_integration" or keep "walls"
path = "tests/integration/walls.rs"


[[test]]
name = "basic_gameplay" # You can choose a name, e.g., "walls_integration" or keep "walls"
path = "tests/integration/basic_gameplay.rs"


[[test]]
name = "boundary_stress" # You can choose a name, e.g., "walls_integration" or keep "walls"
path = "tests/performance/boundary_stress.rs"